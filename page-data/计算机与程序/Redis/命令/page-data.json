{"componentChunkName":"component---src-templates-notebook-js","path":"/计算机与程序/Redis/命令/","result":{"data":{"markdownRemark":{"html":"<h2>SET</h2>\n<blockquote>\n<p>Time complexity: O(1)</p>\n</blockquote>\n<p>Set key to hold the string value. If key already holds a value, it is overwritten, regardless of its type. Any previous time to live associated with the key is discarded on successful SET operation.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Note that SET will replace any existing value already stored into the key, in the case that the key already exists, even if the key is associated with a non-string value. So SET performs an assignment.</p>\n<h3>Options</h3>\n<ul>\n<li>EX seconds: Set the specified expire time, in seconds.</li>\n<li>PX milliseconds: Set the specified expire time, in milliseconds.</li>\n<li>NX: Only set the key if it does not already exist.</li>\n<li>XX: Only set the key if it already exist.</li>\n</ul>\n<h3>Example</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token builtin class-name\">set</span> mykey newval nx\n<span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token builtin class-name\">set</span> mykey newval xx\n<span class=\"token string\">\"OK\"</span>\n<span class=\"token operator\">></span> SET anotherkey <span class=\"token string\">\"will expire in a minute\"</span> EX <span class=\"token number\">60</span>\n<span class=\"token string\">\"OK\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>GET</h2>\n<blockquote>\n<p>Time complexity: O(1)</p>\n</blockquote>\n<p>Get the value of key. If the key does not exist the special value nil is returned. An error is returned if the value stored at key is not a string, because GET only handles string values.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">GET <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>Example</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token operator\">></span> GET nonexisting\n<span class=\"token punctuation\">(</span>nil<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> SET mykey <span class=\"token string\">\"Hello\"</span>\n<span class=\"token string\">\"OK\"</span>\n<span class=\"token operator\">></span> GET mykey\n<span class=\"token string\">\"Hello\"</span>\nredis<span class=\"token operator\">></span> </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>INCR &#x26;&#x26; DECR</h2>\n<p>Even if strings are the basic values of Redis, there are interesting operations you can perform with them. For instance, one is atomic increment:</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E7%A8%8B%E5%BA%8F/Redis/%E5%91%BD%E4%BB%A4/#set\">SET</a></p>\n<ul>\n<li><a href=\"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E7%A8%8B%E5%BA%8F/Redis/%E5%91%BD%E4%BB%A4/#options\">Options</a></li>\n<li><a href=\"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E7%A8%8B%E5%BA%8F/Redis/%E5%91%BD%E4%BB%A4/#example\">Example</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E7%A8%8B%E5%BA%8F/Redis/%E5%91%BD%E4%BB%A4/#get\">GET</a></p>\n<ul>\n<li><a href=\"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E7%A8%8B%E5%BA%8F/Redis/%E5%91%BD%E4%BB%A4/#example-1\">Example</a></li>\n</ul>\n</li>\n<li><a href=\"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E7%A8%8B%E5%BA%8F/Redis/%E5%91%BD%E4%BB%A4/#incr--decr\">INCR &#x26;&#x26; DECR</a></li>\n</ul>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"title":"命令","tableOfContentsAST":[{"id":"root-undefined","value":"","depth":1,"children":[{"value":"SET","depth":2,"children":[{"value":"Options","depth":3},{"value":"Example","depth":3}]}]},{"id":"root-undefined","value":"","depth":1,"children":[{"value":"GET","depth":2,"children":[{"value":"Example","depth":3}]}]},{"id":"root-undefined","value":"","depth":1,"children":[{"value":"INCR && DECR","depth":2}]}],"headingIDs":[null,null,null,null,null,null]}}}