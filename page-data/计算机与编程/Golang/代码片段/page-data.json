{"componentChunkName":"component---src-templates-notebook-index-tsx","path":"/计算机与编程/Golang/代码片段/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"golang-代码片段\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Golang \\u4EE3\\u7801\\u7247\\u6BB5\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#golang-%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5\",\n    \"aria-label\": \"golang 代码片段 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h2\", {\n    \"id\": \"创建-worker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u521B\\u5EFA Worker\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%88%9B%E5%BB%BA-worker\",\n    \"aria-label\": \"创建 worker permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport \\\"fmt\\\"\\nimport \\\"time\\\"\\n\\n//\\u8FD9\\u4E2A\\u662F\\u5DE5\\u4F5C\\u7EBF\\u7A0B\\uFF0C\\u5904\\u7406\\u5177\\u4F53\\u7684\\u4E1A\\u52A1\\u903B\\u8F91\\uFF0C\\u5C06 jobs \\u4E2D\\u7684\\u4EFB\\u52A1\\u53D6\\u51FA\\uFF0C\\u5904\\u7406\\u540E\\u5C06\\u5904\\u7406\\u7ED3\\u679C\\u653E\\u7F6E\\u5728 results \\u4E2D\\u3002\\nfunc worker(id int, jobs <-chan int, results chan<- int) {\\n    for j := range jobs {\\n        fmt.Println(\\\"worker\\\", id, \\\"processing job\\\", j)\\n        time.Sleep(time.Second)\\n        results <- j * 2\\n    }\\n}\\n\\nfunc main() {\\n    //\\u4E24\\u4E2Achannel\\uFF0C\\u4E00\\u4E2A\\u7528\\u6765\\u653E\\u7F6E\\u5DE5\\u4F5C\\u9879\\uFF0C\\u4E00\\u4E2A\\u7528\\u6765\\u5B58\\u653E\\u5904\\u7406\\u7ED3\\u679C\\u3002\\n    jobs := make(chan int, 100)\\n    results := make(chan int, 100)\\n\\n    // \\u5F00\\u542F\\u4E09\\u4E2A\\u7EBF\\u7A0B\\uFF0C\\u4E5F\\u5C31\\u662F\\u8BF4\\u7EBF\\u7A0B\\u6C60\\u4E2D\\u53EA\\u67093\\u4E2A\\u7EBF\\u7A0B\\uFF0C\\u5B9E\\u9645\\u60C5\\u51B5\\u4E0B\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u6839\\u636E\\u9700\\u8981\\u52A8\\u6001\\u589E\\u52A0\\u6216\\u51CF\\u5C11\\u7EBF\\u7A0B\\u3002\\n    for w := 1; w <= 3; w++ {\\n        go worker(w, jobs, results)\\n    }\\n\\n    // \\u6DFB\\u52A09\\u4E2A\\u4EFB\\u52A1\\u540E\\u5173\\u95EDChannel\\n    // channel to indicate that's all the work we have.\\n    for j := 1; j <= 9; j++ {\\n        jobs <- j\\n    }\\n\\n    close(jobs)\\n\\n    //\\u83B7\\u53D6\\u6240\\u6709\\u7684\\u5904\\u7406\\u7ED3\\u679C\\n    for a := 1; a <= 9; a++ {\\n        <-results\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# Golang 代码片段\n\n## 创建 Worker\n\n```go\npackage main\n\nimport \"fmt\"\nimport \"time\"\n\n//这个是工作线程，处理具体的业务逻辑，将 jobs 中的任务取出，处理后将处理结果放置在 results 中。\nfunc worker(id int, jobs <-chan int, results chan<- int) {\n\tfor j := range jobs {\n\t\tfmt.Println(\"worker\", id, \"processing job\", j)\n\t\ttime.Sleep(time.Second)\n\t\tresults <- j * 2\n\t}\n}\n\nfunc main() {\n\t//两个channel，一个用来放置工作项，一个用来存放处理结果。\n\tjobs := make(chan int, 100)\n\tresults := make(chan int, 100)\n\n\t// 开启三个线程，也就是说线程池中只有3个线程，实际情况下，我们可以根据需要动态增加或减少线程。\n\tfor w := 1; w <= 3; w++ {\n\t\tgo worker(w, jobs, results)\n\t}\n\n\t// 添加9个任务后关闭Channel\n\t// channel to indicate that's all the work we have.\n\tfor j := 1; j <= 9; j++ {\n\t\tjobs <- j\n\t}\n\n\tclose(jobs)\n\n\t//获取所有的处理结果\n\tfor a := 1; a <= 9; a++ {\n\t\t<-results\n\t}\n}\n```\n","tableOfContents":{"items":[{"url":"#golang-代码片段","title":"Golang 代码片段","items":[{"url":"#创建-worker","title":"创建 Worker"}]}]},"fields":{"filePath":"/计算机与编程/Golang/代码片段.md"}}},"pageContext":{"title":"代码片段","modifiedTime":"2021-06-02 16:08"}},"staticQueryHashes":["63159454"]}