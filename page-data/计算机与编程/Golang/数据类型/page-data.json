{"componentChunkName":"component---src-templates-notebook-index-tsx","path":"/计算机与编程/Golang/数据类型/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"golang-数据类型\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Golang \\u6570\\u636E\\u7C7B\\u578B\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#golang-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\",\n    \"aria-label\": \"golang 数据类型 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Go \\u8BED\\u8A00\\u5C06\\u6570\\u636E\\u7C7B\\u578B\\u5206\\u4E3A\\u56DB\\u7C7B\\uFF1A\\u57FA\\u7840\\u7C7B\\u578B\\u3001\\u590D\\u5408\\u7C7B\\u578B\\u3001\\u5F15\\u7528\\u7C7B\\u578B\\u548C\\u63A5\\u53E3\\u7C7B\\u578B\\u3002\"), mdx(\"h2\", {\n    \"id\": \"数据类型分类\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u6570\\u636E\\u7C7B\\u578B\\u5206\\u7C7B\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%88%86%E7%B1%BB\",\n    \"aria-label\": \"数据类型分类 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h3\", {\n    \"id\": \"基础类型\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u57FA\\u7840\\u7C7B\\u578B\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B\",\n    \"aria-label\": \"基础类型 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"int: \\u6570\\u5B57\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"string: \\u5B57\\u7B26\\u4E32\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bool: \\u5E03\\u5C14\\u503C\")), mdx(\"h3\", {\n    \"id\": \"复合类型\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u590D\\u5408\\u7C7B\\u578B\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E5%A4%8D%E5%90%88%E7%B1%BB%E5%9E%8B\",\n    \"aria-label\": \"复合类型 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"array: \\u6570\\u7EC4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"struct: \\u7ED3\\u6784\\u4F53\")), mdx(\"h3\", {\n    \"id\": \"引用类型\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u5F15\\u7528\\u7C7B\\u578B\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B\",\n    \"aria-label\": \"引用类型 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pointer: \\u6307\\u9488\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"slice: \\u5207\\u7247\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"map: \\u5B57\\u5178\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"func: \\u51FD\\u6570\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"channel: \\u901A\\u9053\")), mdx(\"p\", null, \"\\u5B83\\u4EEC\\u90FD\\u662F\\u5BF9\\u7A0B\\u5E8F\\u4E2D\\u4E00\\u4E2A\\u53D8\\u91CF\\u6216\\u72B6\\u6001\\u7684\\u95F4\\u63A5\\u5F15\\u7528\\u3002\\u8FD9\\u610F\\u5473\\u7740\\u5BF9\\u4EFB\\u4E00\\u5F15\\u7528\\u7C7B\\u578B\\u6570\\u636E\\u7684\\u4FEE\\u6539\\u90FD\\u4F1A\\u5F71\\u54CD\\u6240\\u6709\\u8BE5\\u5F15\\u7528\\u7684\\u62F7\\u8D1D\\u3002\"), mdx(\"h3\", {\n    \"id\": \"接口类型\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u63A5\\u53E3\\u7C7B\\u578B\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E6%8E%A5%E5%8F%A3%E7%B1%BB%E5%9E%8B\",\n    \"aria-label\": \"接口类型 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"\\u63A5\\u53E3\\u7C7B\\u578B\\u662F\\u5BF9\\u5176\\u4ED6\\u7C7B\\u578B\\u884C\\u4E3A\\u7684\\u6982\\u62EC\\u4E0E\\u62BD\\u8C61\\u3002\\u901A\\u8FC7\\u4F7F\\u7528\\u63A5\\u53E3\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5199\\u51FA\\u66F4\\u52A0\\u7075\\u6D3B\\u548C\\u901A\\u7528\\u7684\\u51FD\\u6570\\uFF0C\\u8FD9\\u4E9B\\u51FD\\u6570\\u4E0D\\u7528\\u7ED1\\u5B9A\\u5728\\u4E00\\u4E2A\\u7279\\u5B9A\\u7684\\u7C7B\\u578B\\u5B9E\\u73B0\\u4E0A\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u4E2A\\u7C7B\\u578B\\u5982\\u679C\\u62E5\\u6709\\u4E00\\u4E2A\\u63A5\\u53E3\\u9700\\u8981\\u7684\\u6240\\u6709\\u65B9\\u6CD5\\uFF0C\\u90A3\\u4E48\\u8FD9\\u4E2A\\u7C7B\\u578B\\u5C31\\u5B9E\\u73B0\\u4E86\\u8FD9\\u4E2A\\u63A5\\u53E3\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u53EF\\u4EE5\\u7ED9\\u540C\\u4E00\\u4E2A\\u5305\\u5185\\u7684\\u4EFB\\u610F\\u547D\\u540D\\u7C7B\\u578B\\u5B9A\\u4E49\\u65B9\\u6CD5\\uFF0C\\u53EA\\u8981\\u8FD9\\u4E2A\\u547D\\u540D\\u7C7B\\u578B\\u7684\\u5E95\\u5C42\\u7C7B\\u578B\\u4E0D\\u662F\\u6307\\u9488\\u6216\\u8005 interface\\u3002\"), mdx(\"h2\", {\n    \"id\": \"基础类型转换\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u57FA\\u7840\\u7C7B\\u578B\\u8F6C\\u6362\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\",\n    \"aria-label\": \"基础类型转换 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h3\", {\n    \"id\": \"convert-between-string-and-bool\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Convert between \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"string\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"bool\"), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#convert-between-string-and-bool\",\n    \"aria-label\": \"convert between string and bool permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h4\", {\n    \"id\": \"string-to-bool\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"string\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"bool\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#string-to-bool\",\n    \"aria-label\": \"string to bool permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h5\", {\n    \"id\": \"strconvparsebool\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#ParseBool\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.ParseBool\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvparsebool\",\n    \"aria-label\": \"strconvparsebool permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"ParseBool returns the boolean value represented by the string. It accepts 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False. Any other value returns an error.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc ParseBool(str string) (bool, error)\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    strconv.ParseBool(\\\"true\\\") // true\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"bool-to-string\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"bool\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"string\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#bool-to-string\",\n    \"aria-label\": \"bool to string permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h5\", {\n    \"id\": \"strconvformatbool\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#FormatBool\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.FormatBool\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvformatbool\",\n    \"aria-label\": \"strconvformatbool permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"FormatBool returns \\\"true\\\" or \\\"false\\\" according to the value of b.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nstrconv.FormatBool(b bool) string\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    strconv.FormatBool(true)  // \\\"true\\\"\\n}\\n\")), mdx(\"h5\", {\n    \"id\": \"fmtsprintf\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/fmt/#Sprintf\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"fmt.Sprintf\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#fmtsprintf\",\n    \"aria-label\": \"fmtsprintf permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Sprintf formats according to a format specifier and returns the resulting string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package fmt\\n\\nfunc Sprintf(format string, a ...interface{}) string\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n    fmt.Sprintf(\\\"%t\\\",true)  // \\\"true\\\"\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"convert-between-string-and-int-int64\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Convert between \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"string\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"int\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"int64\"), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#convert-between-string-and-int-int64\",\n    \"aria-label\": \"convert between string and int int64 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"ref: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://yourbasic.org/golang/convert-int-to-string/#int-int64-to-string\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Convert between int, int64 and string\")), mdx(\"h4\", {\n    \"id\": \"string-to-int-int64\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"string\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"int\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"int64\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#string-to-int-int64\",\n    \"aria-label\": \"string to int int64 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h5\", {\n    \"id\": \"strconvatoi\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#Atoi\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.Atoi\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvatoi\",\n    \"aria-label\": \"strconvatoi permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Atoi is equivalent to ParseInt(s, 10, 0), converted to type int.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc Atoi(s string) (int, error)\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    v := \\\"10\\\"\\n\\n    if s, err := strconv.Atoi(v); err == nil {\\n        fmt.Printf(\\\"%T, %v\\\", s, s) // int, 10\\n    }\\n}\\n\")), mdx(\"h5\", {\n    \"id\": \"strconvparseint\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#ParseInt\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.ParseInt\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvparseint\",\n    \"aria-label\": \"strconvparseint permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"ParseInt interprets a string s in the given base (0, 2 to 36) and bit size (0 to 64) and returns the corresponding value i.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc ParseInt(s string, base int, bitSize int) (i int64, err error)\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    v32 := \\\"-354634382\\\"\\n    if s, err := strconv.ParseInt(v32, 10, 32); err == nil {\\n        fmt.Printf(\\\"%T, %v\\\\n\\\", s, s)\\n    }\\n\\n    v64 := \\\"-3546343826724305832\\\"\\n    if s, err := strconv.ParseInt(v64, 10, 64); err == nil {\\n        fmt.Printf(\\\"%T, %v\\\\n\\\", s, s)\\n    }\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"int-int64-to-string\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"int\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"int64\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"string\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#int-int64-to-string\",\n    \"aria-label\": \"int int64 to string permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h5\", {\n    \"id\": \"strconvitoa\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#Itoa\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.Itoa\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvitoa\",\n    \"aria-label\": \"strconvitoa permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Itoa\"), \" is equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FormatInt(int64(i), 10)\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc Itoa(i int) string\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    strconv.Itoa(10) // \\\"10\\\"\\n}\\n\")), mdx(\"h5\", {\n    \"id\": \"strconvformatint\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#FormatInt\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.FormatInt\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvformatint\",\n    \"aria-label\": \"strconvformatint permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"FormatInt returns the string representation of i in the given base, for 2 <= base <= 36. The result uses the lower-case letters 'a' to 'z' for digit values >= 10.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc FormatInt(i int64, base int) string\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    v := int64(-42)\\n\\n    s10 := strconv.FormatInt(v, 10)\\n    fmt.Printf(\\\"%T, %v\\\\n\\\", s10, s10) // \\u201Cstring, -42\\u201D\\n\\n    s16 := strconv.FormatInt(v, 16)\\n    fmt.Printf(\\\"%T, %v\\\\n\\\", s16, s16) // \\u201Cstring, -2a\\u201D\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"convert-between-string-and-float\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Convert between \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"string\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"float\"), mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#convert-between-string-and-float\",\n    \"aria-label\": \"convert between string and float permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"ref: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://yourbasic.org/golang/convert-string-to-float/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Convert between float and string\")), mdx(\"h4\", {\n    \"id\": \"string-to-float\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"string\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"float\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#string-to-float\",\n    \"aria-label\": \"string to float permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h5\", {\n    \"id\": \"strconvparsefloat\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#ParseFloat\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.ParseFloat\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvparsefloat\",\n    \"aria-label\": \"strconvparsefloat permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"ParseFloat converts the string s to a floating-point number with the precision specified by bitSize: 32 for float32, or 64 for float64. When bitSize=32, the result still has type float64, but it will be convertible to float32 without changing its value.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc ParseFloat(s string, bitSize int) (float64, error)\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    v := \\\"3.1415926\\\"\\n\\n    if s, err := strconv.ParseFloat(v, 32); err == nil {\\n        fmt.Printf(\\\"%T, %v\\\\n\\\", s, s)\\n    }\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"float-to-string\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"float\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"string\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#float-to-string\",\n    \"aria-label\": \"float to string permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h5\", {\n    \"id\": \"strconvformatfloat\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/strconv/#FormatFloat\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"strconv.FormatFloat\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#strconvformatfloat\",\n    \"aria-label\": \"strconvformatfloat permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"FormatFloat converts the floating-point number f to a string, according to the format fmt and precision prec. It rounds the result assuming that the original was obtained from a floating-point value of bitSize bits (32 for float32, 64 for float64).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package strconv\\n\\nfunc FormatFloat(f float64, fmt byte, prec, bitSize int) string\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"strconv\\\"\\n)\\n\\nfunc main() {\\n    v := 3.1415926535\\n\\n    s32 := strconv.FormatFloat(v, 'E', -1, 32) // 3.1415927E+00\\n    s64 := strconv.FormatFloat(v, 'E', -1, 64) // 3.1415926535E+00\\n\\n    fmt.Println(s32, s64)\\n}\\n\")), mdx(\"h5\", {\n    \"id\": \"fmtsprintf-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"https://golang.org/pkg/fmt/#Sprintf\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"fmt.Sprintf\")), mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"#fmtsprintf-1\",\n    \"aria-label\": \"fmtsprintf 1 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Sprintf formats according to a format specifier and returns the resulting string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package fmt\\n\\nfunc Sprintf(format string, a ...interface{}) string\\n\")), mdx(\"p\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    fmt.Sprintf(\\\"%f\\\", 123.456) // \\\"123.456000\\\"\\n    fmt.Sprintf(\\\"%.2f\\\", 123.456) // \\\"123.46\\\"\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# Golang 数据类型\n\nGo 语言将数据类型分为四类：基础类型、复合类型、引用类型和接口类型。\n\n## 数据类型分类\n\n### 基础类型\n\n- int: 数字\n- string: 字符串\n- bool: 布尔值\n\n### 复合类型\n\n- array: 数组\n- struct: 结构体\n\n### 引用类型\n\n- pointer: 指针\n- slice: 切片\n- map: 字典\n- func: 函数\n- channel: 通道\n\n它们都是对程序中一个变量或状态的间接引用。这意味着对任一引用类型数据的修改都会影响所有该引用的拷贝。\n\n### 接口类型\n\n接口类型是对其他类型行为的概括与抽象。通过使用接口，我们可以写出更加灵活和通用的函数，这些函数不用绑定在一个特定的类型实现上。\n\n一个类型如果拥有一个接口需要的所有方法，那么这个类型就实现了这个接口。\n\n我们可以给同一个包内的任意命名类型定义方法，只要这个命名类型的底层类型不是指针或者 interface。\n\n## 基础类型转换\n\n### Convert between `string` and `bool`\n\n#### `string` to `bool`\n\n##### [`strconv.ParseBool`](https://golang.org/pkg/strconv/#ParseBool)\n\nParseBool returns the boolean value represented by the string. It accepts 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False. Any other value returns an error.\n\n```go\npackage strconv\n\nfunc ParseBool(str string) (bool, error)\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"strconv\"\n)\n\nfunc main() {\n\tstrconv.ParseBool(\"true\") // true\n}\n```\n\n#### `bool` to `string`\n\n##### [`strconv.FormatBool`](https://golang.org/pkg/strconv/#FormatBool)\n\nFormatBool returns \"true\" or \"false\" according to the value of b.\n\n```go\npackage strconv\n\nstrconv.FormatBool(b bool) string\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"strconv\"\n)\n\nfunc main() {\n\tstrconv.FormatBool(true)  // \"true\"\n}\n```\n\n##### [`fmt.Sprintf`](https://golang.org/pkg/fmt/#Sprintf)\n\nSprintf formats according to a format specifier and returns the resulting string.\n\n```go\npackage fmt\n\nfunc Sprintf(format string, a ...interface{}) string\n```\n\nExample\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Sprintf(\"%t\",true)  // \"true\"\n}\n```\n\n\n### Convert between `string` and `int`, `int64`\n\nref: [Convert between int, int64 and string](https://yourbasic.org/golang/convert-int-to-string/#int-int64-to-string)\n\n#### `string` to `int`, `int64`\n\n##### [`strconv.Atoi`](https://golang.org/pkg/strconv/#Atoi)\n\nAtoi is equivalent to ParseInt(s, 10, 0), converted to type int.\n\n```go\npackage strconv\n\nfunc Atoi(s string) (int, error)\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := \"10\"\n\n\tif s, err := strconv.Atoi(v); err == nil {\n\t\tfmt.Printf(\"%T, %v\", s, s) // int, 10\n\t}\n}\n```\n\n##### [`strconv.ParseInt`](https://golang.org/pkg/strconv/#ParseInt)\n\nParseInt interprets a string s in the given base (0, 2 to 36) and bit size (0 to 64) and returns the corresponding value i.\n\n```go\npackage strconv\n\nfunc ParseInt(s string, base int, bitSize int) (i int64, err error)\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv32 := \"-354634382\"\n\tif s, err := strconv.ParseInt(v32, 10, 32); err == nil {\n\t\tfmt.Printf(\"%T, %v\\n\", s, s)\n\t}\n\n\tv64 := \"-3546343826724305832\"\n\tif s, err := strconv.ParseInt(v64, 10, 64); err == nil {\n\t\tfmt.Printf(\"%T, %v\\n\", s, s)\n\t}\n}\n```\n\n#### `int`, `int64` to `string`\n\n##### [`strconv.Itoa`](https://golang.org/pkg/strconv/#Itoa)\n\n`Itoa` is equivalent to `FormatInt(int64(i), 10)`.\n\n```go\npackage strconv\n\nfunc Itoa(i int) string\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"strconv\"\n)\n\nfunc main() {\n\tstrconv.Itoa(10) // \"10\"\n}\n```\n\n##### [`strconv.FormatInt`](https://golang.org/pkg/strconv/#FormatInt)\n\nFormatInt returns the string representation of i in the given base, for 2 <= base <= 36. The result uses the lower-case letters 'a' to 'z' for digit values >= 10.\n\n```go\npackage strconv\n\nfunc FormatInt(i int64, base int) string\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := int64(-42)\n\n\ts10 := strconv.FormatInt(v, 10)\n\tfmt.Printf(\"%T, %v\\n\", s10, s10) // “string, -42”\n\n\ts16 := strconv.FormatInt(v, 16)\n\tfmt.Printf(\"%T, %v\\n\", s16, s16) // “string, -2a”\n}\n```\n\n### Convert between `string` and `float`\n\nref: [Convert between float and string](https://yourbasic.org/golang/convert-string-to-float/)\n\n#### `string` to `float`\n\n##### [`strconv.ParseFloat`](https://golang.org/pkg/strconv/#ParseFloat)\n\nParseFloat converts the string s to a floating-point number with the precision specified by bitSize: 32 for float32, or 64 for float64. When bitSize=32, the result still has type float64, but it will be convertible to float32 without changing its value.\n\n```go\npackage strconv\n\nfunc ParseFloat(s string, bitSize int) (float64, error)\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := \"3.1415926\"\n\n\tif s, err := strconv.ParseFloat(v, 32); err == nil {\n\t\tfmt.Printf(\"%T, %v\\n\", s, s)\n\t}\n}\n```\n\n#### `float` to `string`\n\n##### [`strconv.FormatFloat`](https://golang.org/pkg/strconv/#FormatFloat)\n\nFormatFloat converts the floating-point number f to a string, according to the format fmt and precision prec. It rounds the result assuming that the original was obtained from a floating-point value of bitSize bits (32 for float32, 64 for float64).\n\n```go\npackage strconv\n\nfunc FormatFloat(f float64, fmt byte, prec, bitSize int) string\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := 3.1415926535\n\n\ts32 := strconv.FormatFloat(v, 'E', -1, 32) // 3.1415927E+00\n\ts64 := strconv.FormatFloat(v, 'E', -1, 64) // 3.1415926535E+00\n\n\tfmt.Println(s32, s64)\n}\n```\n\n##### [`fmt.Sprintf`](https://golang.org/pkg/fmt/#Sprintf)\n\nSprintf formats according to a format specifier and returns the resulting string.\n\n```go\npackage fmt\n\nfunc Sprintf(format string, a ...interface{}) string\n```\n\nExample\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.Sprintf(\"%f\", 123.456) // \"123.456000\"\n\tfmt.Sprintf(\"%.2f\", 123.456) // \"123.46\"\n}\n```\n","tableOfContents":{"items":[{"url":"#golang-数据类型","title":"Golang 数据类型","items":[{"url":"#数据类型分类","title":"数据类型分类","items":[{"url":"#基础类型","title":"基础类型"},{"url":"#复合类型","title":"复合类型"},{"url":"#引用类型","title":"引用类型"},{"url":"#接口类型","title":"接口类型"}]},{"url":"#基础类型转换","title":"基础类型转换","items":[{"url":"#convert-between-string-and-bool","title":"Convert between string and bool","items":[{"url":"#string-to-bool","title":"string to bool","items":[{"url":"#strconvparsebool","title":"strconv.ParseBool"}]},{"url":"#bool-to-string","title":"bool to string","items":[{"url":"#strconvformatbool","title":"strconv.FormatBool"},{"url":"#fmtsprintf","title":"fmt.Sprintf"}]}]},{"url":"#convert-between-string-and-int-int64","title":"Convert between string and int, int64","items":[{"url":"#string-to-int-int64","title":"string to int, int64","items":[{"url":"#strconvatoi","title":"strconv.Atoi"},{"url":"#strconvparseint","title":"strconv.ParseInt"}]},{"url":"#int-int64-to-string","title":"int, int64 to string","items":[{"url":"#strconvitoa","title":"strconv.Itoa"},{"url":"#strconvformatint","title":"strconv.FormatInt"}]}]},{"url":"#convert-between-string-and-float","title":"Convert between string and float","items":[{"url":"#string-to-float","title":"string to float","items":[{"url":"#strconvparsefloat","title":"strconv.ParseFloat"}]},{"url":"#float-to-string","title":"float to string","items":[{"url":"#strconvformatfloat","title":"strconv.FormatFloat"},{"url":"#fmtsprintf-1","title":"fmt.Sprintf"}]}]}]}]}]},"fields":{"filePath":"/计算机与编程/Golang/数据类型.md"}}},"pageContext":{"title":"数据类型","modifiedTime":"2021-05-31 20:07"}},"staticQueryHashes":["63159454"]}