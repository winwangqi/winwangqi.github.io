{"componentChunkName":"component---src-templates-notebook-index-js","path":"/计算机与编程/正则表达式/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"正则表达式\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\", mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\",\n    \"aria-label\": \"正则表达式 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"h2\", {\n    \"id\": \"qa\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Q&A\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#qa\",\n    \"aria-label\": \"qa permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"h3\", {\n    \"id\": \"what-is-the-difference-between--and--regular-expressions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"What is the difference between .\", mdx(\"em\", {\n    parentName: \"h3\"\n  }, \"? and .\"), \" regular expressions?\", mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#what-is-the-difference-between--and--regular-expressions\",\n    \"aria-label\": \"what is the difference between  and  regular expressions permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/3075130/what-is-the-difference-between-and-regular-expressions\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }), \"stack overflow\")), mdx(\"div\", {\n    \"className\": \"remark-container \"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"remark-container-content\"\n  }), mdx(\"p\", {\n    parentName: \"div\"\n  }, \"It is the difference between greedy and non-greedy quantifiers.\"), mdx(\"p\", {\n    parentName: \"div\"\n  }, \"Consider the input 101000000000100.\"), mdx(\"p\", {\n    parentName: \"div\"\n  }, \"Using 1.\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"1, \"), \" is greedy - it will match all the way to the end, and then backtrack until it can match 1, leaving you with 1010000000001.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \".\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"? is non-greedy. \"), \" will match nothing, but then will try to match extra characters until it matches 1, eventually matching 101.\"), mdx(\"p\", {\n    parentName: \"div\"\n  }, \"All quantifiers have a non-greedy mode: .*?, .+?, .{2,6}?, and even .??.\"), mdx(\"p\", {\n    parentName: \"div\"\n  }, \"In your case, a similar pattern could be <(\", mdx(\"sup\", _extends({\n    parentName: \"p\"\n  }, {\n    \"id\": \"fnref->\"\n  }), mdx(\"a\", _extends({\n    parentName: \"sup\"\n  }, {\n    \"href\": \"#fn->\",\n    \"className\": \"footnote-ref\"\n  }), \">\")), \"*)> - matching anything but a greater-than sign (strictly speaking, it matches zero or more characters other than > in-between < and >).\"))), mdx(\"h3\", {\n    \"id\": \"regular-expression-to-get-a-string-between-parentheses-in-javascript\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Regular Expression to get a string between parentheses in Javascript\", mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#regular-expression-to-get-a-string-between-parentheses-in-javascript\",\n    \"aria-label\": \"regular expression to get a string between parentheses in javascript permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/17779744/regular-expression-to-get-a-string-between-parentheses-in-javascript\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }), \"stack overflow\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var regExp = /\\\\(([^)]+)\\\\)/;\\nvar matches = regExp.exec(\\\"I expect five hundred dollars ($500).\\\");\\n\\n//matches[1] contains the value between the parentheses\\nconsole.log(matches[1]);\\n\")), mdx(\"h2\", {\n    \"id\": \"常见正则表达式\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u5E38\\u89C1\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E5%B8%B8%E8%A7%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\",\n    \"aria-label\": \"常见正则表达式 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"h3\", {\n    \"id\": \"english\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"English\", mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#english\",\n    \"aria-label\": \"english permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-regexp\"\n  }), \"/^[a-zA-Z0-9$@$!%*?&#^-_. +]+$/\\n\")), mdx(\"h2\", {\n    \"id\": \"工具\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u5DE5\\u5177\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%E5%B7%A5%E5%85%B7\",\n    \"aria-label\": \"工具 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.regexplained.co.uk/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }), \"Regexplained\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.regextester.com/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }), \"RegExp Testing\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#正则表达式","title":"正则表达式","items":[{"url":"#qa","title":"Q&A","items":[{"url":"#what-is-the-difference-between--and--regular-expressions","title":"What is the difference between .? and . regular expressions?"},{"url":"#regular-expression-to-get-a-string-between-parentheses-in-javascript","title":"Regular Expression to get a string between parentheses in Javascript"}]},{"url":"#常见正则表达式","title":"常见正则表达式","items":[{"url":"#english","title":"English"}]},{"url":"#工具","title":"工具"}]}]},"fields":{"filePath":"/计算机与编程/正则表达式.md"}}},"pageContext":{"title":"正则表达式","modifiedTime":"2020-11-12 15:02"}},"staticQueryHashes":["63159454"]}