{"componentChunkName":"component---src-templates-notebook-index-tsx","path":"/计算机与编程/JavaScript/设计模式/工厂模式/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"工厂模式\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u5DE5\\u5382\\u6A21\\u5F0F\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F\",\n    \"aria-label\": \"工厂模式 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h2\", {\n    \"id\": \"介绍\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u4ECB\\u7ECD\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%BB%8B%E7%BB%8D\",\n    \"aria-label\": \"介绍 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"\\u5DE5\\u5382\\u6A21\\u5F0F\\uFF08Factory Pattern\\uFF09\\u5C5E\\u4E8E\\u521B\\u5EFA\\u578B\\u6A21\\u5F0F\\uFF0C\\u5B83\\u63D0\\u4F9B\\u4E86\\u4E00\\u79CD\\u521B\\u5EFA\\u5BF9\\u8C61\\u7684\\u6700\\u4F73\\u65B9\\u5F0F\\u3002\\u5B9A\\u4E49\\u4E00\\u4E2A\\u521B\\u5EFA\\u5BF9\\u8C61\\u7684\\u63A5\\u53E3\\uFF0C\\u8BA9\\u5176\\u5B50\\u7C7B\\u81EA\\u5DF1\\u51B3\\u5B9A\\u5B9E\\u4F8B\\u5316\\u54EA\\u4E00\\u4E2A\\u5DE5\\u5382\\u7C7B\\uFF0C\\u5DE5\\u5382\\u6A21\\u5F0F\\u4F7F\\u5176\\u521B\\u5EFA\\u8FC7\\u7A0B\\u5EF6\\u8FDF\\u5230\\u5B50\\u7C7B\\u8FDB\\u884C\\u3002\"), mdx(\"h2\", {\n    \"id\": \"示例\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u793A\\u4F8B\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E7%A4%BA%E4%BE%8B\",\n    \"aria-label\": \"示例 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"class Car {\\n  constructor(name, color) {\\n    this.name = name\\n    this.color = color\\n  }\\n  \\n  run() {\\n    console.log(`The ${this.color} ${this.name} is runing...`)\\n  }\\n}\\n\\nclass BMW extends Car {\\n  constructor() {\\n    super.constructor('BMW', 'red');\\n  }\\n}\\n\\nclass Tesla extends Car {\\n  constructor() {\\n    super.constructor('Tesla', 'black');\\n  }\\n}\\n\\nclass BYD extends Car {\\n  constructor() {\\n    super.constructor('BYD', 'white');\\n  }\\n}\\n\\nfunction createCar(brand) {\\n  let car\\n  \\n  switch (brand) {\\n    case 'BMW':\\n      car = new BMW()\\n      break\\n    case 'Tesla':\\n      car = new Tesla()\\n      break\\n    default:\\n      car = new BYD()\\n      break\\n  }\\n  \\n  return car\\n}\\n\\nconst carBMW = createCar('BMW')\\nconst carTesla = createCar('Tesla')\\n\")), mdx(\"h2\", {\n    \"id\": \"使用场景\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u4F7F\\u7528\\u573A\\u666F\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\",\n    \"aria-label\": \"使用场景 permalink\",\n    \"className\": \"autolink-header-icon after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"height\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"20\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u65E5\\u5FD7\\u8BB0\\u5F55\\u5668\\uFF1A\\u8BB0\\u5F55\\u53EF\\u80FD\\u8BB0\\u5F55\\u5230\\u672C\\u5730\\u786C\\u76D8\\u3001\\u7CFB\\u7EDF\\u4E8B\\u4EF6\\u3001\\u8FDC\\u7A0B\\u670D\\u52A1\\u5668\\u7B49\\uFF0C\\u7528\\u6237\\u53EF\\u4EE5\\u9009\\u62E9\\u8BB0\\u5F55\\u65E5\\u5FD7\\u5230\\u4EC0\\u4E48\\u5730\\u65B9\\u3002\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u6570\\u636E\\u5E93\\u8BBF\\u95EE\\uFF0C\\u5F53\\u7528\\u6237\\u4E0D\\u77E5\\u9053\\u6700\\u540E\\u7CFB\\u7EDF\\u91C7\\u7528\\u54EA\\u4E00\\u7C7B\\u6570\\u636E\\u5E93\\uFF0C\\u4EE5\\u53CA\\u6570\\u636E\\u5E93\\u53EF\\u80FD\\u6709\\u53D8\\u5316\\u65F6\\u3002\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# 工厂模式\n\n## 介绍\n\n工厂模式（Factory Pattern）属于创建型模式，它提供了一种创建对象的最佳方式。定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。\n\n## 示例\n\n```javascript\nclass Car {\n  constructor(name, color) {\n    this.name = name\n    this.color = color\n  }\n  \n  run() {\n    console.log(`The ${this.color} ${this.name} is runing...`)\n  }\n}\n\nclass BMW extends Car {\n  constructor() {\n    super.constructor('BMW', 'red');\n  }\n}\n\nclass Tesla extends Car {\n  constructor() {\n    super.constructor('Tesla', 'black');\n  }\n}\n\nclass BYD extends Car {\n  constructor() {\n    super.constructor('BYD', 'white');\n  }\n}\n\nfunction createCar(brand) {\n  let car\n  \n  switch (brand) {\n    case 'BMW':\n      car = new BMW()\n      break\n    case 'Tesla':\n      car = new Tesla()\n      break\n    default:\n      car = new BYD()\n      break\n  }\n  \n  return car\n}\n\nconst carBMW = createCar('BMW')\nconst carTesla = createCar('Tesla')\n```\n\n## 使用场景\n\n- 日志记录器：记录可能记录到本地硬盘、系统事件、远程服务器等，用户可以选择记录日志到什么地方。\n- 数据库访问，当用户不知道最后系统采用哪一类数据库，以及数据库可能有变化时。","tableOfContents":{"items":[{"url":"#工厂模式","title":"工厂模式","items":[{"url":"#介绍","title":"介绍"},{"url":"#示例","title":"示例"},{"url":"#使用场景","title":"使用场景"}]}]},"fields":{"filePath":"/计算机与编程/JavaScript/设计模式/工厂模式.md"}}},"pageContext":{"title":"工厂模式","modifiedTime":"2021-05-25 15:07"}},"staticQueryHashes":["63159454"]}