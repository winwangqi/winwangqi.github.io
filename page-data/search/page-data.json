{"componentChunkName":"component---src-templates-client-search-index-js","path":"/search","result":{"pageContext":{"allPageData":[{"path":"/行业知识/航空业/Performance Indicators/","rawBody":""},{"path":"/计算机与编程/工具/Git/Config/","rawBody":""},{"path":"/YouTube/","rawBody":"Optimistic Nihilism <Video iframe src=\"https://www.youtube.com/embed/MBRqu0YOH14\" /> Wear Are You - 風格，決定你的人格 | Yu Lee Yutopia | TEDxNTHU <Video iframe src=\"https://www.youtube.com/embed/YQKWd5e1TH0\" /> 笔记 独立思考 為什麼不該追求愛情 Why shouldn't we \"pursue\" love? | 國洋 張 | TEDxFJU <Video iframe src=\"https://www.youtube.com/embed/O2ucDApdbvs\" /> 笔记 建立个人品牌"},{"path":"/健康/","rawBody":"健康 腰椎间盘突出能治好吗？ 简简单单三个动作，赶走腰痛"},{"path":"/学习规划/","rawBody":"学习规划 技术 redis shell 脚本 sh bash ash zsh config 文件 json yaml ini conf"},{"path":"/杂记/","rawBody":"杂记 常态偏差指的是，人们倾向于相信事物将会以正常的方式运行，不太可能出现不正常的情况，从而低估了灾难的可能性和影响程度。 在法律上，IP 就是知识产权（Intellectual Property），即著作权、商标权与专利权。 所谓创意，只是把原有的元素重新组合而已。 这是美国广告大师詹姆斯·韦伯·扬（James Webb Young）撰写的《创意的生成》（A Technique for Producing Ideas）一书中的名句。 罗素在受采访，被问及关于自己的一生，以及一生的感悟，有什么想对人们说的时，他提到， 其一关乎智慧，其二关乎道德。 有关智慧，我想对他们说的是：不管你是在研究什么事物，还是在思考任何观点，只问你自己事实是什么？以及这些事实所证明的真理是什么？永远不要让自己被自己所更愿意相信的，或者认为人们相信了，会对社会更有益的东西所影响。只是单单地去审视，什么才是事实。我们必须学会接受这样一个事实：总会有人说出我们不想听的话。只有这样，我们才有可能共同生存。而假如我们想要共存，而非共亡，我们就必须学会这种宽容与忍让，因为它们对于人类在这个星球上的存续，是至关重要的。 关于道德，十分简单。爱是明智的，恨是愚蠢的。在这个日益紧密相连的世界，我们必须学会容忍彼此。\" 采访记录 <Video iframe src=\"https://v.qq.com/txp/iframe/player.html?vid=s1331c41f8f\" />"},{"path":"/设计资源/","rawBody":"设计资源 iconfont : 阿里妈妈MUX倾力打造的矢量图标管理、交流平台。 unDraw : 简约风设计资源"},{"path":"/诗歌/","rawBody":"诗歌 春天的祈祷 -- 罗伯特·弗罗斯特 哦，请在今日赐予我们花丛中的欢乐 不要让我们挂念太远的未来 丰收是件不确定的事情 让我们在这里，纯粹地享受一年中的春日 沙漠 -- 周将 这里荒芜寸草不生 后来你来这走了一遭 奇迹般万物生长 这里是我的心 当你老了 -- 威廉·巴特勒·叶芝 当你老了 ——威廉·巴特勒·叶芝 当你老了，头发花白，睡意沉沉， 倦坐在炉边，取下这本书来， 慢慢读着，追梦当年的眼神 你那柔美的神采与深幽的晕影。 多少人爱过你昙花一现的身影， 爱过你的美貌，以虚伪或真情， 惟独一人曾爱你那朝圣者的心， 爱你哀戚的脸上岁月的留痕。 在炉罩边低眉弯腰， 忧戚沉思，喃喃而语， 爱情是怎样逝去，又怎样步上群山， 怎样在繁星之间藏住了脸。 When you are old --- William Butler Yeats  When you are old and grey and full of sleep, And nodding by the fire，take down this book, And slowly read,and dream of the soft look Your eyes had once,and of their shadows deep; How many loved your moments of glad grace, And loved your beauty with love false or true, But one man loved the pilgrim Soul in you And loved the sorrows of your changing face; And bending down beside the glowing bars, Murmur,a little sadly,how Love fled And paced upon the mountains overhead And hid his face amid a crowd of stars."},{"path":"/说话的艺术/","rawBody":"说话的艺术 在几乎任何情况下，最好都要先让对方解释说明，再进行申辩。在你选择支持某一方之前，一定先要提出“等等，你说什么？”这个问题。换言之，永远将提问放在辩护之前。 说话 14 规则 用“是的，而且……”作为开始来回应他人的提议、想法或话题，从而在应和的同时丰富话题的内容、保持对话的流畅。 对出现在你面前的任何话题做出回应，因为它们的出现可能是有原因的。 千万不要要求别人回答宽泛的问题，因为这样会让人觉得有负担，而且还可能打断别人的玩笑。 身处当下，尽可能地成为观察者，以便掌握互动的来龙去脉。 请提供能让对方参考、回应、推进的细节。 千万别把“不”作为一句话的开头，因为它忽视了对方希望的聊天走向，使双方难以为着共同的目标努力。 不断向前推进互动，停滞就意味着失败。 即兴表演的目的就是娱乐其他演员和观众，创造有趣的情境。 精彩的即兴话剧表演是在当下情境中自然而然的创作，任何固定的程序和事先设定的提纲，都会使这种自主的创作难以发挥出来。 既然你们是在为共同的目标努力，对在其他人来说那儿，你就是配角。所以，尽你所能让团队中其他即兴话剧演员表现出色。那么，反过来，他们也会这么帮助你。 把先前的具体要点整合到从不同语境下的互动中，以创造令人捧腹的笑点。 演员之所以被称为选手，表演之所以被视为运动项目，是因为像任何体育运动一样，每个人都要经过不断地练习，才能取得最好的成绩。 即兴话剧表演就是与他人的互动，如果你总想迫不及待地发表观点，顾不得倾听，就无法做到与他人互动。有些时候，你只需闭上嘴，做个听众就好。 如果其他方法都无效，那么就谈谈历史，哲学，或运用比喻。 针对抱怨的回复 对已发生的情况进行道歉 对您不得不经历的这一切，我感到非常抱歉 表达对对方的感受的理解 我完全理解您的感受 这真是糟糕 如果我是你，我也会和你有一样的感觉 这真是令人不可接受 重复以确保得到准确的信息 提出解决方案 说话的问题 当众说话紧张； 细声细语，没有感情，没有热情，没有能量； 繁复啰嗦，无重点，无逻辑； 没有储备足够多的知识、故事、话题； 容易说错话，容易冷场、容易终结话题； 不会延续话题、不会转移话题； 缺乏幽默感； 地方口音、甚至口吃； 其它 请问有哪些实用的冷读术技巧？"},{"path":"/English/FAQs/","rawBody":"Why do they say “may not” for things which people shouldn't do? I have seen in so many place where they would have mentioned \"You may not..\" etc for the things people shouldn't do. For eg: in companies where USB is not allowed, they will mention like this \"You may not use USB/CD etc\", similarly \"You may not download free softwares\", \"You may not tailgate the doors\" etc. These all things should be like this right \"You should not use USB/CD etc\", \"You should not download free softwares\" etc, this \"May not\" seems like saying \"optional\" it may indicate like \"people may follow\" etc Can anyone guide me in this? I always get confuse in this. In this context, may means that you have permission to do something, so may not means you are not permitted to do something. should is generally interpreted less strictly, as describing a desire or strong suggestion, rather than a requirement. So should not means that they would prefer or recommend you not do something, not that it's prohibited. For example, You should not go swimming during a thunderstorm. Sometimes these can be conflated, though. You should not drive above the speed limit, because it's against the law and you might get a ticket."},{"path":"/English/学习资源/","rawBody":"英语学习资源 Grammar 8 Websites Where You Can Practice English Grammar EnglishGrammar EnglishClub Perfect English Grammar 词根词缀 【史上最全词根词缀表】 (To be the best) 词根、词缀、词源在线查询【词根词缀字典】 Thesaurus and Word Tools | WordHippo"},{"path":"/English/缩写/","rawBody":"常见缩写 Abbr Description GMT Greenwich Mean Time UTC Universal Coordinated Time DST Daylight Saving Time"},{"path":"/关于此网站/Deploy/","rawBody":"/home/docker下创建给jenkins挂挂载数据用的目录 jenkins  (记得 chown 修改目录的权限到docker组) 安装jenkins 3.1 稳定版本使用,不经常更新 1. 执行启动脚本 3.2 没事喜欢升级版本完的. 1. 修改启动脚本中的参数, 增加 --rm, 去掉--restart always (这俩冲突) 以上两个区别在于是否在关闭服务的时候自动删除container 手动更新镜像命令 docker pull jenkins/jenkins:latest  //拉取最新版本镜像到本地. 启动脚本内容 docker run -d --rm \\ --name jenkins \\ --publish 10082:8080 \\ --volume /home/docker/jenkins:/var/jenkins_home \\ jenkins/jenkins:latest admin 0591df07cd6847ef9c67be5e4b95336f 把你笔记本固定ip. 然后直接路由器DMZ."},{"path":"/关于此网站/功能需求/","rawBody":"功能需求 功能列表 左侧导航栏（支持多级菜单） *** 内容由 Markdown 驱动 *** 支持 MDX *** 自动化构建与部署 *** 响应式页面 *** Sidebar 默认打开已选中的 tree Toc 同步滚动当前内容 ** Sidebar 可折叠 ** Sidebar 搜索功能 ** Sidebar 拖拽排序 * 全局搜索功能（已实现本地搜索） ** 支持多主题（至少支持黑暗模式） * 支持多背景 用户身份验证 * 支持 PWA * 使用 Git 子模块 * markdown 支持流程图 * markdown 支持思维导图 * 开发语言切换 typescript * 添加测试 * 支持前后翻页 * 侧边栏的添加文件配置自动创建 markdown 文件 *"},{"path":"/关于此网站/导航/","rawBody":"网站导航 kityminder"},{"path":"/关于此网站/技术选型/","rawBody":"基于功能的需求和实现的难度，可使用静态网站生成器。常见的静态网站生成器技术如下： 静态网站生成工具 Gatsby.js Hugo docify Docusaurus VuePress Docute 自动化构建部署工具 Jenkins CircleCI TeamCity Github Actions"},{"path":"/爱情的味道/","rawBody":"爱情的味道 爱是克制，爱是给予，爱是关心，爱是责任心，爱是尊重，爱是了解。 如果不曾遇见过你，我本可以忍受孤独。 生活中最大的情感痛苦莫过于想爱而不去爱。 你要是愿意，我就永远爱你。你要是不愿意，我就永远相思。 -- 王小波 眼里藏星河，笑中带月光。 海底月是天上月，眼前人是心上人。向来心是看客心，奈何人是剧中人。 有一天女孩问男孩\"ABCDEFG\"是什么意思，男孩回答：\"A boy can do everything for girl\"（一个男孩能为女孩做任何事情) 女孩很感动，有人告诉她别忘了后面还有\"HIJK\"――\"He is just kidding!\"(他只是在开玩笑) 女孩回答：就算他骗我也没关系，后面还有\"LMNOP\"――\"Love must need our patience\"(爱必须有耐心) 假如爱有天意 当阳光照在海面上，我思念你 当朦胧月色洒在泉水上，我思念你 看着窗外，如果树枝在风中轻轻摇曳，你爱的人便也在爱着你 张开耳朵，如果你听到自己的心跳，你爱的人便也在爱着你 闭上眼睛，如果你唇边有一丝微笑，你爱的人便也在爱着你"},{"path":"/计算机与编程/RxJS/","rawBody":"RxJS RxJS 官网 RxJS 入门指引和初步应用 Learn RxJS"},{"path":"/计算机与编程/UserAgent/","rawBody":"UserAgent tobie/ua-parser A multi-language port of Browserscope's user agent parser. ua-parser/uap-core The regex file necessary to build language ports of Browserscope's user agent parser."},{"path":"/计算机与编程/favorites/","rawBody":"收藏夹 工具集合 docz  - ✍ It has never been so easy to document your things!  https://docz.site x0  - Document & develop React components without breaking a sweat  https://compositor.io/x0/ documentation  - 📖 documentation for modern JavaScript  http://documentation.js.org/ react-markdown  - Render Markdown as React components  https://rexxars.github.io/react-markd… netlifycms  - Open source content management for your Git workflow infima  - A modern styling framework for content-driven websites 🔥 unified  - Content as structured data 软件工程 网易新闻 App 架构重构实践：DDD 正走向流行"},{"path":"/计算机与编程/markdown 生态/","rawBody":"markdown 相关资源 remarkable Markdown parser, done right. Commonmark support, extensions, syntax plugins, high speed - all in one. Gulp and metalsmith plugins available. Used by Facebook, Docusaurus and many others! Use  https://github.com/breakdance/breakdance  for HTML-to-markdown conversion. Use  https://github.com/jonschlinkert/markdown-toc  to generate a table of contents.  https://jonschlinkert.github.io/remar… markdown-it Markdown parser, done right. 100% CommonMark support, extensions, syntax plugins & high speed  https://markdown-it.github.io remark remark is a Markdown processor powered by plugins part of the unified collective. awesome-remark plugins remark-admonitions  — Add admonitions support to Remarkable remark-breaks  — remark plugin to add break support, without needing spaces. remark-mermaid  - A remark plugin for Markdown that replaces mermaid graphs with rendered SVGs. remark-smcat  - Simple remark plugin wrapper around state-machine-cat for rendering diagrams inline. remark-bookmarks  - remark plugin to manage links. remark-bracketed-spans  - Add an id, classes, and data attributes to  <span>  tags in markdown. remark-code-import  - 📝 Populate code blocks from files                                                                       remark-code-screenshot  - Remark plugin to convert code blocks into carbon.now.sh screenshots.                                                                       remark-strip-badges  - plugin to strip badges (such as shields.io)  https://remark.js.org Remark Macro  - Adding support for block macros in remark zmarkdown  - This plugin parses custom Markdown syntax to describe tables. It was inspired by this syntax. remark-footnotes  - remark plugin to add support for footnotes. remark-math  - plugins to support math  https://remark.js.org remark-containers  - Remark plugin to add custom containers to markdown remark-math  - remark and rehype plugins to support math! remark-custom-blocks  - This plugin parses custom Markdown syntax to create new custom blocks. It adds new nodes types to the mdast produced by remark: remark-variables  - This plugin adds variables support to remark using a customizable template syntax. Variables are checked against both the vfile's, and processor's data property and can use both dot and bracket syntax. For example, foo.bar 0  resolve to vfile.data.foo.bar 0  if it exists, or do nothing if the property does not exist. By default, this plugin uses double curly braces {{, }} to denote variables but can be configured.          rehype HTML processor powered by plugins part of the @unifiedjs collective  https://unifiedjs.com retext natural language processor powered by plugins part of the @unifiedjs collective  https://unifiedjs.com Remarkable mermaid Generation of diagrams and flowcharts from text in a similar manner as markdown. MDX MDX is an authorable format that lets you seamlessly write JSX in your Markdown documents. You can import components, such as interactive charts or alerts, and embed them within your content. This makes writing long-form content with components a blast 🚀. live code https://mdxjs.com/guides/live-code https://github.com/FormidableLabs/react-live Showdown A Markdown to HTML bidirectional converter written in Javascript! https://github.com/showdownjs/showdown http://demo.showdownjs.com/ marked A markdown parser and compiler. Built for speed."},{"path":"/计算机与编程/如何快速学习一门编程语言/","rawBody":"如何快速学习一门编程语言 编程语言基础 数据类型 变量声明 流程控制 函数"},{"path":"/计算机与编程/学习资源/","rawBody":"学习资源 Google Developer Microsoft Developer MDN IBM Developer Facebook Developer Twitter Developer 斯坦福大学公开课：编程方法学28集全 免费的编程中文书籍索引 google/WebFundamentals  |  Web Fundamentals github/opensource.guide  |  Web Fundamentals  |  opensource.guide : 📚 Community guides for open source creators 代码风格 Google Style Guides : Style guides for Google-originated open-source projects                                                                                                                                            Online School 优达学城 (Udacity) Coursera Khan Academy Lynda Codecademy Treehouse Code School edX 慕课网 Udemy Frontend Masters egghead.io 网易云课堂 Google Developer Training Traversy Media The Best Laravel and PHP Screencasts 百度技术学院 NodeSchool 极客学院 Pluralsight | Unlimited Online Developer, IT and Creative Training Node 爱好者 Learn to Code and Help Nonprofits Start Learning at Treehouse for Free Microsoft Virtual Academy TylerMcGinnis.com"},{"path":"/计算机与编程/正则表达式/","rawBody":"正则表达式 Q&A What is the difference between . ? and .  regular expressions? stack overflow It is the difference between greedy and non-greedy quantifiers. Consider the input 101000000000100. Using 1. 1,   is greedy - it will match all the way to the end, and then backtrack until it can match 1, leaving you with 1010000000001. . ? is non-greedy.   will match nothing, but then will try to match extra characters until it matches 1, eventually matching 101. All quantifiers have a non-greedy mode: .*?, .+?, .{2,6}?, and even .??. In your case, a similar pattern could be <( *)> - matching anything but a greater-than sign (strictly speaking, it matches zero or more characters other than > in-between < and >). Regular Expression to get a string between parentheses in Javascript stack overflow var regExp = /\\(([^)]+)\\)/;\nvar matches = regExp.exec(\"I expect five hundred dollars ($500).\");\n\n//matches[1] contains the value between the parentheses\nconsole.log(matches[1]); 常见正则表达式 English /^[a-zA-Z0-9$@$!%*?&#^-_. +]+$/ 工具 Regexplained RegExp Testing"},{"path":"/计算机与编程/电子书/","rawBody":"电子书 ruanyf_free-books"},{"path":"/计算机与编程/计算机科普/","rawBody":"计算机科普 \\r,\\n,\\r\\n的区别 有趣的二进制 程序基本概念 变量存储值； 简单表达式通过加和减等操作合并成大的； 基本类型通过数组和结构体进行聚合； 表达式通过 if 和 for 等控制语句来决定执行顺序； 语句被组织成函数用于隔离和复用；函数被组织成源文件和包。 浮点数 有趣的二进制-浮点数 你应该知道的浮点数基础知识 Decimal to IEEE 754 Floating Point Representation 计算机是怎么存储数字的 浮点数（谁偷了你的精度？） 计算机中数的表示"},{"path":"/资源/图书/","rawBody":"图书资源 图灵社区 异步社区 IT eBooks 计算机书籍控 免费编程书籍 ePUBee电子书库 [搬书匠] - 电子书(EBook) Ebook PDF Search Engine 电子书网 EBOOK2DOWN.COM Java知识分享网_网页基础技术相关 All IT eBooks - Free IT eBooks Download 万千合集站 学术资源导航、搜索、分享、下载 bookset - 精品电子书免费下载 异步社区"},{"path":"/资源/影视/","rawBody":"影视资源 视频 PanSou 盘搜 6V 电影网 6V 电影网2 电影天堂 BT电影天堂 CN163 风车动漫 美剧天堂 91美剧网 NOVIPNOAD subhd 人人影视网址大全 下片片 中国高清网 全剧吧 五号站 音频 dsd吧 12大免费无损音乐下载网站，手慢就要收费了！"},{"path":"/资源/软件/","rawBody":"软件资源 Mac MacWk Xclient MT Mac Torrents Windows portablesoft Mac & Windows 果核剥壳 小众软件 异次元软件世界 LICENSEKEYS"},{"path":"/阅读/书单/","rawBody":"书单 计算机与编程 浪潮之巅   吴军 数学之美   吴军 编程之美 一个合格的程序员应该读过哪些书 其它 新生 你和理想的自己差多远？｜微信一周收藏排行 如何构建你的深度思考能力？｜微信一周收藏排行 硬球 有限与无限游戏 《让自己过上悲惨生活》 作者丹·格林伯格（Dan Greenberg）"},{"path":"/English/Grammar/将来时/","rawBody":"将来时 用一般将来时  will  和其否定形式  won't  来表示 自愿做某事、承诺或预测 。 I 'll  help you. 我帮你。 I promise I  won't  spread any rumors. 我保证不散播任何谣言。 I'm sure that team coordination  will  improve. 我相信团队协作会有改进的。 用一般将来时  be going to  来谈论 计划或预测 。 He  is going to  Mexico City next week. 下周他会去墨西哥城。 I believe we 're going to  have a merger. 我相信我们会实行并购。 用将来进行时  will  或  be going to  加动词  be  和一个 现在分词 来谈论将来会发生的 持续性 的动作。 I 'll be doing  some back and forth between here and Mexico. 我会从这儿到墨西哥之间往返好几趟。 She 's going to be running  the office while he's away. 他不在时由她主持工作。 用将来完成时  will  或  be going to ，动词  have  加上一个 过去分词 来讨论将来某个时间点 已经完成 的动作。 The meeting  will have concluded  by the time you return. 等你回来会议都结束了。 We  won't have finished  the project by next week. 下周项目完成不了。"},{"path":"/English/航空业/缩写/","rawBody":"缩写 Abbr Description PNR Passenger Name Record CIB Commercial Internet Booking ORB Redemption Booking ORC Online Redemption Change ORU Online Redemption Upgrade SPBP Self Printed Boarding Pass MBP Mobile Boarding Pass ASK Available Seat-Kilometre CTK Capacity Tonne-Kilometre LTK Load Tonne-Kilometre RPK Revenue Passenger-Kilometre FTK Freight Tonne-Kilometre PSF Passenger Seat Factor (Number of Passengers Carried / Number of Seats Available * 100) CLF Cargo Load Factor (Cargo Carried / Cargo Space Available * 100) OLF Overall Load Factor (LTK / CTK * 100) BELF Break Even Load Factor (BELF) is the point beyond which an airline would be profitable"},{"path":"/Writing/如何书写技术文档/介绍/","rawBody":"如何书写技术文档/介绍 文档需要传递的信息 概要介绍 为什么要提出此方案？ 当前已有什么解决方案？ 当前解决方案有什么问题？ 更好的解决方案是什么？ 文档结构 示例"},{"path":"/Writing/如何书写技术文档/参考资料/","rawBody":"参考资料"},{"path":"/Writing/如何书写技术文档/文档体系/","rawBody":"文档体系 引用 结构 软件手册是一部完整的书，建议采用下面的结构。 简介 （Introduction）：  必备  提供对产品和文档本身的总体的、扼要的说明 快速上手 （Getting Started）： 可选  如何最快速地使用产品 入门篇 （Basics）：  必备  又称”使用篇“，提供初级的使用教程 环境准备 （Prerequisite）： 必备  软件使用需要满足的前置条件 安装 （Installation）： 可选  软件的安装方法 设置 （Configuration）： 必备  软件的设置 进阶篇 （Advanced)： 可选  又称”开发篇“，提供中高级的开发教程 API （Reference）： 可选  软件 API 的逐一介绍 FAQ ： 可选  常见问题解答 附录 （Appendix）： 可选  不属于教程本身、但对阅读教程有帮助的内容 Glossary ： 可选  名词解释 Recipes ： 可选  最佳实践 Troubleshooting ： 可选  故障处理 ChangeLog ： 可选  版本说明 Feedback ： 可选  反馈方式 下面是两个真实范例，可参考。 Redux 手册 Atom 手册 文件名 文档的文件名不得含有空格。 文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。 错误： 名词解释.md\n\n正确： glossary.md 文件名建议只使用小写字母，不使用大写字母。 错误：TroubleShooting.md\n\n正确：troubleshooting.md  为了醒目，某些说明文件的文件名，可以使用大写字母，比如 README 、 LICENSE 。 文件名包含多个单词时，单词之间建议使用半角的连词线（ - ）分隔。 不佳：advanced_usage.md\n\n正确：advanced-usage.md"},{"path":"/关于此网站/markdown features/","rawBody":"一级标题 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 这是一些内容，这是一些内容，这是一些内容，这是一些内容。这是一些内容，这是一些内容，这是一些内容，这是一些内容。 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 这是一些内容，这是一些内容，这是一些内容，这是一些内容。这是一些内容，这是一些内容，这是一些内容，这是一些内容。 二级标题 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 三级标题 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 四级标题 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 五级标题 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 六级标题 这是一些内容，这是一些内容，这是一些内容，这是一些内容。 列表 abc def hij kli asb asb asb asb asb 引用 引用应用引用应用引用应用引用应用引用应用 引用应用引用应用引用应用引用应用引用应用 引用应用引用应用引用应用引用应用引用应用 表格 abc abc abc abc abc abcabcabcab abc abc abc abc abc abc 代码块 带有语言标签 // In your gatsby-config.js\nplugins: [\n  {\n    //highlight-start\n    resolve: `gatsby-transformer-remark`,\n    //highlight-end\n    options: {\n      plugins: [\n        `gatsby-remark-prismjs`,\n      ]\n    }\n  }\n] 带有代码块标题 class ComponentComponentComponentComponent extends React.Component {\n    return (\n        <div>text</div>\n    )\n} plugins remark-container info info important important tip tip success success note note warning warning danger danger other other type text custom title custom title plain text text text text text text another paragraph text no type no type gatsby-remark-mermaid 流程图 更多语法 live editor graph LR\ninstall[Install Plugin]\ninstall --> configure[Configure Plugin]\nconfigure --> draw[Draw Fancy Diagrams] remark-breaks 文字换行 文字文字文字文字 文字文字文字文字 另一段文字文字文字文字文字文字文字 gatsby-remark-import-code 类似于：  https://www.gatsbyjs.org/packages/gatsby-remark-embed-snippet/ 项目中使用 gatsby-remark-import-code below code from external file"},{"path":"/计算机与编程/CSS/awesome-css/","rawBody":"Awesome CSS CSS-TRICKS"},{"path":"/计算机与编程/CSS/flex/","rawBody":"flex 文字不换行的 flex-item 子元素会撑大 flex 父元素宽度 解决方案： CSS Flex positioning gotchas: child expands to more than the width allowed by the parent StackOverflow: Why don't flex items shrink past content size? 易混淆概念 justify-content The CSS  justify-content  property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container. justify-items The CSS  justify-items  property defines the default  justify-self  for all items of the box, giving them all a default way of justifying each box along the appropriate axis. The effect of this property is dependent of the layout mode we are in: In block-level layouts, it aligns the items inside their containing block on the inline axis. For absolutely-positioned elements, it aligns the items inside their containing block on the inline axis, accounting for the offset values of top, left, bottom, and right. In table cell layouts, this property is ignored (more about alignment in block, absolute positioned and table layout) In flexbox layouts, this property is ignored (more about alignment in Flexbox) In grid layouts, it aligns the items inside their grid areas on the inline axis (more about alignment in grid layouts) justify-self The CSS  justify-self  property set the way a box is justified inside its alignment container along the appropriate axis. align-content The CSS  align-content  property sets how the browser distributes space between and around content items along the  cross-axis  of a  flexbox container , and the  main-axis  of a  grid container . align-items The CSS  align-items  property sets the  align-self  value on all direct children as a group. The align-self property sets the alignment of an item within its containing block. In Flexbox it controls the alignment of items on the  Cross Axis , in Grid Layout it controls the alignment of items on the Block Axis within their grid area. place-content The place-content CSS property is a shorthand for  align-content  and  justify-content . It can be used in any layout method which utilizes both of these alignment values. place-items The CSS  place-items  shorthand property sets the  align-items  and  justify-items  properties, respectively. If the second value is not set, the first value is also used for it."},{"path":"/计算机与编程/CSS/代码片段/","rawBody":"CSS 代码片段 placeholder 样式 ::-webkit-input-placeholder {\n  color: #000;\n}\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\n  color: #000;\n}\n::-moz-placeholder { /* Mozilla Firefox 19+ */\n  color: #000;\n}\n:-ms-input-placeholder { /* Internet Explorer 10+ */\n  color: #000;\n} 单行文字省略号 selector {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n} 多行文本省略 selector {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical; \n}\n\n.textOverflowMulti(@line: 3, @bg: #fff) {\n  overflow: hidden;\n  position: relative;\n  line-height: 1.5em;\n  max-height: @line * 1.5em;\n  text-align: justify;\n  margin-right: -1em;\n  padding-right: 1em;\n  &:before {\n    background: @bg;\n    content: '...';\n    padding: 0 1px;\n    position: absolute;\n    right: 14px;\n    bottom: 0;\n  }\n  &:after {\n    background: white;\n    content: '';\n    margin-top: 0.2em;\n    position: absolute;\n    right: 14px;\n    width: 1em;\n    height: 1em;\n  }\n} 文字两端对齐 selector {\n  text-align: justify;\n  text-justify: distribute-all-lines; /* ie6-8 */\n  text-align-last: justify; /* ie9 */\n  -moz-text-align-last: justify; /* ff */\n  -webkit-text-align-last: justify; /* chrome 20+ */\n} webkit 自定义滚动条 ::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.2);\n  background-color: #fafafa;\n}\n\n::-webkit-scrollbar {\n  width: 6px;\n  background-color: #F5F5F5;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background-color: #999;\n} 竖排文字居中 selector {\n  height: 100%;\n  writing-model: vertical-rl;\n  text-align: center;\n} min-height, justify-content: space-between 的 chrome bug 写法 <div class=\"parent\">\n  <div class=\"child\">child1</div>\n  <div class=\"child\">child2</div>\n</div> .parent {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  height: 0;\n  min-height: 200px;\n} 两列排列布局 selector {\n  display: flex;\n  place-content: start space-between;\n  flex-wrap: wrap;\n} 文字对齐 描述 页面某个模块的文字内容是动态的，可能是几个字，也可能是一句话。然后，希望文字少的时候居中显示，文字超过一行的时候居左显示。该如何实现？ 方案 <div class=\"box\">\n    <div class=\"content\">...</div>\n</div> .box {\n  text-align: center;\n}\n\n.content {\n  display: inline-block;\n  text-align: left;\n}"},{"path":"/计算机与编程/CSS/如何使用 CSS 自动切换明暗模式/","rawBody":"如何使用 CSS 自动切换明暗模式 参考 Dark mode in a website with CSS How to detect a user’s preferred color scheme in JavaScript"},{"path":"/计算机与编程/CSS/学习资源/","rawBody":"CSS 学习资源 你所不知道的 CSS 滤镜技巧与细节 幽灵元素技术（MichałCzernow's hack）"},{"path":"/计算机与编程/Deno/参考资料/","rawBody":"参考资料 官网 手把手教你从 Node 快速迁移到 Deno"},{"path":"/计算机与编程/Docker/学习资源/","rawBody":"Docker 学习资源 Docker 中文教程 10张图带你深入理解Docker容器和镜像 私活利器，docker快速部署node.js应用 基于 Docker 开发 NodeJS 应用"},{"path":"/计算机与编程/DynamoDB/FAQs/","rawBody":"DynamoDB FAQs 获取第 N 页数据 不能！ 参考 有没有一种简单的方法可以通过java从DynamoDB获取第N页的项目？ Amazon DynamoDB 入门6：query 和 scan DynamoDB中的分页 Dynamo DB Pagination"},{"path":"/计算机与编程/FrontEnd/Animation/","rawBody":"前端动画库 GreenSock GreenSock's GSAP JavaScript animation library (including Draggable).  GitHub Website POSE A truly simple animation library for React, React Native, and Vue. Website animejs Anime.js (/ˈæn.ə.meɪ/) is a lightweight JavaScript animation library with a simple, yet powerful API. Website"},{"path":"/计算机与编程/FrontEnd/Library/","rawBody":"前端 Library HAMMER.js A javascript library for multi-touch gestures :// You can touch this  http://hammerjs.github.io GitHub 富文本编辑器 BRAFT EDITOR 美观易用的React富文本编辑器，基于draft-js开发 margox/braft-editor"},{"path":"/计算机与编程/FrontEnd/Video Player/","rawBody":"Video Player 打造自己的html5视频播放器 DIY video player - 自定义video播放器样式"},{"path":"/计算机与编程/FrontEnd/学习资源/","rawBody":"前端开发学习资源 document.execCommand 利用 javascript 实现富文本编辑器 前端福音：为什么使用 React 和 SVG 开发图形 UI 是天作之合？ 京喜前端自动化测试之路 Complexities of an Infinite Scroller Front-end Developer Handbook 2016 Front-end Developer Handbook 2017 Front-end Developer Handbook 2018"},{"path":"/计算机与编程/FrontEnd/安全/","rawBody":"前端开发安全问题 跨站脚本攻击 - XSS wiki 跨站请求伪造 - XSRF wiki stackoverflow"},{"path":"/计算机与编程/FrontEnd/工具库/","rawBody":"前端工具库 jstree"},{"path":"/计算机与编程/Golang/FAQs/","rawBody":"备忘与常见问题 Time format layout 2006-01-02T15:04:05.000Z 如何在测试中模拟  time.Now() ？ How to mock current time in GoLang Using goroutines on loop iterator variables gin 如何热重启？"},{"path":"/计算机与编程/Golang/JSON/","rawBody":"Golang JSON 解析与序列化 omitempty Go's \"omitempty\" explained Example package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n)\n\ntype example struct {\n\tBool    bool    `json:\"bool,omitempty\"`\n\tBoolPtr *bool   `json:\"boolPtr,omitempty\"`\n\tNum     int     `json:\"num,omitempty\"`\n\tNumPtr  *int    `json:\"numPtr,omitempty\"`\n\tStr     string  `json:\"str,omitempty\"`\n\tStrPtr  *string `json:\"strPtr,omitempty\"`\n}\n\nfunc main() {\n\t/**\n\t * zero value\n\t */\n\tb1 := false\n\tn1 := 0\n\ts1 := \"\"\n\n\tv1 := example{\n\t\tBool:    b1,\n\t\tBoolPtr: &b1,\n\t\tNum:     n1,\n\t\tNumPtr:  &n1,\n\t\tStr:     s1,\n\t\tStrPtr:  &s1,\n\t}\n\n\tstr1, _ := json.Marshal(v1)\n\n\t// {\"boolPtr\":false,\"numPtr\":0,\"strPtr\":\"\"}\n\tfmt.Println(string(str1))\n\n\n\t/**\n\t * non-zero value\n\t */\n\tb2 := true\n\tn2 := 1\n\ts2 := \"a\"\n\n\tv2 := example{\n\t\tBool:    b2,\n\t\tBoolPtr: &b2,\n\t\tNum:     n2,\n\t\tNumPtr:  &n2,\n\t\tStr:     s2,\n\t\tStrPtr:  &s2,\n\t}\n\n\tstr2, _ := json.Marshal(v2)\n\n\t// {\"bool\":true,\"boolPtr\":true,\"num\":1,\"numPtr\":1,\"str\":\"a\",\"strPtr\":\"a\"}\n\tfmt.Println(string(str2))\n}\n 结构体匿名成员 package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n)\n\nfunc main() {\n\ttype subtype struct {\n\t\tA string `json:\"a\"`\n\t}\n\n\ttype supertype struct {\n\t\tsubtype\n\t\tB string `json:\"b\"`\n\t}\n\n\tv := supertype{\n\t\tsubtype: subtype{A: \"a\"},\n\t\tB:       \"b\",\n\t}\n\n\ts, _ := json.Marshal(v)\n\n    // {\"a\":\"a\",\"b\":\"b\"}\n\tfmt.Println(string(s))\n}"},{"path":"/计算机与编程/Golang/基础入门/","rawBody":"Golang 基础入门 基础概念 Go 程序是通过  package  来组织的 只有  package  名称为  main  的包可以包含  main  函数 一个可执行程序  有且仅有  一个 main 包 通过  import  导入其它非 main 包 通过在函数体外部使用  var  来进行全局变量声明与赋值 通过  type  关键字来进行结构或接口的声明 目录划分 GOROOT: Go 安装目录 GOPATH: 工作目录 src: 源码 pkg: 编译后生成的包文件 bin: 编译后生成的可执行文件 GOCACHE: 编译缓存目录 代码组织 - package 包声明语句的主要目的是确定当前包被其它包导入时默认的标示符（也称为包名）。 package 是 基本的分发单位 和 工程管理中依赖关系的体现 ； 每个 Go 语言源代码文件开头都必须有包声明语句，表示源码文件所属代码包； 要生成 Go 语言 可执行程序 ，必须要有  main  的  package  包，且必须在该包下有  main  函数； 同一个路径下只能存在一个  package ，一个  package  可以拆成多个源文件组成； 关键字 break default func interface select\ncase defer go map struct\nchan else goto package switch\nconst fallthrough if range type\ncontinue for import return var 预定义内容 true false iota nil\ninit int8 int16 int32 int64\nuint uint8 uint16 uint32 uint64 uintptr\nfloat32 float64 complex128 complex64\nbool byte rune string error\nmake len cap new append copy close delete complex real imag\npanic recover go 命令 command desc bug start a bug report build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get download and install packages and dependencies install compile and install packages and dependencies list list packages or modules mod module maintenance run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages Printf  动词 verb desc %d 十进制整数 %x, %o, %b 十六进制，八进制，二进制整数。 %f, %g, %e 浮点数： 3.141593 3.141592653589793 3.141593e+00 %t 布尔：true或false %c 字符（rune） (Unicode码点) %s 字符串 %*s * 会在字符串之前填充一些空格 %q 带双引号的字符串\"abc\"或带单引号的字符'c' %v 变量的自然形式（natural format） %#v 用和Go语言类似的语法打印值。对于结构体类型来说，将包含每个成员的名字。 %T 变量的类型 %% 字面上的百分号标志（无操作数） 本地启动 doc 服务器 godoc -http=:6060"},{"path":"/计算机与编程/Golang/学习资源/","rawBody":"Golang 学习资源 新手起步 How to Write Go Code Learn Go with Tests 资料 go-patterns go & docker Gin实践 连载九 将Golang应用部署到Docker Package names 电子书 Go程序设计语言 Go语言高级编程(Advanced Go Programming) Go入门指南 风格指南 Go语言中包的风格指南 其它 GO语言学习资源整理 Go语言入门教程 Go go-to guide"},{"path":"/计算机与编程/Golang/工具/","rawBody":"Golang 实用工具集 JSON to Go"},{"path":"/计算机与编程/Golang/接口/","rawBody":"Golang 接口 接口类型是对其他类型行为的概括与抽象。通过使用接口，我们可以写出更加灵活和通用的函数，这些函数不用绑定在一个特定的类型实现上。 一个类型如果拥有一个接口需要的所有方法，那么这个类型就实现了这个接口。 我们可以给同一个包内的任意命名类型定义方法，只要这个命名类型的底层类型不是指针或者 interface。"},{"path":"/计算机与编程/Golang/数据类型/","rawBody":"Golang 数据类型 Go 语言将数据类型分为四类：基础类型、复合类型、引用类型和接口类型。 数据类型分类 基础类型 数字 字符串 布尔值 复合类型 数组 结构体 引用类型 指针 切片 字典 函数 通道 它们都是对程序中一个变量或状态的间接引用。这意味着对任一引用类型数据的修改都会影响所有该引用的拷贝。 接口类型 基础类型转换 Convert between  string  and  bool string  to  bool strconv.ParseBool ParseBool returns the boolean value represented by the string. It accepts 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False. Any other value returns an error. package strconv\n\nfunc ParseBool(str string) (bool, error) Example package main\n\nimport (\n\t\"strconv\"\n)\n\nfunc main() {\n\tstrconv.ParseBool(\"true\") // true\n} bool  to  string strconv.FormatBool FormatBool returns \"true\" or \"false\" according to the value of b. package strconv\n\nstrconv.FormatBool(b bool) string Example package main\n\nimport (\n\t\"strconv\"\n)\n\nfunc main() {\n\tstrconv.FormatBool(true)  // \"true\"\n} fmt.Sprintf Sprintf formats according to a format specifier and returns the resulting string. package fmt\n\nfunc Sprintf(format string, a ...interface{}) string Example package main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Sprintf(\"%t\",true)  // \"true\"\n} Convert between  string  and  int ,  int64 ref:  Convert between int, int64 and string string  to  int ,  int64 strconv.Atoi Atoi is equivalent to ParseInt(s, 10, 0), converted to type int. package strconv\n\nfunc Atoi(s string) (int, error) Example package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := \"10\"\n\n\tif s, err := strconv.Atoi(v); err == nil {\n\t\tfmt.Printf(\"%T, %v\", s, s) // int, 10\n\t}\n} strconv.ParseInt ParseInt interprets a string s in the given base (0, 2 to 36) and bit size (0 to 64) and returns the corresponding value i. package strconv\n\nfunc ParseInt(s string, base int, bitSize int) (i int64, err error) Example package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv32 := \"-354634382\"\n\tif s, err := strconv.ParseInt(v32, 10, 32); err == nil {\n\t\tfmt.Printf(\"%T, %v\\n\", s, s)\n\t}\n\n\tv64 := \"-3546343826724305832\"\n\tif s, err := strconv.ParseInt(v64, 10, 64); err == nil {\n\t\tfmt.Printf(\"%T, %v\\n\", s, s)\n\t}\n} int ,  int64  to  string strconv.Itoa Itoa  is equivalent to  FormatInt(int64(i), 10) . package strconv\n\nfunc Itoa(i int) string Example package main\n\nimport (\n\t\"strconv\"\n)\n\nfunc main() {\n\tstrconv.Itoa(10) // \"10\"\n} strconv.FormatInt FormatInt returns the string representation of i in the given base, for 2 <= base <= 36. The result uses the lower-case letters 'a' to 'z' for digit values >= 10. package strconv\n\nfunc FormatInt(i int64, base int) string Example package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := int64(-42)\n\n\ts10 := strconv.FormatInt(v, 10)\n\tfmt.Printf(\"%T, %v\\n\", s10, s10) // “string, -42”\n\n\ts16 := strconv.FormatInt(v, 16)\n\tfmt.Printf(\"%T, %v\\n\", s16, s16) // “string, -2a”\n} Convert between  string  and  float ref:  Convert between float and string string  to  float strconv.ParseFloat ParseFloat converts the string s to a floating-point number with the precision specified by bitSize: 32 for float32, or 64 for float64. When bitSize=32, the result still has type float64, but it will be convertible to float32 without changing its value. package strconv\n\nfunc ParseFloat(s string, bitSize int) (float64, error) Example package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := \"3.1415926\"\n\n\tif s, err := strconv.ParseFloat(v, 32); err == nil {\n\t\tfmt.Printf(\"%T, %v\\n\", s, s)\n\t}\n} float  to  string strconv.FormatFloat FormatFloat converts the floating-point number f to a string, according to the format fmt and precision prec. It rounds the result assuming that the original was obtained from a floating-point value of bitSize bits (32 for float32, 64 for float64). package strconv\n\nfunc FormatFloat(f float64, fmt byte, prec, bitSize int) string Example package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tv := 3.1415926535\n\n\ts32 := strconv.FormatFloat(v, 'E', -1, 32) // 3.1415927E+00\n\ts64 := strconv.FormatFloat(v, 'E', -1, 64) // 3.1415926535E+00\n\n\tfmt.Println(s32, s64)\n} fmt.Sprintf Sprintf formats according to a format specifier and returns the resulting string. package fmt\n\nfunc Sprintf(format string, a ...interface{}) string Example package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.Sprintf(\"%f\", 123.456) // \"123.456000\"\n\tfmt.Sprintf(\"%.2f\", 123.456) // \"123.46\"\n}"},{"path":"/计算机与编程/Golang/文件操作/","rawBody":"Golang 文件操作 Reading Files ref:  Go by Example: Reading Files ioutil.ReadFile ReadFile reads the file named by filename and returns the contents. A successful call returns err == nil, not err == EOF. Because ReadFile reads the whole file, it does not treat an EOF from Read as an error to be reported. package ioutil\n\nfunc ReadFile(filename string) ([]byte, error) Example package main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\tcontent, err := ioutil.ReadFile(\"testdata/hello\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n        return\n\t}\n\n\tfmt.Printf(\"File contents: %s\", content)\n} os.File.Read Read reads up to len(b) bytes from the File. It returns the number of bytes read and any error encountered. At end of file, Read returns 0, io.EOF. package os\n\nfunc (f *File) Read(b []byte) (n int, err error) Example package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\tf, err := os.Open(\"./filename\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t\treturn\n\t}\n\n\tb := make([]byte, 5)\n\tn, err := f.Read(b)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t\treturn\n\t}\n\tfmt.Printf(\"%d bytes: %s\\n\", n, string(b[:n]))\n} Writing Files ref:  Go by Example: Writing Files ioutil.WriteFile WriteFile writes data to a file named by filename. If the file does not exist, WriteFile creates it with permissions perm (before umask); otherwise WriteFile truncates it before writing. package ioutil\n\nfunc WriteFile(filename string, data []byte, perm os.FileMode) error Example package main\n\nimport (\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\tmessage := []byte(\"Hello, Gophers!\")\n\terr := ioutil.WriteFile(\"testdata/hello\", message, 0644)\n\tif err != nil {\n\t\tlog.Fatal(err)\n        return\n\t}\n} os.Create Create creates or truncates the named file. If the file already exists, it is truncated. If the file does not exist, it is created with mode 0666 (before umask). If successful, methods on the returned File can be used for I/O; the associated file descriptor has mode O_RDWR. If there is an error, it will be of type *PathError. package os\n\nfunc Create(name string) (*File, error) Example package main\n\nimport (\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\tf, err := os.Create(\"./filename\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n        return\n\t}\n\n\tdefer func() {\n\t\terr = f.Close()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n            return\n\t\t}\n\t}()\n\n\tdata := []byte{115, 111, 109, 101, 10}\n\t_, err = f.Write(data)\n\tif err != nil {\n\t\tlog.Fatal(err)\n        return\n\t}\n\n\terr = f.Sync()\n\tif err != nil {\n\t\tlog.Fatal(err)\n        return\n\t}\n}"},{"path":"/计算机与编程/Golang/杂记/","rawBody":"Golang 杂记 拥有函数名的函数只能在包级语法块中被声明。 一个命名为S的结构体类型将不能再包含S类型的成员：因为一个聚合的值不能包含它自身。（该限制同样适用于数组。）但是S类型的结构体可以包含*S指针类型的成员，这可以让我们创建递归的数据结构，比如链表和树结构等。"},{"path":"/计算机与编程/Golang/正则表达式/","rawBody":"Golang 正则表达式 How to get capturing group functionality in Go regular expressions package main\n\nimport (\n    \"fmt\"\n    \"regexp\"\n)\n\nfunc main() {\n    r := regexp.MustCompile(`(?P<Year>\\d{4})-(?P<Month>\\d{2})-(?P<Day>\\d{2})`)\n    fmt.Printf(\"%#v\\n\", r.FindStringSubmatch(`2015-05-27`))\n    fmt.Printf(\"%#v\\n\", r.SubexpNames())\n} Regexp tutorial and cheat sheet Golang-Regex-Tutorial"},{"path":"/计算机与编程/Golang/生态系统/","rawBody":"Golang 生态系统 testing goconvey Go testing in the browser. Integrates with  ` go test ` . Write behavioral tests in Go.  GitHub website ORM xorm Simple and Powerful ORM for Go, support mysql,postgres,tidb,sqlite3,mssql,oracle gitea website tools validator 💯Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving GitHub"},{"path":"/计算机与编程/HTML/代码片段/","rawBody":"HTML 代码片段 移动端 meta 设置 <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\" />"},{"path":"/计算机与编程/JavaScript/FAQs/","rawBody":"JavaScript FAQs 如何监听 DOM 的更新？ 使用  MutationObserver  监听 DOM 树的更新。 详情查阅  MDN: MutationObserver 示例： // Select the node that will be observed for mutations\nconst targetNode = document.querySelector('#id')\n\n// Options for the observer (which mutations to observe)\nconst config = {\n  attributes: true,\n  childList: true,\n  subtree: true\n}\n\n// Callback function to execute when mutations are observed\nconst mutationCallback = (mutationsList) => {\n  for (let mutation of mutationsList) {\n    switch (mutation.type) {\n      case 'childList':\n        console.log('A child node has been added or removed.')\n        break\n      case 'attributes':\n        console.log(`The ${mutation.attributeName} attribute was modified.`)\n        break\n      case 'subtree':\n        console.log('The subtree was modified.')\n        break\n      default:\n        break\n    }\n  }\n}\n\n// Create an observer instance linked to the callback function\nconst observer = new MutationObserver(mutationCallback)\n\n// Start observing the target node for configured mutations\nobserver.observe(targetNode, config)\n\n// Later, you can stop observing\nobserver.disconnect() 如何将元素滚动到浏览器窗口可视区域内？ 使用  Element.scrollIntoView()  方法。 详情查阅  MDN: Element.scrollIntoView() 示例： element.scrollIntoView(); // 等同于element.scrollIntoView(true) \nelement.scrollIntoView(alignToTop); // Boolean型参数 \nelement.scrollIntoView(scrollIntoViewOptions); // Object型参数 如何解析 query string? MDN: URLSearchParams var paramsString = \"q=URLUtils.searchParams&topic=api\";\nvar searchParams = new URLSearchParams(paramsString);\n\n//Iterate the search parameters.\nfor (let p of searchParams) {\n  console.log(p);\n}\n\nsearchParams.has(\"topic\") === true; // true\nsearchParams.get(\"topic\") === \"api\"; // true\nsearchParams.getAll(\"topic\"); // [\"api\"]\nsearchParams.get(\"foo\") === null; // true\nsearchParams.append(\"topic\", \"webdev\");\nsearchParams.toString(); // \"q=URLUtils.searchParams&topic=api&topic=webdev\"\nsearchParams.set(\"topic\", \"More webdev\");\nsearchParams.toString(); // \"q=URLUtils.searchParams&topic=More+webdev\"\nsearchParams.delete(\"topic\");\nsearchParams.toString(); // \"q=URLUtils.searchParams\" URL.searchParams let params = (new URL(document.location)).searchParams;\nlet name = params.get('name'); // is the string \"Jonathan Smith\".\nlet age = parseInt(params.get('age')); // is the number 18 浏览器标签页间状态共享 在多个标签页之间共享 sessionStorage 利用  sessionStorage 、 localStorage 、 storageEvent  来共享状态 Object.keys  与  Object.getOwnPropertyNames  的区别是什么？ ref There is a little difference.  Object.getOwnPropertyNames(a)  returns all own properties of the object a.  Object.keys(a)  returns all enumerable own properties. It means that if you define your object properties without making some of them  enumerable: false  these two methods will give you the same result. It's easy to test: var a = {};\nObject.defineProperties(a, {\n    one: {enumerable: true, value: 'one'},\n    two: {enumerable: false, value: 'two'},\n});\nObject.keys(a); // [\"one\"]\nObject.getOwnPropertyNames(a); // [\"one\", \"two\"] If you define a property without providing property attributes descriptor (meaning you don't use  Object.defineProperties ), for example: a.test = 21; then such property becomes an enumerable automatically and both methods produce the same array."},{"path":"/计算机与编程/JavaScript/代码片段/","rawBody":"JavaScript 代码片段 滚动到页面顶部 function scrollToTop() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n}\n\nscrollToTop() 判断 x 轴方向内容是否溢出 function isOverflow(elem) {\n  return elem.scrollWidth > elem.offsetWidth;\n} throttle /**\n * 频率控制 返回函数连续调用时，func 执行频率限定为 次 / wait\n * \n * @param  {function}   func      传入函数\n * @param  {number}     wait      表示时间窗口的间隔\n * @param  {object}     options   如果想忽略开始边界上的调用，传入{leading: false}。\n *                                如果想忽略结尾边界上的调用，传入{trailing: false}\n * @return {function}             返回客户调用函数   \n */\n_.throttle = function(func, wait, options) {\n  var context, args, result;\n  var timeout = null;\n  // 上次执行时间点\n  var previous = 0;\n  if (!options) options = {};\n  // 延迟执行函数\n  var later = function() {\n    // 若设定了开始边界不执行选项，上次执行时间始终为0\n    previous = options.leading === false ? 0 : Date.now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n  return function() {\n    var now = Date.now();\n    // 首次执行时，如果设定了开始边界不执行选项，将上次执行时间设定为当前时间。\n    if (!previous && options.leading === false) previous = now;\n    // 延迟执行时间间隔\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    // 延迟时间间隔remaining小于等于0，表示上次执行至此所间隔时间已经超过一个时间窗口\n    // remaining大于时间窗口wait，表示客户端系统时间被调整过\n    if (remaining <= 0 || remaining > wait) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    //如果延迟执行不存在，且没有设定结尾边界不执行选项\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}; debounce /**\n * 空闲控制 返回函数连续调用时，空闲时间必须大于或等于 wait，func 才会执行\n *\n * @param  {function} func        传入函数\n * @param  {number}   wait        表示时间窗口的间隔\n * @param  {boolean}  immediate   设置为ture时，调用触发于开始边界而不是结束边界\n * @return {function}             返回客户调用函数\n */\n_.debounce = function(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n\n  var later = function() {\n    // 据上一次触发时间间隔\n    var last = Date.now() - timestamp;\n\n    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function() {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    // 如果延时不存在，重新设定延时\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n}; 获取页面滚动的距离 function pageOffsetY() {\n  return Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop)\n} 页面平滑滚动 参考 window.requestAnimFrame = (function(){\n    return  window.requestAnimationFrame ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          function(callback) {\n            window.setTimeout(callback, 1000 / 60);\n          };\n  })();\n\n  function scrollToY(scrollTargetY, speed, easing) {\n    // scrollTargetY: the target scrollY property of the window\n    // speed: time in pixels per second\n    // easing: easing equation to use\n\n    var scrollY = window.scrollY,\n        scrollTargetY = scrollTargetY || 0,\n        speed = speed || 2000,\n        easing = easing || 'easeOutSine',\n        currentTime = 0;\n\n    // min time .1, max time .8 seconds\n    var time = Math.max(.1, Math.min(Math.abs(scrollY - scrollTargetY) / speed, .8));\n\n    // easing equations from https://github.com/danro/easing-js/blob/master/easing.js\n    var PI_D2 = Math.PI / 2,\n      easingEquations = {\n        easeOutSine: function (pos) {\n            return Math.sin(pos * (Math.PI / 2));\n        },\n        easeInOutSine: function (pos) {\n            return (-0.5 * (Math.cos(Math.PI * pos) - 1));\n        },\n        easeInOutQuint: function (pos) {\n            if ((pos /= 0.5) < 1) {\n                return 0.5 * Math.pow(pos, 5);\n            }\n            return 0.5 * (Math.pow((pos - 2), 5) + 2);\n        }\n      };\n\n      // add animation loop\n      function tick() {\n        currentTime += 1 / 60;\n\n        var p = currentTime / time;\n        var t = easingEquations[easing](p);\n\n        if (p < 1) {\n          requestAnimFrame(tick);\n\n          window.scrollTo(0, scrollY + ((scrollTargetY - scrollY) * t));\n        } else {\n          // console.log('scroll done');\n          window.scrollTo(0, scrollTargetY);\n        }\n      }\n\n      // call it once to get started\n      tick();\n  } 对象深拷贝 function deepClone (val) {\n  if (isPlainObject(val)) {\n    const res = {}\n    for (const key in val) {\n      res[key] = deepClone(val[key])\n    }\n    return res\n  } else if (Array.isArray(val)) {\n    return val.slice()\n  } else {\n    return val\n  }\n} memoize function memoize(fn) {\n  var cachedArg;\n  var cachedResult;\n  return function(arg) {\n    if (cachedArg === arg) {\n      return cachedResult;\n    }\n    cachedArg = arg;\n    cachedResult = fn(arg);\n    return cachedResult;\n  };\n}"},{"path":"/计算机与编程/JavaScript/学习资料/","rawBody":"JavaScript 学习资料 风格指南 clean-code-javascript Understanding ECMAScript 6 《Understanding ECMAScript 6》中文翻译 《Understanding ECMAScript 6》（简体中文版）"},{"path":"/计算机与编程/JavaScript/搜索引擎/","rawBody":"JavaScript 搜索引擎 js-search JS Search is an efficient, client-side search library for JavaScript and JSON objects. GitHub Website lunr.js A bit like Solr, but much smaller and not as bright. GitHub Website elasticlunr.js Based on lunr.js, but more flexible and customized. GitHub Website flexsearch Next-Generation full text search library for Browser and Node.js. GitHub Fuse Lightweight fuzzy-search, in JavaScript. GitHub Website wade 🌊 Blazing fast 1kb search library GitHub BulkSearch Lightweight and read-write optimized full text search library. GitHub"},{"path":"/计算机与编程/JavaScript/正则表达式/","rawBody":"JavaScript 正则表达式 判断运行平台 const platformReg = {\n  ios: /(iPhone|iPad|iPod|IOS)/i,\n  android: /Android/i,\n  linux: /Linux/i,\n  win32: /Win32/i,\n  win64: /Win64/i,\n  weixin: /MicroMessenger/i\n};"},{"path":"/计算机与编程/JavaScript/注意项/","rawBody":"JavaScript 需要注意的事项 浮点数问题 0.1 + 0.2 // 0.30000000000000004\n0.56 * 100 // 56.00000000000001"},{"path":"/计算机与编程/Linux/FAQs/","rawBody":"FAQs Why can only root listen to ports below 1024? Why can only root listen to ports below 1024? Allowing a user to let listen to a port below 1024 怎么查看端口占用进程并结束进程？ netstat "},{"path":"/计算机与编程/Redis/命令/","rawBody":"Redis 命令集 SET Time complexity: O(1) Set key to hold the string value. If key already holds a value, it is overwritten, regardless of its type. Any previous time to live associated with the key is discarded on successful SET operation. set [key] [value] [options] Note that SET will replace any existing value already stored into the key, in the case that the key already exists, even if the key is associated with a non-string value. So SET performs an assignment. Options EX seconds: Set the specified expire time, in seconds. PX milliseconds: Set the specified expire time, in milliseconds. NX: Only set the key if it does not already exist. XX: Only set the key if it already exist. Example > set mykey newval nx\n(nil)\n> set mykey newval xx\n\"OK\"\n> SET anotherkey \"will expire in a minute\" EX 60\n\"OK\" GET Time complexity: O(1) Get the value of key. If the key does not exist the special value nil is returned. An error is returned if the value stored at key is not a string, because GET only handles string values. GET [key] Example > GET nonexisting\n(nil)\n> SET mykey \"Hello\"\n\"OK\"\n> GET mykey\n\"Hello\"\nredis>  INCR && DECR Even if strings are the basic values of Redis, there are interesting operations you can perform with them. For instance, one is atomic increment:"},{"path":"/计算机与编程/Redis/基本类型/","rawBody":"Redis 基本类型 string list hash set zset"},{"path":"/计算机与编程/Vue/FAQs/","rawBody":"Vue FAQs 怎么解决在 Vue 项目中引入 moment 错误？ 在 vue 项目中，使用  import moment from 'moment'  的方式引入 moment，在构建过程中，moment 会得不到正确的构建。 使用以下两种方法引入  moment  （二选一）: import moment from 'moment/src/moment' 或 const moment = require('moment')"},{"path":"/计算机与编程/工具/实用工具/","rawBody":"实用工具 效率工具 fkling/astexplorer A web tool to explore the ASTs generated by various parsers. astexplorer.net RegExp Testing regexplained storybookjs/storybook 📓 The UI component explorer. Develop, document, & test for React, Vue, Angular, Ember, Web Components, & more! storybook.js.org nodeppt This is probably the best web presentation tool so far! MinDoc 接口文档在线管理系统 快速构建IT接口文档系统 BookStack BookStack，基于MinDoc，使用Beego开发的在线文档管理系统，功能类似Gitbook和看云。 在线音视频 WebRTC Janus"},{"path":"/计算机与编程/微信开发/常见问题/","rawBody":"微信开发常见问题 获取用户头像模糊不清晰 问题说明 在微信小程序中，调用  getUserInfo  接口获取到的用户头像的默认尺寸为  132*132 ，在需要展示较大尺寸头像的场景下，头像看起来会十分模糊。 解决方法 目前头像链接规则如： https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9wia3lQc2NCcC4s4PxNDEbO3ne1tYXy2ia21mnF3Cs6ddrxH1QASNGWqfUNLFlvBrHv4vDODd7r7g/132 最后一个数值代表正方形头像大小（有 0、46、64、96、132 数值可选，0 代表 640*640 正方形头像）。  开发者可根据需要替换头像大小参数进行下载。  参考 微信开放社区：获取用户头像模糊不清晰 微信内调用  window.location.reload()  无法刷新页面 解决方法 window.location.search = `?v=${Date.now()}` 此方法适用于无查询参数的情况，若有查询参数，可使用  query-string  辅助处理，在此不赘述 参考"},{"path":"/计算机与编程/微信开发/微信公众号/","rawBody":"微信公众号开发 取消长按选择文字 document.oncontextmenu = function (e) {\n  e.preventDefault();\n}"},{"path":"/计算机与编程/服务器/通过公网服务器访问内网服务器/","rawBody":"通过公网服务器访问内网服务器 介绍 使用  frp  反向代理进行内网穿透。 步骤 内网机器安装 fpc wget https://github.com/fatedier/frp/releases/download/v0.30.0/frp_0.30.0_linux_amd64.tar.gz\ntar -zxvf frp_0.30.0_linux_amd64.tar.gz 参考  frp 文档  修改  frpc.ini  配置 # frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 6000 设置 frpc 服务后台运行及开机启动 在  /lib/systemd/system  目录下新建  frpc.service  服务配置文件 [Unit]\nDescription = frpc service\nAfter = network.target syslog.target\nWants = network.target\n\n[Service]\nType = simple\nExecStart = /your/path/frpc -c /your/path/frpc.ini\n\n[Install]\nWantedBy = multi-user.target 启动 frpc 服务 sudo systemctl start frpc 设置开机启动 sudo systemctl enable frps 重启服务 sudo systemctl restart frpc 停止服务 sudo systemctl stop frpc 查看服务日志 sudo systemctl status frpc 参考资料 frp 中文文档 FRP内网穿透技术实现对校园网电脑的远程访问 Frp后台自动启动的几个方法"},{"path":"/计算机与编程/杂项/","rawBody":"杂项 编程字体 Inconsolata"},{"path":"/计算机与编程/程序设计思想/接口设计/","rawBody":"接口设计 接口设计指南 RESTful WIKIPEDIA: Representational state transfer RESTful 维基百科 MicroSoft: API Design 微软官方文档，讲解 RESTful 的设计要求 REST API Tutorial REST API 教程 REST API Tutorial2 REST API 教程2 RESTful API 最佳实践 阮一峰官方博客，REST API 的最佳实践 理解 RESTful架构 阮一峰官方博客，理解 RESTful架构 其它 从达标到卓越 —— API 设计之道"},{"path":"/计算机与编程/算法/学习资源/","rawBody":"算法学习资源 走台阶问题"},{"path":"/计算机与编程/设计模式/装饰器模式/","rawBody":"装饰器模式 参考资料 WIKIPEDIA: Decorator pattern StackOverflow: Decorator pattern versus sub classing StackOverflow: Difference between decorator design pattern and visitor design pattern"},{"path":"/计算机与编程/面试/技术面试综合/","rawBody":"技术面试综合 LeetcodeTop : 互联网公司技术岗考察leetcode题目的热度🔥 剑指OFFER 名企面试官精讲典型编程题 第2版.pdf LeetCode-Go"},{"path":"/计算机与编程/面试/面试方法与技巧/","rawBody":"面试方法与技巧 如何在面试中介绍自己的项目经验"},{"path":"/计算机与编程/React/学习资源/","rawBody":"学习资源 文章 No Need for Dependency Injection in React Components When and Why you should do Dependency Injection in React"},{"path":"/计算机与编程/Linux/用户管理/","rawBody":"添加用户 useradd -m [username] 修改用户密码 passwd [username] 将用户添加到 sudo 组 usermod -a -G sudo [username] 删除用户 useradd -r [username]"},{"path":"/计算机与编程/Linux/命令集/","rawBody":"命令集 远程拷贝 从远程复制文件到本地 scp localFile user@host:remoteFolder 从本地复制文件到远程 scp user@host:remoteFolder localFile"},{"path":"/English/EF/Music/Lession1 Talking about music you like/","rawBody":"Talking about music you like Vocabulary folk pop hip-hop country punk techno classical jazz rock Grammar Used to  与  be used to 用  used to + 动词  谈论过去的习惯或偏好。 Kayla  used to like  punk music. Ted  used to watch  cartoons, but now he listens to music. 用  be used to + 名词  谈论你已习惯的事物。 Mark  is used to loud music . He was in a rock band. She has a headache. She's  not used to punk rock concerts . 在问题和否定句中，当谈论你在过去做过的事情时会省略  used to  中的  d 。 A: Did you  use to like  folk music? B: No, I  did not use to like  folk music. FEMALE: What are you listening to?\nMALE: Clunk.\nFEMALE: Oh, Clunk. The punk singer?\nMALE: Yeah. I mean, he used to play punk music …\nFEMALE: Used to ?\nMALE: Now he's a folk singer.\nFEMALE: A folk singer? Weird! So, now you like folk?\nMALE: Yeah, I do. I mean, I like Clunk's folk. He uses a lot of piano now.\nFEMALE: But I thought you liked punk music.\nMALE: Oh, I still like punk. But I used to enjoy only punk. Now, I'm enjoying different music styles.\nFEMALE: What happened?\nMALE: Well, I'm used to loud music, but now I seem to like quiet music, too. Surprising, huh?\nFEMALE: Wow. That's a big change! I guess I shouldn't be surprised. You like change.\nMALE: Yeah. I guess I do.\n女：你在听什么？\n男：Clunk\n女：哦，Clunk。那个朋克歌手？\n男：是的。我是说，他过去经常演奏朋克音乐。\n女：过去？\n男：他现在是一个民谣歌手。\n女：民谣歌手？好奇怪！所以，你现在喜欢民谣？\n男：是的。我的意思是，我喜欢 Clunk 的民谣。他现在经常弹奏钢琴。\n女：但是我认为你喜欢朋克音乐。\n男：哦，我仍然喜欢朋克。但是我过去喜欢朋克，现在我喜欢不同类型的音乐。\n女：怎么了？\n男：好吧，我过去喜欢吵闹的音乐，但是现在我似乎也喜欢安静的音乐。吃惊吧？\n女：哇。那真是一个大的改变。我猜我不应该感到惊奇。你喜欢改变。\n男：是的。我想我是这样的。"},{"path":"/计算机与编程/CSS/移动端开发/","rawBody":"移动端开发总结 移动端开发实现自适应适配 解决方案1：rem 版本1：meta scale 缩放  ant-design-mobile:HD 设置 viewport 和计算 root font size mete scale 会导致引用外部库缩放展示 压缩版 未压缩版 px to rem // npm install postcss-pxtorem --save-dev\nconst pxtorem = require('postcss-pxtorem');\nwebpackConfig.postcss.push(pxtorem({\n  rootValue: 100,\n  propWhiteList: [],\n})); 版本2：flexible  lib-flexible 设置 viewport 和计算 root font size 压缩版 未压缩版 px to rem // npm install postcss-pxtorem --save-dev\nconst pxtorem = require('postcss-pxtorem');\nwebpackConfig.postcss.push(pxtorem({\n  rootValue: 75,\n  propWhiteList: [],\n})); postcss-pxtorem-exclude 包可以排除特定路径 解决方案2：viewport 如何在Vue项目中使用vw实现移动端适配 evrone/postcss-px-to-viewport 取消点击高亮 * {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n} 背景虚化 selector {\n  filter: blur(10px);\n}\n\n/* IOS 背景虚化 */\nselector {\n  -webkit-backdrop-filter: blur(10px);\n} 1px 边框的实现 .border-1px {\n  position: relative;\n}\n\n.border-1px::after {\n  display: block;\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  border-top: 1px solid @color;\n  content: '';\n}\n\n@media (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5) {\n  .border-1px {\n    &::after {\n      -webkit-transform: scaleY(.7);\n      transform: scaleY(.7);\n    }\n  }\n}\n\n@media (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2) {\n  .border-1px {\n    &::after {\n      -webkit-transform: scaleY(.5);\n      transform: scaleY(.5);\n    }\n  }\n} 消除 ios 输入框内阴影 input, textarea {\n  -webkit-appearance: none;\n} ios 时间显示 NaN 问题描述 在 ios 系统下，实例化日期对象时，2017-08-14 10:30 时间格式会导致计算错误，出现 NaN 问题。 解决方法 在实例化时间对象之前，需要将时间连字符的 - 转换为 /。 const originalTimeStr = '2017-08-14 10:30';\nconst uniTimeStr = originalTimeStr.replace(/\\-/g, '/'); iOS safari 开启物理惯性滚动支持 移动终端的开发中，在需要滚动的元素容器上，增加如下的css ，即可使滚动更平滑，并支持物理惯性的回弹。 .scrolllist {\n    -webkit-overflow-scrolling : touch;\n} Safari 会创建带有硬件加速的原生控件 UIScrollView 来实现此效果，使滚动更流畅。 注意： 移动终端的web开发适用，目前只有 IOS 的 Safari支持。 -webkit-overflow-scrolling: touch;  需要加到设置了  overflow:scroll;  的外层容器上。 Android 不支持，也不会支持，因为“已经滚动的足够快了”，相对来说缺少一个惯性回弹的效果。 参考：网页在Safari快速滚动和回弹的原理： -webkit-overflow-scrolling : touch;的实现 iPhoneX 屏幕适配 @media only screen and (min-device-width : 360px) and (min-device-height : 740px) and (-webkit-min-device-pixel-ratio : 2.6) {\n    /* ... */\n} iPhoneX input placeholder 布局中 设置 line-height iPhoneX 全屏适配 问题描述 默认情况下，网页在 iPhoneX 的展示不会占满全屏 解决方法 针对 iPhoneX 特殊的屏幕，使用特有的属性来进行修复 在 HTML 的 meta:viewport 标签设置 viewport-fix 为 cover <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover\" /> css 对应修改为 body {\n    padding-top: constant(safe-area-inset-top);\n    padding-left: constant(safe-area-inset-left);\n    padding-right: constant(safe-area-inset-right);\n    padding-bottom: constant(safe-area-inset-bottom);\n} 参考：网页适配 iPhoneX，就是这么简单"},{"path":"/计算机与编程/FrontEnd/游戏开发/学习资料/","rawBody":"Web 游戏开发学习资料 为 JavaScript 游戏构建一个简单的 2D 物理引擎"},{"path":"/计算机与编程/JavaScript/文章/JavaScript 中的数字 Number 易于忽略点/","rawBody":"JavaScript 中的数字 Number 易于忽略点 一、浮点数 1. 浮点数的存储 保存浮点数值需要的内存空间是保存整数值的两倍，因此 ECMAScript 会不失时机地将浮点数值转换为整数值。例如： var floatNum1 = 1.;\t// 小数点后面没有数字——解析为 1\nvar floatNum2 = 10.0;\t// 整数——解析为 10 可以使用指数记数法表示浮点型直接量，即在实数后跟字母 e 或 E，后面再跟正负号，其后再加一个整型的指数。语法表示为：    [digits][.digits][(E|e)[(+|-)]digits]   例如： 6.02e23 \t// 6.02 * 10^23 2. 浮点数的运算 0.1 + 0.2 != 0.3 这是使用基于 IEEE754 数值的浮点计算的通病！ 解决方案：先将浮点数转换为整数后进行运算，然后再转换为小数 例如：(0.1  *  10 + 0.2  *  10) / 10 === 0.3 二、数值范围 1. 最大值 & 最小值 最大值   保存在  Number_MAX_VALUE  中，值为：1.7976931348623157e+308 最小值   保存在  Number_MIN_VALUE  中，值为：5e-324 注意：此处的最小值并不是我们通常理解的值很小的负数，而是无限接近于 0 的正数。 2. 正无穷 & 负无穷 正无穷： Number_POSITIVE_INFINITY   负无穷： Number_NEGATIVE_INFINITY 3. 溢出 & 下溢 溢出（overflow） 大于 Number_MAX_VALUE，为  Infinity 小于 -Number_MAX_VALUE，为  -Infinity    下溢（underflow） 无限接近于 0，并比 Number_MIN_VALUE 还小的值，返回 0。  即： [ -Number_MIN_VALUE, Number_MIN_VALUE ] 三、NaN NaN，即非数值（Not a Number）是一个特殊的数值，这个数值用于表示一个本来要返回数值的操作数未返回数值的情况。 NaN 与任何值都不相等，包括 NaN 本身！！！ 四、 特殊计算 +num / 0 = Infinity -num / 0 = -Infinity 1 / Infinity = 0 0 / 0 = NaN 五、Math 对象的属性 属性&方法 说明 Math.E e：自然对数的底数 Math.sqrt(3) 3 的平方根 Math.log(3) 3 的自然对数 Math.exp(3) e 的三次幂 Math.pow(2, 13) 2 的 13 次幂 Math.pow(3, 1/3) 3 的立方根 其中只列出了不熟悉的属性和方法。"},{"path":"/计算机与编程/JavaScript/文章/JavaScript 相等性判断/","rawBody":"JavaScript 相等性判断 1. 全等（===）比较规则 如果两个值类型不相等，则它们不相等。 值类型相等时才去判断它们的值是否相等。 NaN 与任何值都不相等，包括它本身。 NaN === NaN     // false 0、+0、-0 三者互相全等  0 === -0       // true\n 0 === +0       // true\n-0 === +0       // true 两个引用值指向同一个对象时才相等。 即使两个对象具有一样的属性也不相等。 2. 非严格相等（==）比较规则 \"==\" 运算符从不试图将其操作数转换为布尔值 【null】与【undefined】 null == undefined   // true\n\n在比较相等性之前，不能将 null 和 undefined 转换为其它任何值。\n\nnull == true        // false\nnull == false       // false\nundefined == true   // false\nundefined == false  // false\n\nnull, undefined 在比较运算中，并不将其转换为数字再比较，而就是拿其本身来比较！\nNumber(null)        // => 0\nNumber(undefined)   // => NaN\n\n在 javascript 中，undefined 衍生自 null，所以null 与 undefined 天生相等。\n当然，null !== undefined 【数字】与【字符串】 1. 将字符串转换为数字\n2. 使用转换后的值进行比较 【true】与【false】 1. 将 true  转换为 1 后进行比较\n2. 将 false 转换为 0 后进行比较 【对象】与【数字或字符串】 将对象转换为原始值，然后再进行比较。    请注意！ Boolean([])     // true，别以为 [] 转为换为布尔值的结果是 true 就与布尔值 true 就相等，并没有卵的关系！！！\n[] == true      // false，要比较，一切化归为数字说话！\nNumber([])      // 0\n[] == false     // true\n\ntrue  == {}     // false\nfalse == {}     // false\nNumber({})      // NaN，过程为：{}.toSting() => \"[object Object]\" => NaN 最后请记住三句话： 相等性判断与类型转换并 没有什么关系 ，只能依据以上的规则来判断！ \"==\" 运算符 从不试图 将其操作数转换为布尔值 一个值与 true 不相等，则它必然与 false 相等。（这句话， 错的，错的！！ ） 参考资料： 《JavaScript 权威指南》 （第6版） [美].David Flanagan著 淘宝前端团队译\n《JavaScript 高级程序设计》 （第3版） [美].Nicholas C.Zakas著 李松峰 曹力译"},{"path":"/计算机与编程/JavaScript/文章/JavaScript 类型转换/","rawBody":"JavaScript 类型转换 1. to Number 1.1 parseInt() 仅针对字符串 1. 忽略字符串前面的空格，直到找到第一个非空格符\n\n2. 如果第一个字符不是数字或负号，返回 NaN\n\n    parseInt(\"\") => NaN\n\n3. 如果第一个字符是数字字符，继续解析第二个字符，直到解析完所有后续字符或遇到一个非数字字符\n\n    parseInt(\"9527great\") => 9527\n    parseInt(\"11.4\") => 11\n\n4. 可以识别出各种整数字符（十进制、八进制、十六进制）\n\n    parseInt(\"0xA\") => 10\n    parseInt(\"070\") => 56\n    \n    在解析八进制时，ES3 和 ES5 存在分歧，为消除不必要的麻烦，建议传入第二个参数以表示转换时使用的基数（即进制数）\n\n    parseInt(\"070\",  8) => 56   // 当作八进制数来解析\n    parseInt(\"070\", 10) => 70   // 当作十进制数来解析 1.2 parseFloat() 仅针对字符串 1. 忽略字符串前面的空格，直到找到第一个非空格符\n\n2. 如果第一个字符不是数字或负号，返回 NaN\n\n    parseFloat(\"\") => NaN\n\n3. 从位置 0 开始解析每个字符，一直解析到字符串末尾，或解析遇到一个无效的浮点数字符为止\n\n    parseFloat(\"9527.23great\") => 9527.23\n\n4. 第一个小数点有效，第二个小数点无效\n\n    parseFloat(\"22.34.56\") => 22.34\n\n5. 始终会忽略前导的 0\n\n    parseFloat(\"0729.4\") => 729.4\n\n6. 只解析十进制整数格式\n\n    无第二个参数指定基数的用法\n    十六进制格式的字符串始终会被解析成 0\n\n    parseFloat(\"0xF\") => 0\n    parseFloat(\"3.12e7\") => 31200000 1.3 Number() boolean Number(true)  => 1\nNumber(false) => 0 number 只是简单的传入与传出\n\nNumber(2) => 2 null Number(null) => 0 undefined Number(undefined) => NaN string 1. 只包含数字，将其转换为十进制\n\n    Number(\"1\") => 1\n    Number(\"011\") => 11\n\n2. 包含有效的浮点格式，将其转换为对应的浮点数值\n\n    Number(\"1.1\") => 1.1\n    Number(\"02.3\") => 2.3\n\n3. 包含有效的十六进制格式，将其转换为相同大小的十进制数\n\n    Number(\"0xf\") => 15\n\n4. 空字符串，将其转换为 0\n\n    Number(\"\") => 0\n\n5. 其它格式字符串，将其转换为 NaN\n\n    Number(\"2.2a\") => NaN 对象 如果是对象，则调用对象的 valueOf() 方法，然后依照前面的规则转换返回的值。\n如果转换的结果是 NaN，则调用对象的 toString() 方法，然后再次依照前面的规则转换返回的字符串值。\n\nNumber({}) => NaN    过程：{}.toString() => \"[object Object]\" => NaN 1.4 隐式转换 等价于 Number(x) +x x - 0 2. to String 2.1 toString() number、boolean、object、string 都有 toString() 方法 数值的 toString() 方法可以传递一个参数指定输出数值的基数 null 和 undefined 没有 toString() 方法 2.2 String() String() 转型函数能够将任何类型的值转换为字符串 转换规则 1. 如果值有 toString() 方法，则调用该方法并返回相应的结果\n\n2. 如果值是 null，则返回 \"null\"\n\n3. 如果值是 undefined，则返回 \"undefined\" 2.3 隐式转换 等价于 String(x) x + \"\" 2.4 number-to-string toFixed() 根据小数点后的指定位数将数字转换为字符串，它从不使用指数记数法。 toExponential() toPrecision() 3. to Boolean 3.1 Boolean() boolean Boolean(true)  => true\nBooelan(false) => false string Boolean(\"\") => false\nBoolean(\"非空字符\") => true number Boolean(0)   => false\nBoolean(NaN) => false\nBoolean(非零数字值) => true object Boolean(null) => false\nBoolean(任何对象) => true undefined Boolean(undefined) => false 3.2 隐式转换 等价于 Boolean(x) !!x 值 转换为字符串 数字 布尔值 对象 undefined \"undefined\" NaN false throws TypeError null \"null\" 0 false throws TypeError --------------------------- ------------------- ------- -------- --------------------------- true \"true\" 1 new Boolean(true) false \"false\" 0 new Boolean(false) --------------------------- ------------------- ------- -------- --------------------------- \"\" 0 false new String(\"\") \"1.2\" 1.2 true new String(\"1.2\") \"one\" NaN true new String(\"one\") --------------------------- ------------------- ------- -------- --------------------------- 0 \"0\" false new Number(0) -0 \"0\" false new Number(-0) NaN \"NaN\" false Number(NaN) Infinity \"Infinity\" true new Number(Infinity) -Infinity \"-Infinity\" true new Number(-Infinity) 1 \"1\" true new Number(1) --------------------------- ------------------- ------- -------- --------------------------- {}(任意对象) true [ ](任意数组) \"\" 0 true [ 9](1个数字元素) \"9\" 9 true [ \"a\"](其他数组) 使用 join() 方法 NaN true function(){}(任意函数) NaN true"},{"path":"/计算机与编程/JavaScript/文章/JavaScript 语句行尾的可选分号/","rawBody":"JavaScript 语句行尾的可选分号 JavaScript 和其他许多编程语言一样，使用分号（;）将语句分隔开。这对增强代码的可读性和整洁性是非常重要的。在 JavaScript 中，如果语句各自独占一行，通常可以省略语句之间的分号。 不过，在一些地方省略掉分号可能会使你的代码发生意外的错误。以下是需要注意的细节： 1. JavaScript 并不是在所有换行处都填补分号：只有在缺少了分号就无法正确解析代码的时候，JavaScript 才会填补分号。 \nvar a\n\na\n\n=\n\n3\n\nconsole.log(a)\n JavaScript 将其解析为： \nvar a; a = 3; console.log(a);\n\n// JavaScript 给第一行添加了分号，因为如果没有分号，JavaScript 就无法解析代码 var a a。\n\n// 第二个 a 可以单独当作一条语句 “a;”，但 JavaScript 并没有给第二行结尾填补分号，\n\n// 因为它可以和第三行内容一起解析为 “a = 3”；\n 再看一个例子： \nvar y = x + f\n\n(a+b).toString()\n JavaScript 会把这段代码解释成： \nvar y = x + f(a+b).toString();\t// 第二行的圆括号和第一行的 f 组成了函数调用\n 这或许与我们的本意大相径庭，所以为了保证代码的正确执行，我们必须填写行尾的显式分号。 2. 通常来讲，如果一条语句以“(”、“[”、“/”、“+”或“-”开始，那么它极有可能和前一条语句合在一起解析。 以“/”、“+”和“-”开始的语句并不常见，而以“（”和“[”开始的语句则非常常见。所以一些保守的程序员为保守起见，喜欢在语句前加上一个分号以保证程序的正确执行。例如： \nvar x = 0\t// 这里省略了分号\n\n;[x, x+1, x+2].forEach(console.log)\t// 前面的分号保证了正确地语句解析\n 如果当前语句和下一行语句无法合并解析，JavaScript 则在第一行后填补分号，这是通用规则，但有两个例外： a. 在涉及 return 、 break 和 continue 语句的场景中。如果这三个关键字后紧跟着换行，JavaScript 则会在换行处填补分号。例如： \nreturn\n\ntrue;\n JavaScript 会解析成： \nreturn;\ttrue;\n 而代码的本意是这样： \nreturn\ttrue;\n b. 在涉及“++”和“--”运算符的时候，如果将其用作后缀表达式，它和表达式应该在同一行。否则，行尾将填补分号，同时“++”或“--”将会作为下一行代码的前缀操作符并与之一起解析。例如： \nx\n\n++\n\ny\n 这段代码将解析为 x; ++y ，而不是 x++; y 。 在此建议，不要忘记在语句后面加上分号。 JavaScript 权威指南（第六版） >> 第2章 此法结构 >> 2.5 可选的分号"},{"path":"/计算机与编程/Linux/Command/chsh/","rawBody":"描述 chsh  用来更改登录的 shell。如果在命令行中没有给出 shell， chsh  将给出一个提示。 用法 chsh   options 选项 选项 说明 -s, --shell 定义登录 shell -l, --list-shells 显示  /etc/shells  中的 shell 列表 -u, --help 显示帮助信息 -v, --version 显示版本 示例 使用  bash  shell chsh -s /bin/bash 给用户  wangqi  设置  bash  shell chsh -s /bin/bash wangqi 参考 chsh(1) - Linux man page"},{"path":"/计算机与编程/工具/Git/FAQs/","rawBody":"Git - FAQs HTTP Basic: Access denied 错误 Description git push  提示 HTTP Basic: Access denied 错误  Solution 如果账号密码有变动 用这个命令  git config –system –unset credential.helper  重新输入账号密码 应该就能解决了  如果用了第一个命令 还不能解决问题那么 用这个命令  git config –global http.emptyAuth true When git push or git pull always requires username and password Description When try to push or pull from remote repository, it always requires username and password. Solution Method 1 Switching remote URLs from HTTPS to SSH git remote set-url origin git@github.com:username/repo.git Method 2 Run the following command to enable  credential caching : git config credential.helper store You should also specify  caching expire : git config --global credential.helper 'cache --timeout 7200' How can I merge two commits into one if I already started rebase? git rebase --interactive HEAD~2 or git reset --soft \"HEAD^\"\ngit commit --amend"},{"path":"/计算机与编程/工具/Git/branch/","rawBody":"Git - Branch 本地分支 查看分支 git branch 创建分支 git branch <branch> 或 git checkout -b <branch> 合并分支 git merge <branch> 删除分支 git branch -d <branch> 强制删除 git branch -D <branch> 远程分支 查看分支 git branch -r/--remote 拉取分支 git checkout -t/--track <remote>/<branch> 或 git checkout -b <branch> <remote>/<branch> 删除分支 git push <remote> :<branch> 或 git push <remote> -d/--delete <branch> 查看分支跟踪状态 git branch -vv 跟踪远程分支 git branch --set-upstream-to=<remote>/<branch> <branch> 更改远程分支跟踪 git branch <branch> --set-upstream-to <remove>/<branch> 或 git branch <branchk> -u <remote>/<branch> 或 git branch --set-upstream <branch> <remote>/<branch> 清理分支 git remote prune <remote> 更新分支 git remote update <remote> --prune 查看分支记录 git log <remote>/<branch> 重置分支记录 stackoverflow git push -f/--force <remote> <commit-hash>:<remote-branch> 或 git reset --hard <commit-hash>\ngit push -f/--force <remote> <branch>"},{"path":"/计算机与编程/工具/Git/remote/","rawBody":"Git remote 查看当前的远程代码库 git remote 添加远程库 git remote add [NAME] [URL] gir remote -v -v (verbose) 详细查看远程库 更换 url git remote set-url origin <address>"},{"path":"/计算机与编程/工具/Git/学习资源/","rawBody":"学习资源 Git Pro 猴子都能懂的 GIT 入门 廖雪峰 Git 教程"},{"path":"/计算机与编程/工具/NPM/npm 切换镜像源/","rawBody":"NPM 切换镜像源 配置  config npm config set registry https://registry.npm.taobao.org 命令行指定 npm --registry https://registry.npm.taobao.org info underscore  编辑  ~/.npmrc registry = https://registry.npm.taobao.org"},{"path":"/计算机与编程/工具/NPM/学习资源/","rawBody":"NPM 学习资源 从0到1开发一个小程序cli脚手架（一）--创建页面/组件模版篇"},{"path":"/计算机与编程/工具/Vim/常用命令/","rawBody":"Vim 常用命令 复制、粘贴  ref 复制当前行： yy 粘贴复制内容： p"},{"path":"/计算机与编程/微信开发/微信小程序/e2e 测试/","rawBody":"微信小程序 e2e 测试 参考资料 官方文档 聊聊微信小程序自动化如何来做？ 微信小程序自动化测试实践"},{"path":"/计算机与编程/微信开发/微信小程序/学习资料/","rawBody":"微信小程序开发学习资料 微信小程序开发文档 滴滴出行小程序体积优化实践 小程序直播接入指南"},{"path":"/计算机与编程/计算机基础/Mac/FAQs/","rawBody":"Mac FAQs How can I extract .rar files on the Mac? Using Homebrew, in a terminal type: brew install unrar to use it just navigate to your file and type unrar x <filename> 查看端口占用，关闭进程 查看占用端口进程 lsof -i [PORT] 关闭进程 kill [PID]"},{"path":"/计算机与编程/计算机基础/Mac/shortcut/","rawBody":"screenshot:  Shift + Command + 4"},{"path":"/计算机与编程/面试/JavaScript/","rawBody":"前端面试之 JavaScript 部分 <script>  标签  async  和  defer  的却别 async 该布尔属性指示浏览器是否在允许的情况下异步执行该脚本。该属性对于内联脚本无作用 (即没有src属性的脚本）。也就是说，async属性告诉浏览器先把文件下载下来，在“时机成熟”的时候再执行。异步脚本一定会在页面的load事件前执行，但可能会在DOMContentLoaded事件触发之前或之后执行。而且更加需要注意的是，标记为async的脚本并不保证按照指定他们的先后顺序执行。所以，确保各个异步脚本互不依赖非常重要。 defer 这个布尔属性被设定用来通知浏览器该脚本将在文档完成解析后，触发  DOMContentLoaded  事件前执行。如果缺少  src  属性（即内嵌脚本），该属性不应被使用，因为这种情况下它不起作用。对动态嵌入的脚本使用  async=false  来达到类似的效果。 HTML5 规范要求脚本按照它们出现的先后顺序执行，因此第一个延迟脚本会先于第二个延迟脚本执行，而这两个脚本会先于  DOMContentLoaded  事件执行。在现实当中，延迟脚本并不一定会按照顺序执行，也不一定会在  DOMContentLoaded  事件触发前执行，因此最好只包含一个延迟脚本。 参考"},{"path":"/计算机与编程/面试/前端综合/","rawBody":"前端面试综合 面试题收集 50道 CSS 基础面试题（附答案） 几道高级前端面试题解析 阿里校招前端笔试题小结 前端开发面试题集合 前端面试考点多？看这些文章就够了（2019年6月更新版） 金三银四，你可以行动了 中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上) 问题 文档模式有哪几种？有什么区别？ 混杂模式（quirks mode），标准模式（standards mode），准标准模式（almost standardsmode）"},{"path":"/阅读/读书笔记/以幽默的方式过一生/","rawBody":"以幽默的方式过一生 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"少年维特的烦恼\" /> 摘录 书架奇遇记 人与人又何尝不是如此？不到那个时间，任你怎么爱我，我很感激，却无法爱上你。其实，我想告诉你，不是你不好，而是我没准备好。 生活，就是心怀最大的善意在荆棘中穿行。 生活，就是心怀最大的善意在荆棘中穿行。即使被刺伤，亦不改初衷。 所有的伟大，都源于一个勇敢的开始 很多事情，只要开始迈出第一步，就根本停不下来。但前提是，你得开始。 如果真的决定要开始一件事，就让自己尽快开始。如果已经决定出发，就不要把生命浪费在犹豫上。因为所有的伟大，都源于一个勇敢的开始。 人生中的选择 我想，人生的路归纳起来无非两条：一条用来实践，就是正在走的这条；一条用来遗憾，没事想想就好了。其实如果再给你一次选择，你依然会因为没有选择别的路而遗憾，因为人生不可能穷尽所有选择。 作者简介 琢磨先生，原名郭城，财富管理专家，新锐经济学者，一位罕见的能将哲学、心理学和经济学融会贯通的人，被媒体评价为“人性的手术刀，又给人温暖向善的力量。” 财经第一媒体平台功夫财经的签约嘉宾，广东卫视《财经郎眼》脱口秀策划人，中山大学客座教授，剧场脱口秀演出策划人，在各地的脱口秀演出巡演一票难求。 出版著作《客户服务工具集》、《水煮西游记》和《培训师》。"},{"path":"/阅读/读书笔记/少年维特的烦恼/","rawBody":"少年维特的烦恼 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"少年维特的烦恼\" /> 摘录 人啊，何必总是对自己表示不满！我的朋友，我在这郑重起誓，以后绝对会戒掉这个坏毛病，我不能再和以前一样，总是对自己以前遇到的困难和挫折耿耿于怀；我应该好好把握现在，至于已经过去了的事情，就让它随风而去吧。人不应该太钻牛角尖，你的教导没错，亲爱的朋友，我们需要的是对眼下情况进行分析和掌握，而不是活在过去，依靠记忆生活，我们必须让自己开心一点。 虽然没有人陪伴着我，不过我正好在孤身一人的时候让我的心灵好好休息一段时间，况且眼下正是阳光明媚的季节，我也不用再担心自己会被寒冷吞噬。这里树木繁盛，百花争艳，我多想自己是一只徜徉在花海中的昆虫，肆无忌惮地享受大自然的美丽。  简介 内容简介 《少年维特的烦恼》是第一部让歌德在德国几乎一夜成名的小说。本书于 1774 年秋天在莱比锡书籍展览会上面世，并在那里成了畅销书。它是歌德作品中被他的同时代人阅读得最多的一本。《少年维特的烦恼》中的主人公——他的行为仅仅取决于他的感觉——是感伤主义的代表性人物。 作者简介 约翰·沃尔夫冈·歌德（1749－1832）是德国近代杰出的诗人、作家和思想家。世人公认他是继但丁和莎士比亚之后西方精神文明最为卓越的代表。《少年维特的烦恼》这部以第一人称写就的书信体小说，不仅传达了欧洲从古老的封建制度向资产阶级过渡的转型时期，中青年一代追求“个性解放”，“感情自由”，“恢复自然的社会状态”，“建立平等的人与人关系”的强烈愿望，也阐明了作者自身鲜明的立场。"},{"path":"/阅读/读书笔记/自卑与超越/","rawBody":"自卑与超越 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"自卑与超越\" /> 摘录 生活的意义 人的一生并不仅仅只是经历事物本身，更为重要的是，体验这些事物对我们的生活有什么样的意义。 正是这些在困难面前绝不服输而走出困境的人，极大地推动了社会的发展。他们越挫越勇，不断地拼搏向上。 不能自发地作为，不能表达一个人真正的感觉与想法，以及因此而必须做作虚伪，这些都是感到自卑与懦弱的根本致因。 -- 弗洛姆 现代人生活在这样一种错觉之下：他似乎很明白自己的追求，但事实上他追求的，不过是别人期望他去追求的东西罢了。 -- 弗洛姆 他对自己价值的理解就在于占有的多少，而他如果想成为最好的，就不得不成为占有最多的。这种恶性循环产生消极、嫉妒、贪心；最终导致人内心的虚弱和自卑。他对于自己的估价是基于他有什么，而不是他是什么。 -- 弗洛姆 要想清楚地了解一个人赋予自己的生活什么样的意义，最好的途径就是记忆。 一个人之所以会回想一件事，是因为这件事在他生命中所占的位置至关重要。这种记忆会暗示他：“这件事物是你应该避免的。”“这件事是你所期待的。”“创造你的生活吧！”我们必须承认，每一段记忆都是具有纪念意义的。 当我们赋予生活某种意义的时候，很有可能会导致错误的结果，我们在面对困难的时候不应该采取推诿、埋怨或者博取他人同情、自认为丢人、自责等消极态度，而是应该不断地努力。我们应该这样认为：我们是自己的主人，我们一定要开拓新的生活，我们有能力这样做，同时，这也是我们应尽的责任。具有开创性的工作非我莫属！如果每一个独立的个体，都能采取合作的形式来面对生活，那么，人类社会必定会不断的进步。 可以简单地把学会一门艺术分成两个部分，一是掌握理论，二是掌握实践。 要成为大师，除了学习理论和实践外还有第三个必不可少的因素，即要把成为大师看得高于一切，这一目标必须占据他整个身心。 经历过孤寂的人必然会有恐惧感。实际上孤寂感是每种恐惧的根源。孤寂意味着与外界没有联系，不能发挥人的力量，意味着一筹莫展，不能把握世界，事物和人；意味着世界把我淹没，而我只能听之任之。所以孤寂是引起强烈恐惧感的根源，同时孤寂还会引起羞愧和负罪的感觉。 人得解决问题，他永远不能安稳地停留在顺应自然的被动状态。 -- 弗洛姆 简介 作者：  奥地利  阿尔弗雷德·阿德勒 《自卑与超越》是阿德勒从个体心理学观点出发，阐明人生道路和人生意义的通俗性读物。但通俗中包含着极深的哲理和巨大的学术价值。在《自卑与超越》中，作者提出：每个人都有不同程度的自卑感，因为没有一个人对其现时的地位感到满意；对优越感的追求是所有人的通性。然而，并不是人人都能超越自卑、关键在于正确对待职业、社会和性，在于正确理解生活。那些自幼就有器官缺陷或被娇纵、被忽视的儿童，以后在生活中容易走上错误的道路；家长和教师应培养他们对别人、对社会的兴趣，使他们真正认识“奉献乃是生活的真正意义”。这样，他们就能够从自卑走向超越。"},{"path":"/阅读/读书笔记/规模：复杂世界的简单法则/","rawBody":"规模：复杂世界的简单法则 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"规模\" /> 摘录 不同个体对异常简单规则的不断重复便可产生复杂的行为。 简介 生命体、城市、公司，乃至一切复杂万物，是否都存在相通的内在生长逻辑？制约生命与死亡、城市化的扩张及公司寿命的决定因素究竟是什么？人类能否通过融汇生物学、物理学、社会学、经济学等跨学科知识，找到揭开复杂万物生长背后的简单法则？ 享誉全球的复杂系统性科学研究中心圣塔菲研究所前所长杰弗里•韦斯特潜心研究数十年，经过反复试验和求证，终于找到了解构复杂世界的简单逻辑——规模法则。在韦斯特眼中，规模成为衡量世间万物的不变标准，利用规模法则，复杂世界变得可量化、可预测、清晰明了且极度统一。规模法则阐明了从生命体到城市、从经济体到公司的生长与衰败都离不开其自身规模的制约，并与其规模呈一定比例关系，遵守统一的公式。这一算法框架不仅为人类思考未知世界提供了难得的简单法则，而且能解答不同生命体的生长极限之谜，优化城市发展架构并找到推动经济实现可持续发展、公司从初创到卓越的生长曲线。 《规模》将帮助你重新思考生命、认识自身、了解你的生活与工作，并告诉你复杂世界其实充满简单的逻辑，只要跳脱思维框架，打破学科限制，你就会重新看清你周遭的一切。 作者简介 杰弗里•韦斯特，世界顶级理论物理学家。全球复杂性科学研究中心、“没有围墙的”学术圣地——圣塔菲研究所前所长，入选《时代周刊》全球最具影响力100人。数十年致力于“规模”的研究工作，其研究成果被应用在理解生命体、城市可持续发展、企业运营等众多领域，被业内奉为“跨学科诺贝奖”的不二人选。"},{"path":"/English/EF/Finance/Lesson1 Giving a friend financial advice/","rawBody":"Giving a friend financial advice Vocabulary: Personal finance Talking about your personal finances When you are talking about  personal finances , you need to start with your  expenses ,  debts ,  income  and  savings . My  expenses  are about 2,000 a month. I  have  about $5,000  in debt . My  income  is around $5,000 a month. I have about 6,000  in savings . Here are some crucial verbs for talking about money and expenses. Notice the word  loan  can also be a noun. My parents  loaned  me $4,000 to go to school. I have a student  loan  from the government. I  borrowed  3,000 from the bank. I  owe  the bank $3,000. I have to  pay  my parents  back . Expressions: Giving financial advice Understanding the problem Before you give someone financial advice, make sure that you ask questions about the situation. A: What's the problem? B: My finance are a mess! My rent is killing me. A: What are you big expenses? B: My car payment, rent and my student loan. A: What else is there? B: I owe my parents $3,000. A: Are you still working part time? B: No, I'm full time now. A: How much do you have in saving? B: Almost nothing. Giving and responding to advice Here are some ways to give and respond to advice. Some are more direct than others. Notice that  advice  is a noun. The verb is  advise . A: You  might consider  getting a roommate. B: I know.  You're right . That's good advice. A:  If I were you , I'd sell the car. B: That  sounds reasonable . A:  You'd better  move in with your parents. B:  Are you kidding?  That's a terrible idea! Listening: Listening for gist When you listen to a conversation, often there is language that you don't understand. In those situations, listen for the  gist  of the conversation. When you listen for gist, you listen for the attitude of the speakers and the main idea of what they are saying. Listen to Stuart. Try to catch the gist of what he is saying. Max is one of my best friends, but he's terrible with money. I mean, he's awful with money. There's no getting around it. It's ironic because his family is loaded. They have tons of cash. Even if you don't understand all of the words, you can get the gist of the conversation. What is Stuart's attitude or emotion? Stuart is annoyed with his friend Max. What is the main idea? Max is terrible with money even though his family has lots of cash."},{"path":"/English/EF/Finance/Lesson2 Talking about the cost of living/","rawBody":"Talking about the cost of living Grammar Expressing frequency Here are some different ways to talk about monthly and yearly expenses. My groceries cost about $400  each month .\t My train pass is $50  a month .\t My utility bill is usually around 200  per month .\t My  monthly  mortgage payment is $2,500. I pay about 7,000 in property tax  every year . For some expenses that happen more than once in a period of time, you can use words like  twice  or  three times . I pay my car insurance  twice a year . I buy a subway ticket * three times  a week."},{"path":"/English/EF/Meeting/Lesson1 Opening a meeting/","rawBody":"开始一个会议 <Video src=\"./GE_10.1.1_v2.mp4\" poster=\"GE_10.1.3.1.1.jpg\" /> JOAN  Okay. Let's get started. Do you all have the agenda? JOAN  The purpose of this meeting is to talk about our relationship with Sunset Computers since the merger. JOAN  The five of us are here because we do the most business with them. JOAN  The first item on the agenda is news about Sunset. Are you all aware that Archie Morgan, their CEO, has resigned? HARRY  I didn't know that. SALLY  No, neither did I. JOAN  Yes, well, our relationship with him just wasn't working. Sunset's chief financial officer, Mary Ozaki, will also be leaving. SIMON  That’s good news. SIMON  I'm sorry, but it's time for a change over there. JOAN  Okay. Let’s move on to the next item. JOAN  I’ll probably be flying out to meet the Sunset executives on Monday. JOAN  The CEO’s in a meeting about this right now. I'll have more information later today. TODD  Okay. JOAN  The last item on the agenda is our problems with Sunset. JOAN  I've been hearing some complaints from different people here, but I need more detailed information. SALLY  If you ask me, the primary problem’s communication, or lack of it. JOAN  Could you be more specific, Sally? SALLY  Well, they're very slow in answering our questions. SALLY  For instance, just yesterday, I phoned their director of marketing and left a message. Then I sent an email. Still no answer. HARRY  Do they even have cellphones? HARRY  I'm serious. I can't get cellphone numbers from them. TODD  A huge challenge for me is figuring out who's responsible for what. SIMON  I have to say that their director of engineering, Ed Fife, is incredible. He gets me what I need quickly, and it's always accurate. JOAN  Hmm. This is all very interesting. Vocabulary: Meetings agenda merger aware resigned executives challenge figuring out accurate 会议中用到的名词、动词和形容词 以下是一些商务会议中可以用到的名词： There are five items on today's  agenda . 今天的日程有五项。 The  merger  of our two companies are still going ahead. 我们两家公司的并购还在进行中。 The final decision will be made by the CEO. CEO会做出最终决定。 The CFO  is responsible for  reporting all company income. CFO负责汇报公司营收。 John is our new marketing  executive . John是我们的新任销售主管。 Our biggest  challenge  is to increase market share. 我们最大的挑战是增加市场份额。 以下是一些商务会议中可以用到的动词： We have to  figuring out  a solution to this problem. 我们必须想办法解决这个问题。 Their CEO  resigned  last week. 他们的CEO上周辞职了。 They just fired their marketing executive. 他们刚把销售主管辞了。 以下是一些商务会议中可以用到的形容词： The figures in the report were not  accurate . 报告中的数据不准确。 I was not  aware  how serious the situation was. 我不知道情况有这么严重。 Sentences I'm sure if we work together, we can figure it out. 我确信如果我们同心协力，我们将会解决这个问题。 The financial must be completely accurate. 财务报告必须完全精确。 Any last minute items to be added to the agenda? 是否有最后一刻要添加到议程中的项目？ It's not one company buying another. It's a merger. 这不是一家公司收购另外一家，是并购。 A good manager can deal with any challenge. 一个好的经理可以处理任何挑战。 The board of directors forced her to resign. 董事会强迫她辞职。 Vocabulary: Changing values Let's get started. 我们开始吧。 Do you all have the agenda? 大家都拿到议事日程了吗？ The purpose of this meeting is to ... 本次会议的目的是…… The five of us are here because ... 我们五个人来到这里，是因为…… The first item on the agenda is ... 会议议程第一项是…… 开始会议 在会议开始时通常我们有必要吸引每个人的注意力。检查一下是否人手一份日程表。务必要感谢每一个人的到场，然后告诉他们此次会议的目的 OK, everyone.  If I could have your attention, please.  Let's get started. 好的，各位请注意，会议现在开始。 Does everyone have an agenda? As you can see,  we have three items to discuss today. 每个人都拿到日程表了吗？如大家所见，我们今天要讨论三个事项。 对到场的人表示感谢十分重要。 Thank you all for coming today. I know how busy you all are. 感谢大家到场。我知道你们都很忙。 确保每个到场人员明白会议目的。 The purpose of today's meeting is  to discuss the CFO's resignation and her replacement. 今天会议的目的是讨论 CFO 的离职和下一任人选问题。 We are here because  a competitor has proposed a merger with our company. 有家竞争对手提出要和我们公司合并，今天的会议就是要讨论这个问题。 可以用日程来开始会议。 The first item on the agenda is  a company update from the CEO. 日程第一项是由 CEO 发布公司最新动态。 OK.  Let's begin with item number one , the company update. 好的，我们现在开始进行第一项，公司动态。 just wasn't working 就是不起作用 It's time for a change. 该改变的时候了。 hearing some complains 听一些人抱怨 I need more detailed information. 我需要更多详细的信息。 The primary problem's communication. 首要问题是沟通。 Could you be more specific? 你能更具体一些吗？ For instance... 比如…… A huge challenge for me is ... 对我而言，一个艰巨的任务是……  Expression: Discussing company problems 问题陈述 陈述问题时请务必做到简明扼要。用 问题 或 挑战 这类词汇来清晰地说明问题。 The primary problem is a difference in management style. 首要问题是管理方式的不同。 The biggest challenge we face is growing competition. 我们面临的最大挑战是日益激烈的竞争。 阐述和举例 如果有问题没有搞懂，请要求对方澄清。 The biggest problem is their CFO. 最大的问题是他们的 CFO。 Could you be more specific? 可以说得具体一点吗？ 用细节和例子增强针对性。 For instance , they don't return out phone call. 比如，他们不回我们的电话。 The best example, I can give is  our decreasing market share. 我能想到的最好的例子就是我们的市场份额正在下降。"},{"path":"/English/EF/Meeting/Lesson2 Discussing proposals in a meeting/","rawBody":"在会议中讨论提案 <Video src=\"./ef-meeting-vocabulary-proposals.mp4\" poster=\"./GE_10.1.1.2.1.jpg\" /> JOAN  All right, so communication has really been the big issue with Sunset. JOAN  What can we do about it? I mean, when I’m there on Monday, in a meeting with them, what solution can I propose? SALLY  Well, a new CEO and CFO is a good start, but is it enough? One way to solve the problem might be to replace even more managers. SIMON  I'm not sure I agree with that. TODD  And I really disagree. We have to be careful about their morale. They're losing their two biggest executives. That's a huge change already. HARRY  Well, at least let's send them to some communication training. They're awful! JOAN  That's a possibility. TODD  I'd like to propose some formal team-building. JOAN  Okay. What do you have in mind? TODD  How difficult would it be to bring some of the Sunset managers here for, say, a week? JOAN  Well, it's not in the budget, but... SALLY  I really like that idea. We need to meet these people. HARRY  I think so, too. If they come here and see how we do things... SIMON  Let's take that one step further and send people over there, too. We need to start building personal relationships with them. JOAN  Well, I think those are all excellent ideas. I can't make any promises, but I'll try to find some money for them. TODD  And, of course, if you do go there, you're going to be evaluating their managers. JOAN  Of course. Vocabulary: Proposals propose a good start morale team building budget further promises evaluating 会议中用到的名词、动词和形容词 以下是提出和讨论议案可以用到的词汇： How could we take the idea one step  further ? 我们怎么可以让这个问题的讨论更进一步？ How do you think about team building? Would that solve the problem? 你怎么看团队建设？团队建设可以解决问题吗？ We need to do something to improve employee  morale . 我们需要提高员工士气。 What about the solution I  proposed  last month? We hope the salary increase will improve  morale . After an excellent  start , the idea went nowhere. We like you idea, but we'd like to take it  further . I like team building, but it doesn't solve everything. Unfortunately, the money just isn't in the budget. How could take the idea one step further? 怎样让讨论更深入呢？ The negotiations are off to g good start. 谈判会有一个良好的开端。 What exactly do you propose as a solution? 那么你的解决方案到底是什么？ I can't promise you a bigger budget for that project. 我不能保证可以给这个项目增加预算。 Every employee is evaluated by a manager. 每个员工都会由一名经理评估。 Do team-building exercises improve morale. 团队建设训练是否可以提高士气？ Expression: Agreeing and disagreeing I'm not sure I agree with that. 我不敢说我同意那一点。 I really disagree. 我坚决不同意。 I really like that idea. 我很喜欢那种想法。 I think so, too. 我也这么看。 I think those are all excellent ideas. 我认为那些点子都非常不错。 同意和不同意 对某人或某事表示同意或不同意有很多种说法。以下表示同意： Yeah, that would be OK.(mild agreement) 是的，这样可以。（温和） I think so, too.(agreement) 我也这么想。（直接） I agree with you.(agreement) 我同意你。（直接） We're on the same page.(agreement) 我们意见一致。（直接） I really like that idea.(strong agreement) 我真的喜欢这个主意。（强烈） I think those are excellent ideas.(strong agreement) 我认为这些主意非常棒。（强烈） 以下是不同意的表达： I'm not sure I agree with that.(mild disagreement) 我不确定我是否同意（温和） I'm sorry, but I disagree.(polite disagreement) 对不起，我不同意。（礼貌） I'm not with you on that.(disagreement) 我不同意你的观点。（直接） I really disagree with you.(strong disagreement) 我真的不同意你。（强烈） I think that's a terrible idea.(very strong disagreement) 我认为这个想法很糟糕。（非常强烈） Expression: Making proposals What solution can I propose? 我能够提出什么样的解决方案？ One way to solve th problem might be ... 一种解决问题的办法可能是…… At least let's send them to ... 至少让我们把他们送到…… I'd like to propose ... 我想提议…… What do you have in mind? 你有什么想法？ How difficult would it be to ...? ……会有多难？ Let's take that one step further. 让我们再进一步。 I can't make any promises, but ... 我做不了保证，但是…… 提议 提出议案有很多方法，有的很直接，有的更间接一些。 间接或礼貌的提议 One way to solve the problem might be to  increase the training budget. 增加培训预算可以是解决问题的一个方法。 At least let's talk about  increasing the training budget. 至少要讨论一下增加培训预算的问题。 How difficult would it be to  increase the training bueget? 增加培训预算很难吗？ 正式或直接的提议 I'd like to propose that  we increase the training budget. 我想提议提高培训预算。 I propose that  we increase the training budget. 我提议提高培训预算。 Let's take that one step further and  increase the training budget. 让我们再进一步，增加培训预算。"},{"path":"/English/EF/Meeting/Lesson3 Concluding a Meeting/","rawBody":"结束会议 <Video poster=\"./lesson03-concluding-a-meeting.jpg\" src=\"./lesson03-concluding-a-meeting.mp4\" /> JOAN  So, I just had a short meeting with our CEO, David. JOAN  I’ve been given the task of coming up with a plan of coordination between our two companies. I’ll be flying out there on Monday. HARRY  Congratulations! JOAN  Thank you, Harry. Now, as I was saying, it’ll be my job to get the two companies working together smoothly. JOAN  I'll probably be flying back and forth for the next few weeks. Todd will be in charge here whenever I'm at Sunset. JOAN  That’s going to involve a lot of planning, and I don't have much time, so, uh, let’s conclude this meeting quickly. JOAN  Now, where was I? Oh, yes. As a next step, in the next week or so, please keep me informed about any problems that you're having with Sunset. JOAN  Give me details. I’d really appreciate your input on this. JOAN  Let me see. I’ll, uh, follow up on the idea of team building, and I’ll also send an email summarizing this meeting. JOAN  Oh, and, uh, one more thing: This discussion is confidential. Nothing leaves this room. TODD  Yes, please. No talking about firing people at Sunset or flying them here. Those poor people have enough rumors to worry about already. JOAN  Okay. That’s it for now. Thank you all for coming. JOAN  Uh, Todd and Simon. Could you stay behind? Vocabulary: Company issues coming up with coordination back and forth 来回地，反复地 in charge 负责，主管 keep me informed 让我了解情况 rumors 谣言 Grammar：future tenses 复习一下谈论未来的不同说法。 用一般将来时  will  和其否定形式  won't  来表示 自愿做某事、承诺或预测 。 I 'll  help you. 我帮你。 I promise I  won't  spread any rumors. 我保证不散播任何谣言。 I'm sure that team coordination  will  improve. 我相信团队协作会有改进的。 用一般将来时  be going to  来谈论 计划或预测 。 He  is going to  Mexico City next week. 下周他会去墨西哥城。 I believe we 're going to  have a merger. 我相信我们会实行并购。 用将来进行时  will  或  be going to  加动词  be  和一个 现在分词 来谈论将来会发生的 持续性 的动作。 I 'll be doing  some back and forth between here and Mexico. 我会从这儿到墨西哥之间往返好几趟。 She 's going to be running  the office while he's away. 他不在时由她主持工作。 用将来完成时  will  或  be going to ，动词  have  加上一个 过去分词 来讨论将来某个时间点 已经完成 的动作。 The meeting  will have concluded  by the time you return. 等你回来会议都结束了。 We  won't have finished  the project by next week. 下周项目完成不了。 Good afternoon, everyone. First, I 'm going to  give you all an agenda so we're all on the same page. We  will  spend approximately 20 minutes on each item. I hope that you will all give us some suggestions and recommendations in the discussion. I' m going to  ask you for ideas if I have to. This is a group effort. By the end of the meeting, I hope we  will have come up with  some creative ways to improve communication between our teams. Please speak freely. This will be a brainstorming session. There are no bad ideas. Jack  is going to be writing  down all of our ideas so we  won't  lose anything. OK, let's get started. Expression: Starting or returning to a topic 在讨论中开始或回到某个点。 当需要在讨论中开始一个新观点时可以用到这些表达。当你需要一点时间思考时可以用  let me see 。 Let me see. The next topic of discussion is  challenges in the coming year. 让我想想。下个要讨论的话题是明年面临的挑战。 The next item on the agenda is  an update form our CFO. 日程下一项是来自 CFO 的最新信息。 Moving on, let's discuss  the plan to expand overseas. 下一步，让我们来讨论一下海外扩张的问题。 Oh, and one more thing: we need to discuss  a change in employee insurance. 哦，还有一件事。我们要讨论一下员工保险的一个变动。 有时候讨论会偏题。如果讨论偏题，可以用这些表达来带回主题： Now, as I was saying , our competitive situation is Europe has changed. 正像我刚才说的，我们在欧洲的竞争局面已经发生了变化。 Now, where was I? Oh, yes  - the sales figures for last quarter. 我刚说到哪儿了？哦，是的，上个季度的销售额。 Getting back to my point , I think a merger is not an option. 回到我的观点，我认为并购是不可取的。 Expression: Closing a meeting Let's conclude this meeting quickly. 让我们快点结束这场会议。 As a next step ... 接下来…… I'll follow up on the idea of ... 我后续会关注……的主意 I'll also send an email. 我还会发送一封邮件。 This discussion is confidential. 此次讨论事关机密。 Nothing leaves this room. 出了这个房间跟谁也别说。 Okay, that's it for now. 好，目前情况就是这样了。 Thank you all for coming. 谢谢各位前来。 Could you stay behind? 你能留下来一会吗？ 结束会议 如果要结束会议，通常先会预示会议即将结束，然后再讨论接下来每个人需要完成的任务，也就是  next steps 。最后主持会议的人感谢所有人的到场。 用这些表达来说明会议即将结束： OK, I know we're all busy, so  let's conclude this meeting quickly . 好的，我知道大家都很忙，所以我们快点结束吧。 I think that's all about it.  Let's wrap things up . 我认为差不多了。来做个总结吧。 Unless anyone has anything else , I think we're ready to talk about  next steps . 如果没有人有任何别的意见，我觉得我们可以讨论下一步计划了。 用这些表达来谈论未来计划。表达未来自愿做某事时，人们会使用  will 。 I'll follow up on  finding a beter location for the office. 我会继续寻找更好的办公地点。 Moving forward , we will need to learn more about our competition. 未来我们需要了解更多竞争对手的情况。 当下一步需要间接地提出命令时，经理可以用  let's 。 As a next step, let's  all think about ways to improve communication. 下一步，让我们想想如何改进沟通。 用这些表达来讨论保密性： I just want to say again that  this discussion is confidential . 我只想再说一遍，这次讨论是保密的。 Nothing we've discussed here  leaves this room . 所有我们在这儿说过的话都不会离开这个屋子。 用这些表达来结束会议以及感谢与会者： OK, that's it for now. Thank you all for coming. 好了，就到这儿。感谢大家的参加。 I think we're finished here. Thanks very much to you all. 我想我们该结束了。非常感谢诸位。 This has been a very productive meeting. I appreciate all of you being here. 这次会议非常有成效。感谢各位的参加。"},{"path":"/English/EF/Meeting/Lesson4 Summarizing a meeting/","rawBody":"结束会议 <Video poster=\"./GE_10.1.4.1.1.jpg\" src=\"./GE_10.1.4_v2.mp4\" /> JOAN  Okay, so David met with the board of directors this morning. They've decided to move quickly to integrate the two companies. TODD  Smart move. Finally. JOAN  Yes. Simon made me aware of major problems there three months ago. I did tell David about it, but, CEOs sometimes just... JOAN  Anyway, after listening to Sally and Harry today, I wish that I'd pushed David more. Now the board is not happy. TODD  We all should've pushed David more. JOAN  Yes, maybe we should have. But what’s done is done. Now, I need help with a decision. The board has decided not to replace the CEO of Sunset. SIMON  I'm not surprised. TODD  It's a reasonable move. If we're integrating the two companies, we don't need two CEOs. JOAN  But we'll be hiring a chief operating officer for Sunset. SIMON  A COO? That makes sense. Someone has to be in charge over there. JOAN  And I was offered the job. TODD  Should we congratulate you? JOAN  No. I turned it down. I have a great team and family in this city. And Sunset is a mess. SIMON  I'm glad that you're staying. And I think that I know why I'm in this meeting. JOAN  Tell me about your friend, Ed Fife. SIMON  Oh, he's wonderful. Excellent manager. His team loves him. JOAN  Thanks. I'll talk to him when I'm at Sunset. Well, that's it for now. Thanks for everything, guys. TODD  Any doubts or regrets about turning down the job? JOAN  None. Vocabulary: Issues, decisions and changes board of directors 董事会 integrate 合并 That makes sense. 那很有道理。 I turned it down. 我拒绝了它。 regrets 遗憾 表示问题、决定和改变的名词和动词 这里是一些动词和名词。你可以用这些词来表达对于公司问题、决定和变动的感受。 Verb Noun regret regret doubt doubt pressure pressure replace replacement integrate integration congratulate congratulations 注意以下对话中动词和名词的不同形式： A: Do you  regret  turning down the job? 拒绝这份工作你后悔吗？ B: Yes, I do have some  doubts . 是的，我犹豫过。 A: I'm under a lot of  pressure  right now. 我现在压力很大。 B: You mean, due to the  integration  of the two companies? 你是说，因为两家公司的合并？ A: Yes. I'm afraid that if I don't do my job well, they'll  replace  me. 是的，我担心如果我的工作做不好，他们会把我换掉。 A:  Congratulations  on your promotion! 祝贺你升职！ B: Thanks, but no need to  congratulate  me. It just means more work. 谢谢，不过不需要祝贺我，这代表我又要做更多的工作了。 Expression：Expressing regret I wish that I'd pushed David more. 我希望我多鼓励一下 David 就好了。 We all should've pushed David more. 我们所有人都该多鼓励一下 David。 What's done is done. 过去的都过去了，木已成舟 Any doubts or regrets about ... 有关……的任何怀疑或遗憾 表达遗憾 用这些表达来询问是否有遗憾。记住， regret  这个词既可以是名词，又可以是动词。 Do you have any regrets about  leaving the company? 离开公司你后悔过吗? Do you regret  turning down the job? 拒绝这份工作你后悔吗？ 用这些表达来表示遗憾。注意， that  可用可不用。 I wish I had  accepted the job. 我要是接受这份工作就好了。 She regrets that she didn't  accept the position. 她后悔没有接受这个职位。 She regrets  turning down the position. 她后悔拒绝这份工作。 We should have  hired the other candidate. 我们当时应该雇用另外一个候选人。 用  What's done is done.  来表示接受现实。 What's done is done. 木已成舟。 Expression: Talking about a decision They've decided to move quickly. 他们决定迅速行动。 Smart move. 明智之举。 I need help with a decision. 我做决定需要帮助。 The board has decided not to replace ... 董事会决定不更换…… I'm not surprised. 我并不吃惊。 It's a reasonable move. 你的决定很合理。 Reading: Reading a meeting summary 名词性从句 名词性从句在句子中做名词用。用 动词 + that + 名词性从句 来写会议总结非常有效。注意， that  可用可不用。 She proposed  that the board of directors replace the CFO . 她提议由董事会取代 CFO。 He decided  the merger didn't make sense . 他认为并购不合理。 We all agreed  that it was a reasonable move . 我们都觉得这是一个合理的变动。 I suggested  we move quickly . 我建议快点行动。 注意，有些表示紧急情况或重要性的动词后面跟的是名词性从句，句中动词用的是原形。这叫  the subjunctive （虚拟语气）。 The CEO  insisted  that we  be  on time. CEO强调我们必须准时。 I  suggested  that he  take  the job. 我建议他接受这份工作。 It was a very interesting meeting. There were a lot of different opinions. The COO suggested that the board move quickly to accept the government's offer. The CFO disagreed . He proposed that they wait until the financial results from the next quarter were available before making any decision. The CEO agreed that they shouldn't move too quickly, but she also decided they should schedule another meeting with the government for next week."},{"path":"/English/EF/Telephoning/Appointment and Arrangement/","rawBody":"Telephoning: Appointment and Arrangement <Video src=\"./TE1_700V.mp4\" /> PRESENTER  Hello? Hey, yeah, yeah, I'm fine. How are you? Okay. Alright, I got a few things going on here. I'll speak to you later about it, Okay? Uh... you know... I'll call you at about 5 o'clock. All right. Thanks a lot. Bye bye. PRESENTER  Now that wasn't a business call. If it had been, my language would have been much more formal. PA  Good morning. Design Incorporated, Danielle speaking. How can I help you?... Well, I'm afraid he's in a meeting right now. May I ask who's calling? PA  Hold on a moment, Mr. Novak, I'll just check his schedule... Well, he's free tomorrow afternoon at 2.30... PA  Uh-huh... So that's Wednesday the 3rd of June, at 2.30 p.m. I'll let him know. Could I have your number please? PA  Uh-huh... Let me just read that back to you. That's 333 6393, extension 919. Good. I'll call back later and confirm... PA  Thank you. Bye. PRESENTER  Listen to Danielle's polite, formal phone language. PA  Well, I'm afraid he's in a meeting right now ... May I ask who's calling? ... Could I have your number please? PA  Let me just read that back to you. That's 333 6393, extension 919... CHAIRMAN  So, Danielle. Tomorrow's schedule? PA  Eh, well... You have a meeting with Claire Fairbanks at 9 a.m ... Lunch with the Wentworth Group at 12... And, yeah, Scott Novak phoned. I scheduled a meeting with him for 2.30... CHAIRMAN  Danielle, I'm going to the dentist's tomorrow afternoon. PA  Oh. I'm sorry. I didn't know. But I checked your schedule and it didn't say anything... CHAIRMAN  Danielle, reschedule it, now. please. PA  Sure. PA  Good afternoon, this is Danielle from Design Incorporated. I'd like to speak to Mr. Novak please ... Yes, I'll hold. PA  Mr. Novak? Hi, it's Danielle from Design Incoporated... I'm afraid something's come up. Would you mind if we rescheduled your appointment tomorrow with Mr. Henriksson? ... You wouldn't? That's great. When would be a suitable time for you? PA  Let me just check with Mr. Henriksson. Please hold for a moment. Opening and closing a telephone conversation Expression: Opening a telephone conversation Phrases for opening a phone conversation Here are some expressions you can use to greet someone on the phone. Good morning. Good afternoon. Good evening. Hello. If the person doesn't introduce himself or herself, you can ask who is calling. May I ask who's calling? You can then ask why the person is calling. How can I help you? May I ask the reason for your call? Expression: Closing a telephone conversation Closing a phone call Several phrases can be used at the end of a phone call. To promise to follow up later, use the following phrases. I'll get back to you soon to confirm. I'll call you back as soon as possible. To be polite, you can thank the person. Thanks for calling. Thank you for your time. At the very end of the call, you can say goodbye. Goodbye. Have a nice day. Confirming arrangements and taking notes Expression: Asking for repetition Asking for repetition Here are some phrases to ask the caller to repeat himself or herself. I'm sorry, could you repeat that, please? Did you say  tomorrow at 11 a.m.? I'm sorry, I didn't catch that. Can you say that again, please? Expression: Confirming arrangements Confirming arrangements Since it's sometimes hard to hear clearly on the phone, you'll need to confirm and clarify the information. Here are some expressions to repeat the information back to the caller for confirmation. Let me read that back to you. Let me double check  the details. If I can just confirm  the details. You can ask whether you've got the correct information using the following questions. Is that right? Is that correct? Good morning, Open Range Limited, Rick speaking. How can I help you? … Oh, good morning, Mr. Fairbanks … Ah yes, you're meeting Chris for lunch tomorrow, is that right ? He's just stepped away from his desk for a moment, but I can take a message for him … You've booked a table … at the … I'm sorry, I didn't catch that. Did you say the Montmartre? And how do you spell that? … M-O-N-T-M-A-R-T-R-E? So, if I can just confirm the details . That's lunch tomorrow, Wednesday, May 19th, at 1 p.m., at the Montmartre Restaurant. Is that correct ? Good. And what's the phone number of the restaurant? … 8-4-8-2-2-2-4-4 … I'm sorry, could you repeat that, please? Mmm. Mmm-hmm. Let me read that back to you: 8-4-8-2-2-2-4-8-4-8. Yes, I'll see he gets it right away. Thank you, Mr. Fairbanks. Goodbye. Rescheduling an appointment Vocabulary: Polite forms in phone conversations Being polite Use modal verbs such as  could ,  would  and  may  to speak more politely.  Could  and  may  are often used to make a request, where  would  is often used to ask about preferences. When would be good for you?       Could I suggest meeting on Thursday instead? May I speak to Jean, please? Here are some polite ways to apologize. I'm  terribly sorry . My apologies  for any inconvenience. Good afternoon. This is Christopher Marlow, CEO of Open Range Limited.  Could I speak to  Roger Fairbanks, please? … Oh, hi, Roger. Yes, fine thanks … Actually, that's why I'm calling. Listen,  I'm terribly sorry , Roger, I'm afraid something's come up. I'm on my way to the airport as we speak.  Would you mind  if we rescheduled tomorrow's lunch? … Great, when  would be  good for you? Well, I'm coming back on Thursday afternoon. How about Friday? … Sorry, let me just check my diary. Instead of lunch, could we do dinner? Great. Does 7 p.m. work for you? … Yes? Great! Where would you like to meet? … Actually,  could I suggest  the Trastevere restaurant? What do you think? … Yes? Great. I'll reserve a table for us. Once again,  my apologies  for any inconvenience. Anyway, see you Friday. Bye. Expression: Making alternative arrangements Making alternative arrangements First, ask the other person if it's okay to reschedule. Would you mind if we rescheduled? Use  instead of ,  actually , and  how about ___?  to suggest changes to the plans. Instead of  lunch, could we meet for dinner?       Actually , could I suggest a different restaurant? How about  meeting on Thursday? Expression: Checking arrangements Checking preferences Sometimes you may wish to ask an open-ended question about when and where someone prefers to meet. When would be good for you? What do you think? You may also want to suggest a specific day or time. Is 6 p.m.  convenient for you? Does  Monday  work for you? Let me know if  next week is okay. Would you mind if we rescheduled tomorrow's lunch? … Great, when would be  good for you  ? Well, I'm coming back on Thursday afternoon. How about Friday? … Sorry, let me just check my diary. Instead of lunch, could we do dinner? … Great. Does 7 p.m.  work for you  ? … Yes? Great! Where would you like to meet? … Actually, could I suggest the Trastevere restaurant?  What do you think  ? … Yes? Great. I'll reserve a table for us. Once again, my apologies for any inconvenience. Anyway, see you Friday. Bye."},{"path":"/react-doc/","rawBody":"Use as little or as much React as you need. React has been designed from the start for gradual adoption, and  you can use as little or as much React as you need . Perhaps you only want to add some \"sprinkles of interactivity\" to an existing page. React components are a great way to do that. The majority of websites aren't, and don't need to be, single-page apps. With  a few lines of code and no build tooling , try React in a small part of your website. You can then either gradually expand its presence, or keep it contained to a few dynamic widgets. Add React in One Minute Optional: Try React with JSX  (no bundler necessary!) Add React in One Minute {#add-react-in-one-minute} In this section, we will show how to add a React component to an existing HTML page. You can follow along with your own website, or create an empty HTML file to practice. There will be no complicated tools or install requirements --  to complete this section, you only need an internet connection, and a minute of your time. Optional:  Download the full example (2KB zipped) Step 1: Add a DOM Container to the HTML {#step-1-add-a-dom-container-to-the-html} First, open the HTML page you want to edit. Add an empty  <div>  tag to mark the spot where you want to display something with React. For example: <!-- ... existing HTML ... -->\n\n<div id=\"like_button_container\"></div>\n\n<!-- ... existing HTML ... --> We gave this  <div>  a unique  id  HTML attribute. This will allow us to find it from the JavaScript code later and display a React component inside of it. Tip You can place a \"container\"  <div>  like this  anywhere  inside the  <body>  tag. You may have as many independent DOM containers on one page as you need. They are usually empty -- React will replace any existing content inside DOM containers. Step 2: Add the Script Tags {#step-2-add-the-script-tags} Next, add three  <script>  tags to the HTML page right before the closing  </body>  tag:   <!-- ... other HTML ... -->\n\n  <!-- Load React. -->\n  <!-- Note: when deploying, replace \"development.js\" with \"production.min.js\". -->\n  <script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>\n  <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script>\n\n  <!-- Load our React component. -->\n  <script src=\"like_button.js\"></script>\n\n</body> The first two tags load React. The third one will load your component code. Step 3: Create a React Component {#step-3-create-a-react-component} Create a file called  like_button.js  next to your HTML page. Open  this starter code  and paste it into the file you created. Tip This code defines a React component called  LikeButton . Don't worry if you don't understand it yet -- we'll cover the building blocks of React later in our  hands-on tutorial  and  main concepts guide . For now, let's just get it showing on the screen! After  the starter code , add two lines to the bottom of  like_button.js : // ... the starter code you pasted ...\n\nconst domContainer = document.querySelector('#like_button_container');\nReactDOM.render(e(LikeButton), domContainer); These two lines of code find the  <div>  we added to our HTML in the first step, and then display our \"Like\" button React component inside of it.  That's It! {#thats-it} There is no step four.  You have just added the first React component to your website. Check out the next sections for more tips on integrating React. View the full example source code Download the full example (2KB zipped) Tip: Reuse a Component {#tip-reuse-a-component} Commonly, you might want to display React components in multiple places on the HTML page. Here is an example that displays the \"Like\" button three times and passes some data to it: View the full example source code Download the full example (2KB zipped) Note This strategy is mostly useful while React-powered parts of the page are isolated from each other. Inside React code, it's easier to use  component composition  instead. Tip: Minify JavaScript for Production {#tip-minify-javascript-for-production} Before deploying your website to production, be mindful that unminified JavaScript can significantly slow down the page for your users. If you already minify the application scripts,  your site will be production-ready  if you ensure that the deployed HTML loads the versions of React ending in  production.min.js : <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\" crossorigin></script>\n<script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\" crossorigin></script> If you don't have a minification step for your scripts,  here's one way to set it up . Optional: Try React with JSX {#optional-try-react-with-jsx} In the examples above, we only relied on features that are natively supported by the browsers. This is why we used a JavaScript function call to tell React what to display: const e = React.createElement;\n\n// Display a \"Like\" <button>\nreturn e(\n  'button',\n  { onClick: () => this.setState({ liked: true }) },\n  'Like'\n); However, React also offers an option to use  JSX  instead: // Display a \"Like\" <button>\nreturn (\n  <button onClick={() => this.setState({ liked: true })}>\n    Like\n  </button>\n); These two code snippets are equivalent. While  JSX is  completely optional , many people find it helpful for writing UI code -- both with React and with other libraries. You can play with JSX using  this online converter . Quickly Try JSX {#quickly-try-jsx} The quickest way to try JSX in your project is to add this  <script>  tag to your page: <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script> Now you can use JSX in any  <script>  tag by adding  type=\"text/babel\"  attribute to it. Here is  an example HTML file with JSX  that you can download and play with. This approach is fine for learning and creating simple demos. However, it makes your website slow and  isn't suitable for production . When you're ready to move forward, remove this new  <script>  tag and the  type=\"text/babel\"  attributes you've added. Instead, in the next section you will set up a JSX preprocessor to convert all your  <script>  tags automatically. Add JSX to a Project {#add-jsx-to-a-project} Adding JSX to a project doesn't require complicated tools like a bundler or a development server. Essentially, adding JSX  is a lot like adding a CSS preprocessor.  The only requirement is to have  Node.js  installed on your computer. Go to your project folder in the terminal, and paste these two commands: Step 1:  Run  npm init -y  (if it fails,  here's a fix ) Step 2:  Run  npm install babel-cli@6 babel-preset-react-app@3 Tip We're  using npm here only to install the JSX preprocessor;  you won't need it for anything else. Both React and the application code can stay as  <script>  tags with no changes. Congratulations! You just added a  production-ready JSX setup  to your project. Run JSX Preprocessor {#run-jsx-preprocessor} Create a folder called  src  and run this terminal command: npx babel --watch src --out-dir . --presets react-app/prod  Note npx  is not a typo -- it's a  package runner tool that comes with npm 5.2+ . If you see an error message saying \"You have mistakenly installed the  babel  package\", you might have missed  the previous step . Perform it in the same folder, and then try again. Don't wait for it to finish -- this command starts an automated watcher for JSX. If you now create a file called  src/like_button.js  with this  JSX starter code , the watcher will create a preprocessed  like_button.js  with the plain JavaScript code suitable for the browser. When you edit the source file with JSX, the transform will re-run automatically. As a bonus, this also lets you use modern JavaScript syntax features like classes without worrying about breaking older browsers. The tool we just used is called Babel, and you can learn more about it from  its documentation . If you notice that you're getting comfortable with build tools and want them to do more for you,  the next section  describes some of the most popular and approachable toolchains. If not -- those script tags will do just fine!"},{"path":"/生活感悟与人生格言/","rawBody":"生活感悟与人生格言 做人需要有底线与原则。 海纳百川，有容乃大；壁立千仞，无欲则刚。 人活着总要做几件事情，这就是其中之一。 只有行动才能说明一切。 -- 赵信 遇到困难，需要自己坚强，自己是懦夫，别人再怎么帮助都是徒劳。 是什么样的人就会承受什么样的苦，也会尝到什么样的甜。 经历过孤寂的人必然会有恐惧感。实际上孤寂感是每种恐惧的根源。孤寂意味着与外界没有联系，不能发挥人的力量，意味着一筹莫展，不能把握世界，事物和人；意味着世界把我淹没，而我只能听之任之。所以孤寂是引起强烈恐惧感的根源，同时孤寂还会引起羞愧和负罪的感觉。 -- 《爱的艺术》 弗洛姆 在物质世界范畴内给是财富。不是拥有财物的人是富裕的，而是给予他人东西的人才是富裕者。害怕受到损失的吝啬鬼，不管他拥有多少财产，从心理学角度来看，他是一个贫穷和可怜的人。愿意把自己的东西给予他人的人却是富有的，他感觉到自己是一个有能力帮助别人的人。 -- 《爱的艺术》 弗洛姆 除却一切向部分目标迈进的行为之后，我们还有一个较为单一的动作，那便是：我们所做的一切其实都是想要获得一种安全感、想要一种稳固的地位。 哪有那么多迷茫和焦虑，大部分情况下只不过是懒和贪。 不甘于平凡，才能突破。 凡是决心取得胜利的人从来不说“不可能”。 遇见贵人先立业，求得良人先成家。未遇贵人而自立，未遇良人而自修。 顺，不妄喜；逆，不遑馁；安，不奢逸；危，不惊惧；胸有惊雷而如平湖者，可拜上将军也。 弱小的人，才习惯嘲讽与否定；内心强大的人，从不吝啬赞美与鼓励。 -- 《后浪》 我们重复的行为造就了我们，卓越因此不是一个行为，而是一个习惯。 -- Aristotle, Philosopher 除非你做点什么，否则任何事情都不会改变。 -- 迈克·罗宾斯 把手头的每一件事都认真做好。 如果你想做好一件事，去做；如果不想，就放开手。 -- 穷理查 想成为什么样的人，就真正去做什么人。 理性不过是激情的仆人，而当仆人没法找到好的理由时，主人仍旧不会改变想法。 -- 《正义之心》 乔纳森·海特 在接受了判断之后（依靠大脑中无意识的认知机器产生的判断，有时候正确，有时候不正确），人类制造出能够支持其判断的基本理由。但这些基本理由（在这一案例下）仅仅是马后炮式的牵强附会。 这可朽灵魂是紊乱的，且受外在制约。因此，它有快感，这是最强的引导它向恶的力量。它还有痛苦，乃离开善所致。此外，还有鲁莽和惧怕，一对不明智的军师；激情，难以驾驭；愿望，轻易走向迷途。所有这些倾向，加上非理性感觉，只求安逸的欲望，以及那必然性中的可朽体，他们由此造了人。 -- 《蒂迈欧篇》 柏拉图 可以简单地把学会一门艺术分成两个部分，一是掌握理论，二是掌握实践。 只有通过长期的实践活动，一直到理论知识和实践经验融会贯通起来变成灵感—也就是掌握了艺术的灵魂，才能成为一名大师。 要成为大师，除了学习理论和实践外还有第三个必不可少的因素，即要把成为大师看得高于一切，这一目标必须占据他整个身心。 -- 《自卑与超越》 阿尔弗雷德·阿德勒 可与言而不与言，失人。不可与言而与之言，失言。知者不失人，亦不失言。 -- 《论语》 孔子 人的一生并不仅仅只是经历事物本身，更为重要的是，体验这些事物对我们的生活有什么样的意义。 -- 《自卑与超越》 阿尔弗雷德·阿德勒 人的地位虽然有高低之分，但是人格不应该有贵贱之别。 -- 《叶问2》 什么样的灵魂就要什么样的养料。……没有像样的精神生活就没有一代英俊的新人。 -- 《爱你就像爱生命》 王小波 每天都要认真生活。 不要简单的过每一天，要想想怎么把自己变成一个精品。 如果不能替别人承受后果，那么不要给别人做决定，只提出自己的想法和建议。 一个人的成功啊，当然要靠自我奋斗，但是也要考虑到历史的进程。 不要自我受限，很多自己认为做不到的事情去尝试一下是可以做到的。 人只要用心做一件事，总会有很多办法。 -- 泽岳小姐姐 自尊心，不是用来肆意宣扬的武器。将自尊深藏于内心就好。舍弃自尊，凡事忍耐。 生活在阴沟里，依然有仰望星空的权利。 -- 王尔德 花时间经营自己。经营的意思是，在身材、心理、情绪和灵魂上，你都要做更好的自己。  不作为之罪。神父解释说，没有做到你应该做的事情，其罪过与有意去做错误的事情一样严重。 一个人拿着锤子，看什么都像是钉子。 -- 马克吐温 印第安人有一句谚语：\"I hear and I forget. I see and I remember. I do and I understand.\" 哲学家大卫·休谟在1739年写到的：“理性只能是激情的奴隶，除了侍奉和服从激情，不能假充自己尚有别的差事。” 成长就是意识到你从看到别人打开礼物中得到的快乐要比你从自己打开礼物中得到的快乐多。 认真和坦诚都是很宝贵的能力，愚蠢且软弱怯懦的人才总把自己藏在“干嘛那么较真”的壳子里。 和别人说话时，看着对方的眼睛；听别人说话时，看着对方的嘴巴。 -- 《穷查理开悟书》 富兰克林   有欲望而无行动者滋生瘟疫。 -- 拿着的书威廉·布莱克的诗 “地狱的箴言” 激励 千万不要让别人决定你什么事干不干得成。 你自己的梦想，你要自己保护。 别人有自己做不到的事，他们会告诉你你也做不到。 如果你想做什么事，努力去争取。 -- 当幸福来敲门 思考 想一个自己从未深入思考的问题是危险的，我们读书是别人替我们思考，我们不过是在重复作者的精神过程而已。所以一个人如果整日读书，他将逐渐失去思考能力。 -- 叔本华 机械文明发展到今天，人类创造了大量的财富，带来了极大的物质享受，然而是祸是福，却难有定论。资本主义商业文明带来了极度的功利主义思想，如今人们只知追求财富、追求物质享受，不知过去的美德为何物。今天的人们似乎对真、善、美的价值，不屑一顾。什么生活的情调，什么高贵的情操，差不多成了历史名词。 努力、勤奋 承认自己不够努力是很难的，抱怨比较容易。 没有谁不是通过艰辛努力而获得荣耀的。 懒惰的思想在拖泥带水及不诚实的习惯中体现出来，这种习惯会让人处于遭受遗弃的境地。 害怕、忧虑、恐惧 我们不应把时间浪费在担惊受怕上——担忧过去、未来、不确定性、他人、新创意、新环境。 有的时候，我们应该近距离直面自己的恐惧，而不是只在想象中将恐惧放大。仅仅这样做，就可以帮助我们克服恐惧。 害怕，怀疑及优柔寡断的思想，则会在懦弱，没有男子汉气概，缺乏决断的习惯中体现，这会使人落入失败，匮乏及依赖他人的境地。 恐惧，乃是无知和犹豫不决的产物。 -- 罗宾逊·《精神的形成》 不要害怕做与众不同的事情。 拖延 除非你真的很享受自己所做的事，否则最好还是速战速决。 任何一件事，主要在 5 分钟内可以完成，就立刻动身去做。 愤怒 憎恨及谴责的思想，则会在指责及暴力的习惯中体现出来，这种习惯只会导致伤害与压迫。 愤怒和愚蠢结伴同行，悔恨则紧随其后。 自私 各种自私的思想，在追求个人私利的习惯中体现出来，这种习惯到头来只会让人落入贫困的境地。 习惯 台湾作家任祥，有一次去《天天向上》宣传新书《传家》，汪涵问她从上辈传下来的财富，任祥说：“我母亲常常给我讲的一句话就是，一定要养成很好的习惯，因为你的习惯会变成你的个性，个性就会变成你的命运，所以我的家里特别在乎习惯上头的培养”。  勇敢 有时，为了跟随自己的心做出的决定，我们要足够勇敢，愿意探索，踏足不熟悉的路径。且信任自己的选择，将引领我们到达最终的目的地。 大胆尝试后遭遇失败要好过在旁观望。如果你在尝试的过程中失败了，你所遇到的最坏的情况，往往不过是给你的生活增加了一个有趣的谈资。 悔恨 不做尝试是人类某些最深刻的悔恨的源泉。 欲望 纵使欲望得到满足，满足感也无法长久维持，其结果不是产生新的欲望而带来新的痛苦，就是造成厌烦感。所以，人生永远在痛苦和厌烦之间徘徊，所谓快乐只是暂时现象，只是痛苦的间歇：因此，快乐是消极意义上的。 -- 叔本华 人生忠告 说话要用脑子,做事慎言,话多无益.讲话不要只顾一时痛快.信口开河,以为人家给你笑脸就是欣赏,没完没了的把掏心窝子的话都讲出来,结果让人家彻底摸清了家底.还偷笑你. 遇事不要急于下结论,即便有了答案也要等等,也许有更好的解决方式,站在不同的角度就有不同答案,要学会换位思维. 对小人一定要忍让,退一步海阔天空,实在不行把属于自己的空间也关给他们,站他们如莺燕舞般陶醉吧.大人大度量.惹着小人就等与惹了麻烦,所以要敬而远之. 这世道没有无缘无故的爱,也没有无缘无故的恨,不要参与评论任何人,做到心中有数就可以了.谁也没有理论依据来介定好人与坏蛋,其实就是利益关系的问题. 做事情一定要事先设立道德底线,小偷也清楚有些东西是绝对不能偷的.所以说事情万万不可做绝,落井下石的事绝对不要干,给人方便给已方便. 对于那些经常找你麻烦甚至欺负你的人,能忍则忍,没必要时刻与莽夫过不去,但一定要给他攒着,新仇旧怨积累起来,正义和真理就属于你了,那么瞅准机会一定要彻底教训他一次,在法律赋予的权限以内,往死里揍,让小子永远记住:除了你爹,没人会惯你这些臭毛病. 明枪易躲,暗箭难防,背后算计你的小人永远不会消失,这??中国特色,小人不可得罪,同样小人也不可饶恕,这是万世不变的真理,说到底小人也有心小的一面,对待这种人要稳准狠,你可以装做什么也没发生,天下太平,万事大吉,然后来个明修栈道,暗度陈仓,以毒攻毒,让小子知道:小人也不是谁都可以做的,做好人要有水准,做小人同样有难度. 对待爱你的人一定要尊重,爱你是有原因的,不要问为什么,接受的同时要用加倍的关爱回报,但是千万不要欺骗人家的感情,爱是最珍贵的财富,这是你用钱买不来的财富.不要让事业上的不顺影响家人,更不要让家庭的纠纷影响事业.那样做很不划算,家人和事业都受影响,甚至损失.男人要善于扛事,要把眼泪咽下去.记住:轻视人家付出的情感就等于蔑视自己,玩物丧志,玩人丧德,爱人是一种美德. 背后夸奖你的人,知道了要珍藏在心里,这里面很少有水分.当面夸奖你那叫奉承,再难听些叫献媚,你可以一笑而过,就当什么也没发生,也许不久就有求于你,对于那种当众夸奖你的人,就疏忽不得了,也许你转过身去,就用指头戳你,掌握一条原则:逢人多贬自己,少夸别人,选先评优的时候除外. 有些人习惯了占你小便宜,小人小肚肠,大人大度量,有机会坑他一把大的,出一次大血,同样让他记住:天下根本就没什么免费的午餐,哪有白拣的便宜让你赚.小恩小惠攒多了就是一个大窟窿,只要接受就一定要找机会回报,行下春风望夏雨,付出就是为了收获,其实就是一个简单的种子与果实的关系.千万别让天真给害了,记住:人生如戏,都在寻找利益的平衡,只有平衡的游戏才有可能玩下去. 患有心里疾病的人是不负法律责任的,可以没有理由的咬你一口,所以对待疯狗级的人物要敬而远之,保持不来往,不交流,退一步,海阔天空,相信疯狂也是一种人格,虽不值得尊重,但自有其存在的道理,生物链少不了这一环. 做一个人生的观光客吧,说到底只要与人为善,以德服人,离是非远点,靠家人近点,便有了心安,有了惬意.乐观的心态来自宽容,来自大度,来自善解人意,来自与世无争.坏心情是失眠时折磨出来的,其实现实并没有你想的那样糟糕,生命有高峰也有低谷,根本没有一帆风顺的人生,邓小平怎么样,三起三落,最后还不是凡是他说了算. 所谓的缘分无非只有善恶两种,珍惜善的,也不要绝对排斥恶的,相信擦肩而过也是缘吧,全世界近60亿人口,碰上谁也不容易,所以遇到恶缘,也要试着宽容,给对方一次机会,不可以上来就全盘否定. 待人接物要摆正自己的位置,不可以老把自己当人物,老拿自己当领导,老把自己当富翁,老以为自己是情圣,老是自我感觉良好,即便真是小有作愚,其实人的最终结局都是一样的,只是你把自己看复杂了,说句俗话:千万别把自己当回事。"},{"path":"/计算机与编程/Jenkins/demo/","rawBody":"node {\n    def succ_file=[]\n    def fail_file=[]\n    def file_list\n    def JKROOT=\"${WORKSPACE}/${target_project}\"\n    def HJROOT=\"/home/wwwroot/xxxx/app/${target_project}\"\n    def BAKPATH=\"${WORKSPACE}/rollback/${target_project}_${BUILD_NUMBER}\"\n    def ori_version='xxxxx'\n\n    echo \"目标项目: ${target_project}\"\n    echo \"目标版本: ${target_version}\"\n    echo \"目标服务器: ${target_server}\"\n\n    stage('更新代码') {\n        if ( target_files =='' || target_files ==~ /\\s+|\\*+/ ){\n            echo '更新文件不能为空或*'\n            return\n        }\n        if ( fileExists(\"${JKROOT}\") ){\n            sh \"\"\"#!/bin/bash\n                rm -fr ${JKROOT}\n            \"\"\"\n        }\n        checkout([$class: 'SubversionSCM', \n                additionalCredentials: [], \n                excludedCommitMessages: '', \n                excludedRegions: '', \n                excludedRevprop: '', \n                excludedUsers: '', \n                filterChangelog: false, \n                ignoreDirPropChanges: false, \n                includedRegions: '', \n                locations: [[\n                            cancelProcessOnExternalsFail: true, \n                            credentialsId: 'b6da4a4f-e51c-4955-9410-16b806783390', \n                            depthOption: 'infinity', \n                            ignoreExternalsOption: true, \n                            local: \"${target_project}\", \n                            remote: 'svn://svn.xxxxmall.com/xxxx/trunk/app/${target_project}'\n                        ]], \n                quietOperation: true, \n                workspaceUpdater: [$class: 'UpdateUpdater']\n        ])\n    }    \n    stage('对比文件') {\n        file_list = target_files.split(\"\\\\s*\\\\r?\\\\n\\\\s*\")\n\n        if ( !fileExists(\"${HJROOT}\") ) {\n            echo \"${HJROOT} 不存在.\\n不支持新发项目\"\n            return\n        }\n        if ( target_version != ori_version ){\n            sh \"\"\"#!/bin/bash\n            echo \"切换版本 ${ori_version}->${target_version}\"\n            mv -v ${JKROOT}/${ori_version} ${JKROOT}/${target_version} \n            \"\"\"\n        }\n        file_list.each{\n            if ( it.length()<3 ){\n                echo \"确定更新 ${it} ??? 这不是个文件吧?\"\n                return\n            }\n            if ( !fileExists(\"${JKROOT}/${it}\") ){\n                echo \"${JKROOT}/${it} 不存在, 检查填写是否正确\"\n                return\n            }\n            if (fileExists(\"${HJROOT}/${it}\") ) {\n                succ_file.add(it)\n            }else{\n                fail_file.add(it)\n            }\n        }\n\n    }\n    stage(\"预处理文件\") {\n        echo succ_file.join('|')\n        echo fail_file.join('|')\n        if (fail_file.size()>0){\n            echo \"文件 ${fail_file.join(' ')} 是新发文件吗?\"\n            input '确定新发以继续'\n            fail_file.each {\n                sh \"\"\"#!/bin/bash\n                cd ${JKROOT} && rsync -azRh --exclude='.svn' --exclude='*.log' ${it} ${HJROOT}/\n                \"\"\"\n            }\n            echo '新发文件处理完成'\n        }\n        if (succ_file.size()>0){\n            succ_file.each {\n                echo \"${JKROOT}/${it}\"\n                echo \"${HJROOT}/${it}\"\n                sh (script:\"\"\"#!/bin/bash\n                diff -u ${JKROOT}/${it} ${HJROOT}/${it} || echo true\n                \"\"\")\n            }\n            echo '查看对比记录,确认文件是否正确'\n            input '确认修改文件正确?'\n            sh \"mkdir -p ${BAKPATH}/old && mkdir -p ${BAKPATH}/new\"\n\n            succ_file.each {\n                sh \"\"\"#!/bin/bash    \n                cd ${HJROOT} && rsync -azRh --exclude='.svn' --exclude='*.log' ${it} ${BAKPATH}/old/\n                cd ${JKROOT} && rsync -azRh --exclude='.svn' --exclude='*.log' ${it} ${HJROOT}/\n                \"\"\"\n                echo \"更新文件${it}处理完成\"\n            }\n        }\n    }\n    stage('分发服务器') {\n        input '是否进行分发?'\n        server_list= target_server.tokenize(',')\n        send_file = file_list.join(\" \")\n        echo send_file\n        server_list.each {\n            echo \"分发到${it}\"\n            sh \"\"\"#!/bin/bash\n            cd ${JKROOT} && rsync -azvR --exclude='.svn' --exclude='*.log' ${send_file} www@${it}:${HJROOT}/\n            \"\"\"\n        }\n    }\n    stage(\"备份版本\") {\n        bak_file = file_list.join(\" \")\n        sh \"\"\"#!/bin/bash\n            mkdir -p ${BAKPATH}/new && cd ${HJROOT} && rsync -azvR --exclude='.svn' --exclude='*.log' ${bak_file} ${BAKPATH}/new/\n            rm -fr ${JKROOT}\n        \"\"\"\n    }\n}node {\n    def succ_file=[]\n    def fail_file=[]\n    def file_list\n    def JKROOT=\"${WORKSPACE}/${target_project}\"\n    def HJROOT=\"/home/wwwroot/xxxx/app/${target_project}\"\n    def BAKPATH=\"${WORKSPACE}/rollback/${target_project}_${BUILD_NUMBER}\"\n    def ori_version='2015041703'\n\n    echo \"目标项目: ${target_project}\"\n    echo \"目标版本: ${target_version}\"\n    echo \"目标服务器: ${target_server}\"\n\n    stage('更新代码') {\n        if ( target_files =='' || target_files ==~ /\\s+|\\*+/ ){\n            echo '更新文件不能为空或*'\n            return\n        }\n        if ( fileExists(\"${JKROOT}\") ){\n            sh \"\"\"#!/bin/bash\n                rm -fr ${JKROOT}\n            \"\"\"\n        }\n        checkout([$class: 'SubversionSCM', \n                additionalCredentials: [], \n                excludedCommitMessages: '', \n                excludedRegions: '', \n                excludedRevprop: '', \n                excludedUsers: '', \n                filterChangelog: false, \n                ignoreDirPropChanges: false, \n                includedRegions: '', \n                locations: [[\n                            cancelProcessOnExternalsFail: true, \n                            credentialsId: 'b6da4a4f-e51c-4955-9410-16b806783390', \n                            depthOption: 'infinity', \n                            ignoreExternalsOption: true, \n                            local: \"${target_project}\", \n                            remote: 'svn://svn.xxxxmall.com/xxxx/trunk/app/${target_project}'\n                        ]], \n                quietOperation: true, \n                workspaceUpdater: [$class: 'UpdateUpdater']\n        ])\n    }    \n    stage('对比文件') {\n        file_list = target_files.split(\"\\\\s*\\\\r?\\\\n\\\\s*\")\n\n        if ( !fileExists(\"${HJROOT}\") ) {\n            echo \"${HJROOT} 不存在.\\n不支持新发项目\"\n            return\n        }\n        if ( target_version != ori_version ){\n            sh \"\"\"#!/bin/bash\n            echo \"切换版本 ${ori_version}->${target_version}\"\n            mv -v ${JKROOT}/${ori_version} ${JKROOT}/${target_version} \n            \"\"\"\n        }\n        file_list.each{\n            if ( it.length()<3 ){\n                echo \"确定更新 ${it} ??? 这不是个文件吧?\"\n                return\n            }\n            if ( !fileExists(\"${JKROOT}/${it}\") ){\n                echo \"${JKROOT}/${it} 不存在, 检查填写是否正确\"\n                return\n            }\n            if (fileExists(\"${HJROOT}/${it}\") ) {\n                succ_file.add(it)\n            }else{\n                fail_file.add(it)\n            }\n        }\n\n    }\n    stage(\"预处理文件\") {\n        echo succ_file.join('|')\n        echo fail_file.join('|')\n        if (fail_file.size()>0){\n            echo \"文件 ${fail_file.join(' ')} 是新发文件吗?\"\n            input '确定新发以继续'\n            fail_file.each {\n                sh \"\"\"#!/bin/bash\n                cd ${JKROOT} && rsync -azRh --exclude='.svn' --exclude='*.log' ${it} ${HJROOT}/\n                \"\"\"\n            }\n            echo '新发文件处理完成'\n        }\n        if (succ_file.size()>0){\n            succ_file.each {\n                echo \"${JKROOT}/${it}\"\n                echo \"${HJROOT}/${it}\"\n                sh (script:\"\"\"#!/bin/bash\n                diff -u ${JKROOT}/${it} ${HJROOT}/${it} || echo true\n                \"\"\")\n            }\n            echo '查看对比记录,确认文件是否正确'\n            input '确认修改文件正确?'\n            sh \"mkdir -p ${BAKPATH}/old && mkdir -p ${BAKPATH}/new\"\n\n            succ_file.each {\n                sh \"\"\"#!/bin/bash    \n                cd ${HJROOT} && rsync -azRh --exclude='.svn' --exclude='*.log' ${it} ${BAKPATH}/old/\n                cd ${JKROOT} && rsync -azRh --exclude='.svn' --exclude='*.log' ${it} ${HJROOT}/\n                \"\"\"\n                echo \"更新文件${it}处理完成\"\n            }\n        }\n    }\n    stage('分发服务器') {\n        input '是否进行分发?'\n        server_list= target_server.tokenize(',')\n        send_file = file_list.join(\" \")\n        echo send_file\n        server_list.each {\n            echo \"分发到${it}\"\n            sh \"\"\"#!/bin/bash\n            cd ${JKROOT} && rsync -azvR --exclude='.svn' --exclude='*.log' ${send_file} www@${it}:${HJROOT}/\n            \"\"\"\n        }\n    }\n    stage(\"备份版本\") {\n        bak_file = file_list.join(\" \")\n        sh \"\"\"#!/bin/bash\n            mkdir -p ${BAKPATH}/new && cd ${HJROOT} && rsync -azvR --exclude='.svn' --exclude='*.log' ${bak_file} ${BAKPATH}/new/\n            rm -fr ${JKROOT}\n        \"\"\"\n    }\n}"},{"path":"/阅读/读书笔记/小狗钱钱/","rawBody":"小狗钱钱 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"小狗钱钱\" /> 摘录 好奇是好的，但是绝不能让好奇阻碍你做事。太多的人做事犹豫不决，就是因为他们觉得没有完全弄懂这件事。 真正付诸实践要比纯粹的思考有用多了。 不是试试看，而是去切实行动！如果你只是抱着试试看的心态，那么你只会以失败告终，你会一事无成。‘尝试’纯粹是一种借口，你还没有做，就已经给自己想好了退路。 不能试验，你只有两个选择——做或者不做。 成功的人之所以成功，就是因为他们一直梦想着自己成功的那一天，不停地想象着自己实现了理想时的情形。 学习就是认识新观念和新想法的过程。假如人们始终以同一种思维方式来考虑问题的话，那么始终只会得到同样的结果。因为我对你讲述的许多内容是你以前从未接触过的，所以我建议你，在你还没有做之前，不要轻易下结论。没有想象力的人是很难成就大事的。我们对一件事投入的精力越多，成功的可能性也越大。可是大多数人把精力放在自己并不喜欢的事情上，而不去想象自己希望得到的东西。 在你展翅飞翔之前，你就必须相信自己能到达目的地。 机会到处都是，但是只有在你寻找它的时候，你才能看见它。只有当你心中有了强烈的渴望，你才会去寻觅机会。而当你想象的时候，强烈的渴望就产生了。 也许确实是这么一回事，但是我还是要说，你太容易放弃了，连试一下都不愿意。在做什么事之前，你总是首先想‘这事是做不成的’，这样肯定不会成功。 你的自信程度决定了你是否相信自己的能力，是否相信你自己。假如你根本不相信你能做到的话，那么你就根本不会动手去做，而假如你不开始去做，那么你就什么也得不到。 第一，为别人解决一个难题，那么你就能赚到许多钱；第二，把精力集中在你知道的、能做的和拥有的东西上。 成人经常把一生的时间都用来考虑他们不知道、不能做或没有的东西上。 三点重要的事情： 第一 首先，在遇到困难的时候，仍然要坚持自己的想法。一切正常的时候，每个人都能做到这一点。只有当真正的困难出现时才能见分晓。只有少数人能坚定不移地贯彻自己的计划。那些非常成功的人，甚至有能力在他们最困难的时候作出最杰出的表现。 困难总是在不断地出现。尽管如此，你每天还是要不间断地去做对你的未来意义重大的事情。你为此花费的时间不会超过10分钟，但是就是这10分钟会让一切变得不同。大多数人总是在现有的水平上停滞不前，就是因为他们没有拿出这10分钟。他们总是期望情况能向有利于自己的方向转变，但是他们忽视了一点，那就是他们首先必须改变自己。 这10分钟就是你用来改变自己的最好机会。你最好现在大声地发誓，从现在开始会不间断地记录你的成功日记，并且不间断地设想你的未来。而且不论在什么情况下，每天都坚持这么做。 第二 在一切进展非常顺利的情况下，你也应该做这些事情。 你的喜悦让你忘记了该做的事。你看，有成千上万件事情可能让你分心，因此你每天应该在固定的时间里，有规律地做这些事情。别忘了，这只需要10分钟的时间。 第三 当你决定做一件事情的时候，你必须在72小时之内完成，否则你很可能永远不会再做了。 他总是做一些非同寻常的事情。他不在乎别人做什么，只要他认为正确的事情，他就会去做。 疯狂的念头确实比普通的小目标更容易实现。当你定下大目标的时候，就意味着你必须付出比别人多得多的努力。 越是把注意力放在疼痛上，我就越会觉得疼。谈论疼痛就像给植物施肥一样。所以我很多年以前就改掉了抱怨的习惯。 这主要不是因为我有了钱，而是因为我每天都过得很充实，因为我努力去了解一切新事物。我每天都会思考许多问题——我以前从没这样做过。 你干的活最多只值报酬的一半，另一半报酬源于你的想法和实施这个想法的勇气。 一个人挣钱的多少是和他的自信心联系在一起的。另外，他的精力究竟是集中在自己的能力范围之内，还是放到了他力所不能及的事情上，这也是很重要的一点。没有我的成功日记本，我就不会去思考自己适合在哪些方面赚钱。 要想过更幸福、更满意的生活，人就得改变自身。这和钱无关，金钱本身既不会使人幸福，也不会带来不幸。金钱是中性的，既不好，也不坏。只有当钱属于某一个人的时候，它才会对这个人产生好的影响或者坏的影响。钱可以被用于好的用途，也可以被用于坏的用途。一个幸福的人有了钱会更幸福；而一个悲观忧虑的人，钱越多，烦恼就越多。 没有人能强迫你做你不愿意做的事情。只有你自己才能强迫自己去做。 最珍贵的礼物是我们自己争取来的。克服了丢面子的恐惧，世界就会向你敞开大门！ 大多数人当然都会说没问题，可并非所有人都愿意做出必要的努力，因为他们不想付出代价。 成功会使人骄傲。如果你骄傲自大，你就会停止学习。不学习，人就不会再进步。 当你写成功日记的时候，你会对自己，对世界，还有对成功的规律作更深入的思考，会越来越多地了解自己和自己的愿望，这样你才会有能力去理解别人。彻底了解自己和世界上的所有秘密，是我们无法完全实现的一种理想，但我们可以一步一步地慢慢接近这种理想。 你不能在困难面前逃跑。困难、犯错误和丢面子引起的恐惧已经破坏了无数人的生活。 恐惧总是出现在我们设想事情会如何不顺的时候。我们对失败的可能性想得越多，就会越害怕。而当你看着自己的成功日记时，你就会注意到那些成功的事情，自然而然也就会想到应该怎样去做。 当你朝着积极的目标去思考的时候，就不会心生畏惧。 如果你没有做今天这件事情，你就永远不会知道，给自己一些压力之后，你能够做到些什么。一个人觉得最引以为自豪的事情，往往是那些做起来最艰难的事情。这一点你千万不要忘记。 不要为失去的东西而忧伤，而要对拥有它的时光心存感激。 内容简介 《小狗钱钱》讲述的是一个童话故事：有一天，吉娅发现一只受伤的猎狗，并把它带回了家。可是，有谁会想到，这只普通的四脚动物却是一个真正的理财天才呢？吉娅和小狗成为了朋友，并从它那里得知，原来所有的愿望都是可以实现的。 从这个童话故事里可以了解一些金钱的秘密和真相，以及投资、理财的办法。这个故事描述了在实施这些方法的过程中可能遇到的挑战，并且说明了一些令人难以置信的结果。 作者简介 博多·舍费尔（Bodo Schafer）是位畅销书作家。他萃取个人经历中的精华，总结出一套投资理念。借着这套理念的帮助，欧洲成千上万的人在个人财务问题上取得了巨大的进步。 在获得财务自由之前博多也曾经历过长期的奋斗。他16岁时远赴美国求学，高中毕业后进入大学主修法律，之后在不同公司中担任各种重要职务。26岁时博多陷入严重的个人财务危机，然而凭借坚强的意志和正确的投资理念，他最终摆脱了债务，获得了成功。 博多决心把他的理财知识传播给更多的人。他的著作被翻译成十几种语言在全球各地广为传播，创下了110周稳居德国图书排行榜首位的记录。他每年在欧洲各地的巡回演讲吸引数十万人热情参与。"},{"path":"/阅读/读书笔记/小王子/","rawBody":"小王子 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"小王子\" /> 摘录 沉默了一会儿，小王子和我说：“我有一天看了四十三次日落。那真的美极了！” 随后，他又说：“你知道， 当人寂寞的时候，感到忧伤的时候，他就喜欢看日落。 ” 小王子爬山的时候，自言自语地说： “当我站在这么高的山上时，我可以一眼望见整个星球，以及星球上所有的人。” 可是，当小王子爬到山顶时，他所看到的只有一些非常陡峭的悬崖峭壁。 “你好。”小王子试探地打招呼。 “你好……你好……你好……”回音在山谷间响起。 “你们是什么人？”小王子问。 “你们是什么人……你们是什么人……你们是什么人……”回音又响起。 “请你们做我的朋友吧，我很孤独。”他说。 “我很孤独……我很孤独……我很孤独……”回音又回答着。 小王子想道：“这颗行星可真奇怪啊！ 它上面到处都是沙漠，显得干巴巴的。而且山上只有尖锐的石头， 人们连一点想象力也没有，他们只会重复别人的话，还说不完全。 ” 小王子低下头，又想起自己的星球，在我的星球上，我至少还有一朵花。虽然它总是自己先说话…… “不是，”小王子说，“我来地球找人是想找一个人做朋友。那什么叫‘驯服’呢？” “这是已经被人遗忘了的事情，”狐狸说，“它的意思就是‘建立联系’。” “建立联系？” “没错，”狐狸说，“ 对我来说，你只不过是一个小男孩，就像其他千万个小男孩一样。我不需要你。你也同样不需要我。对你来说，我也不过是一只狐狸，和其他千万只狐狸一样。但是，如果你驯服了我，我们就有了联系，互相不可缺少了。对我来说，你就是世界上唯一的主人了；我对你来说，也就是世界上唯一的狐狸了。 ” “如果你驯服了我，我会辨认出一种与众不同的脚步声，就是你的脚步声。其他的脚步声只会使我躲到地下去，而你的脚步声却会像音乐一样将我从洞里叫出来。” “只有被驯服了的事物，你才会完全地了解他。”狐狸说，“人不会花费时间去了解自己没有驯服的事情。他们不会自己去种植东西，总是到商人那里去购买现成的东西。因为世界上还没有购买朋友的商店，所以人也就没有朋友。如果你想要一个朋友，那就驯服我吧！” “那么我应该做些什么呢？”小王子说。 “首先，你必须非常有耐心。”狐狸回答道，“开始的时候你就这样坐在草丛中，坐得离我稍微远些。我用眼角瞅着你，你什么也不用说。话语是会让人误会的根源。但是，每天，你都要坐得靠我更近一些……” 第二天，小王子按照狐狸说的话又来了。 “你最好还是在原来的那个时间来。” 狐狸说道，“比如说，你下午四点钟来，那么从三点钟起，我就会开始感到幸福。 因为等待自己爱的人是一件幸福的事情。时间越临近，我就越感到幸福。到了四点钟的时候，我就会坐立不安，我会想你怎么还没来；我就会发现原来被你驯服了就会付出幸福的代价。但是，如果你随便什么时候来，我就不知道该在什么时候准备好我的心情。 ” “你驯服我这件事情应当有一定的仪式。” “仪式是什么？”小王子问道。 “这也是一件早已被人忘却了的事。” 狐狸说，“ 它就是使某一天与其他日子不同，使某一时刻与其他时刻不同的约定。 比如说，捕捉我的那些猎人就有一种仪式。他们每星期四都和村子里的姑娘们跳舞。于是，星期四就是一个美好的日子！我可以一直散步到葡萄园去，也没有人捉我。如果猎人们每天都跳舞，天天过的一样，那么假期对于我来说就没有意义了。” 就这样，慢慢地，小王子驯服了狐狸。 当出发的时刻快要来到的时候，狐狸说，“我想我一定会哭的。” “这都是你的错，”小王子说， “我本来并不想带给你任何痛苦，可你却要我驯服你……” “事情就是这样的。”狐狸说。 “可你就要哭了！”小王子说。 “当然喽。”狐狸说， “你驯服了我，我爱上了你，你要离开我了，我肯定会哭的。” “那么你什么好处也没得到啊。” “我得到了，你看麦子的颜色，我每次看到它，都会想到你，我知道了爱情的滋味，我也得到了好处。” 狐狸说， “你再去看看那些玫瑰花吧。这一次你就会明白，你的那朵花确实是世界上独一无二的玫瑰。你回来和我告别时，我再赠送给你一个秘密。” “喏，这就是我的秘密。很简单： 只有用心才能看得清。实质性的东西，用眼睛是看不见的。你只有用心，才能看到事物的本质。 ” “正是你为你的玫瑰花费了时间，这才使你的玫瑰你变得如此重要。” 我对小王子说道： “是的，无论是房子，星星，或是沙漠，使它们美丽的东西是看不见的！实质性的东西是眼睛看不见的。” 但是，我放心不下他自己在这里。这时候，我想起了狐狸的话， 如果你一旦被人驯服了，就一定会承受到幸福的伤害，你可能会要哭的。 内容简介 小王子是一个超凡脱俗的仙童，他住在一颗只比他大一丁点儿的小行星上。陪伴他的是一朵他非常喜爱的小玫瑰花。但玫瑰花的虚荣心伤害了小王子对她的感情。小王子告别小行星，开始了遨游太空的旅行。他先后访问了六个行星，各种见闻使他陷入忧伤，他感到大人们荒唐可笑、太不正常。只有在其中一个点灯人的星球上，小王子才找到一个可以作为朋友的人。但点灯人的天地又十分狭小，除了点灯人他自己，不能容下第二个人。在地理学家的指点下，孤单的小王子来到人类居住的地球。 小王子发现人类缺乏想象力，只知像鹦鹉那样重复别人讲过的话。小王子这时越来越思念自己星球上的那枝小玫瑰。后来，小王子遇到一只小狐狸，小王子用耐心征服了小狐狸，与它结成了亲密的朋友。小狐狸把自己心中的秘密——肉眼看不见事务的本质，只有用心灵才能洞察一切——作为礼物，送给小王子。用这个秘密，小王子在撒哈拉大沙漠与遇险的飞行员一起找到了生命的泉水。最后，小王子在蛇的帮助下离开地球，重新回到他的B612号小行星上。 童话描写小王子没有被成人那骗人的世界所征服，而最终找到自己的理想。这理想就是连结宇宙万物的爱，而这种爱又是世间所缺少的。因此，小王子常常流露出一种伤感的情绪。作者圣埃克絮佩里在献辞中说：这本书是献给长成了大人的从前那个孩子。 《小王子》不仅赢得了儿童读者，也为成年人所喜爱，作品凝练的语言渗透了作者对人类及人类文明深邃的思索。它所表现出的讽刺与幻想，真情与哲理，使之成为法国乃至世界上最为著名的一部童话小说。 作者简介 安托万·德·圣埃克苏佩里（Antoine de Saint-Exupery, 1900-1944）1900年6月29日出生在法国里昂。他曾经有志于报考海军学院，未能如愿，却有幸成了空军的一员。1923年退役后，先后从事过各种不同的职业。 1926年，圣埃克苏佩里进入拉泰科埃尔航空公司。在此期间，出版小说《南方邮件》（1929）、《夜航》（1931），从此他在文学上声誉鹊起。1939年，又一部作品《人的大地》问世。 第二次世界大战期间他重入法国空军。后辗转去纽约开始流亡生活。在这期间，写出《空军飞行员》、《给一个人质的信》、《小王子》（1943）等作品。1944年返回同盟国地中海空军部队。在当年7月31日的一次飞行任务中，他驾驶飞机飞上湛蓝的天空，就此再也没有回来。"},{"path":"/English/EF/Telephoning/Dealing with a complaint/","rawBody":"Telephoning: Dealing with a complaint <Video src=\"./TE2_700V.mp4\" /> PRESENTER  Surveys suggest that people are more likely to get angry on the phone than they are face to face. When someone shouts at you down a phone line, how do you handle it? PA  Design Incorporated. Danielle speaking. How can I help you?... I'll, I'll just transfer your call. Please hold. YOUNG EXEC  Hello. Mark Fisher, Assistant Sales Manager. How can I help you? CLIENT  This is John Humphreys from the Wentworth Group! Yeah I'm calling to let you know that I'm not happy with the new designs! YOUNG EXEC  Mr. Humphreys, I'm sorry to hear that. What can I do to solve the problem? PRESENTER  Notice how Mark stays calm, positive and helpful. CLIENT  Do you know what you can do? You can take your designs and throw them in the trash can! And another thing, the price was not what we agreed on... YOUNG EXEC  So, let me get this straight. You're not happy with the designs and you think the price is too high? CLIENT  What are you, a parrot?! That's just what I've been saying! You... YOUNG EXEC  ...I'm sorry, I can't hear you. You're breaking up. INTERN  Did you just hang up on a client? YOUNG EXEC  Humphreys. From the Wentworth Group. INTERN  Oh... Last summer I worked as a waitress. You know what I used to do when I had a rude customer? YOUNG EXEC  No. INTERN  I killed them with kindness. YOUNG EXEC  What? INTERN  I killed them with kindness. When someone is rude to you, the best thing is to be polite. That way, you stay in control. YOUNG EXEC  His voicemail... Hi, this is Mark Fisher from Design Inc. I'd like to begin by apologizing; we seemed to get cut off during our last call... I want you to know that Design Inc. is making the Wentworth Group our top priority. We'll have a new design ready by the end of the week, and I'm positive you'll be satisfied. Okay... Thanks for your time. Dealing with an angry caller Expression: Calming the client Calming an angry caller When talking to an angry customer, the most important thing is to keep calm. You can use these expressions to show that you're there to help. How can I be of assistance? I'm here to help. I'm listening. Learn about why the customer is complaining using these highlighted expressions. Can you tell me everything  from the beginning? Why don't you tell me  about when you placed the order?  Could you explain exactly what  the problem is? The customer may have complained before, but with no results, which could be a reason why they're angry. You can use the highlighted language below to apologize and encourage them to explain the issue again. I apologize that we weren't able to  address your problem  in a timely manner . If you could just tell me again  what happened,  I'll make every effort  to assist you. Showing support How can I be of assistance, Mr. King? Mr. Jackson, I’m here to help. Apologizing for the issue I apologize that we weren’t able to fix the issue. Asking for information Could you explain what the problem is, Ms. Lee? Why don’t you tell me about the issues you had? Expression: Empathizing with the client What should to do in the face of customer complaints？ apologized for the situation showed that she understands Mr. Hill's feelings repeated to make sure she's got all the details suggested a solution example sentences I'd feel exactly the same way if I were you. This is really unacceptable. I understand completely. I'm sorry you had to go through all this trouble. Showing empathy When a customer is complaining, it's important to  show empathy , or that you understand how they feel. You can use these highlighted phrases to do so. I can see how that would be most  frustrating. I understand completely. I'd feel exactly the same way if  I were you. Or you can show empathy by commenting on the situation as though you feel the same way as the customer. You can use these highlighted adjectives with negative meanings. That's  terrible. This really is  unacceptable. You can also show empathy with an apology. I'm sorry you had to  go through all this trouble. Don't forget to confirm that you've got the full picture of the issue. Let me just make sure I've understood  the whole situation. The order was late, and you … Expression: Promising action Promising action Once you understand the complaint, you'll need to let the customer know what you're going to do about it. Use top priority to indicate the great importance you're placing on the complaint. I'll  make this my top priority. You can also reassure the customer and promise action with the following sentences. I'd like to assure you that  you'll be satisfied when you receive our new product. I'm going to personally  look into the situation . I'll  make sure that  the machines we send you are of the highest quality. Don't forget to say when you'll contact the customer again. I'll  get back to you  by the end of tomorrow. Dealing with a complaint Expression: Eliciting a complaint Understanding the situation When a customer is complaining, you can use these expressions to learn about their problems. How may I help you? Would you tell me what's happened? Please explain to me what the problem is. The customer may be upset. Show empathy to encourage them to explain what's wrong. Notice that empathy is expressed not only by the language used but also by the sincere tone of the speaker. I'm terribly sorry to hear that. Use these sentences to help the customer explain the situation in an organized way. Let's start from the beginning.  Can you take me through the problem step by step?  Use  I take it that  to confirm what's being implied. I take it that  we've failed to live up to your expectations?  The customer is more likely to share information if they think you'll act on it. Tell me what happened, please, and  I'll see what I can do to resolve the situation . Listening: Listening for key words Knowing what to listen for helps you better understand what others are saying. You can do this by making predictions based on the topic. If someone complains about a hotel room, they may mention its hygiene or facilities. If it's about the facilities, listen for facility names, such as Wi-Fi, air conditioner or shower, and words describing problems, such as broken, leaking or doesn't work. Also listen for the words that carry important meaning in sentences, usually verbs, nouns and adjectives. Listen for words with a negative meaning, too, like never and none. There's a  terrible smell  in the  bathroom , and the  sink  is  leaking . I called the  front desk , but they  never came . Expression: Resolving a complaint Resolving complaints The best way to handle complaints is to give solutions. You can start with this sentence. I have a proposal. Use  furthermore  to add to your proposal. Furthermore , this work will be done free of charge.   Use these sentences to ask for the customer's opinion. I'd like to know what you think.   How does that sound? Is there anything else I can do? It's also important to maintain a relationship with the client. Here are some useful sentences to apologize and to express wishes for the future. Once again, let me apologize for this situation. I sincerely hope that we will still fulfill your expectations. I hope this won't deter your company from working with us.    I promise to look into it to ensure it never happens again. MR. ST. JOHN: I have a proposal. I'd like to know what you think. I'll send our chief designer, Julian, over to assess the situation and propose a new design. How does that sound ? MS. LAMBERT: That would be a start. MR. ST. JOHN: Furthermore , we'll send a team of painters to work directly with you. I sincerely hope that we can fulfill your expectations. MS. LAMBERT: The work had better be done fast. I have bookings awaiting confirmation. MR. ST. JOHN: We'll make sure that it's done in time. Once again, let me apologize. I promise to look into it to ensure it never happens again. I hope this won't deter you from working with us again. MS. LAMBERT: Well, I can't promise anything till I see your second attempt at our hotel. MR. ST. JOHN: I understand. Julian will contact you to fix an appointment. Is there anything else I can do? MS. LAMBERT: No, I think that's all. I'll be waiting for his call. Leaving a voice message Expression: Leaving a voice message Recording a voice message An efficient voice message is brief and contains only necessary information. At the beginning, let the other person know why you're leaving the message, for example, in response to an earlier email. Thanks for  the meeting notes. I got your  email. People leave voice messages when they can't reach someone on their phone. You can let them know that in the message. I tried to call but couldn't  get through. Use these highlighted phrases to refer to previously mentioned topics that you're responding to. As for  the business proposal, I agree that it requires some revision.  Regarding  the training next month, I'd prefer to include people from other teams as well. In terms of  the new hire's salary, I think Mike is confirming with finance at the moment. You can use  you were + verb -ing  for the same purpose. So,  you were asking about  the file. Tom is on it this week and should have it ready soon. Hey Claire, this is Ron. I got your email. I tried to call you but couldn't get through. So, you were asking about the proposal. I'll follow up and see whether it has been approved. As for the supply contract, Tom has confirmed it'll be signed by the end of this week. In terms of the next steps, let's sync up and make a plan. Please get back to me when you hear this message. Chat soon. Expression: Interpreting what someone wrote Interpreting what's written It's not uncommon to find a few sentences that aren't clear in an email. When you're addressing them in a voice message, because you're not getting an immediate response, you can use your own interpretation of what the writer of the email might have meant. These highlighted phrases will help you do that. I assume  you were suggesting that we start the process immediately.   Were you suggesting  that there might be an issue with the new product? If I understood you correctly , the contract should be ready in three days.   You can use  if that's the case  to build on your interpretation. Were you suggesting the work might be delayed?  If that's the case , we need a plan B.  Hey Sam, this is Dustin. I got your message. I tried to call but couldn't get through. Regarding the supply contract, I assume you meant that our client might change their mind if we don't get the contract ready soon. If that's the case , I'll follow up with the legal team and get them to approve it this week. As for next year's budget, if I understood you correctly, we might be looking at a 30 percent increase. I think we should have a plan ready for this surplus. Let's sync up ASAP. Please get back to me when you get this message. Talk soon! Follow-up actions Before finishing your voice message, tell the other person what actions are expected afterward.  Follow up  is a very common action phrase, often using  with  and  on . I'll  follow up with  Stuart  on  the legal papers. Here are more action phrases highlighted with accompanying prepositions. I need to  confirm  the new plan  with  Jane. Let's  sync up on  the meeting agenda. I'd like to  clarify  a few things with you. We should  put a hold on  the project. Finally, you can ask the other person to respond. Notice the highlighted action phrases and time expressions. Can you  call me back when you get this message ? Please  get back to me at your earliest convenience . ::: Hey Joe, this is Helen. I got your email. I tried to call but couldn't get through. So, you were asking about the proposal. I haven't heard anything either, but I'll follow up with Mr. Hall. As for the FoodMap app, I assume you were suggesting that Lisa's team start designing the app's look and flow. If that's the case, I'd say not yet. Anyway, we should sync up first, and I'd to like clarify a few things with you. Until then let's put a hold on the project. Please get back to me when you get this message. Talk soon."},{"path":"/English/EF/Telephoning/Teleconference/","rawBody":"Telephoning: Teleconference <Video src=\"./TE3_700V.mp4\" /> PRESENTER  Teleconferencing allows business to be done by anyone, anytime, anywhere in the world. MESSAGE 1  Hi, this is Mark. Just calling to confirm that I'm ready for the teleconference. Speak to you a-a-at... 6.30 a.m. Rio de Janeiro time. Bye. MESSAGE 2  Hello, Clark here. This is to confirm that I will be available for the teleconference. It will be 17:30 here in Shanghai. Our clients have provided an office and set up the equipment. PA  Ned, are you ready? The teleconference is in thirty minutes. IT GUY  Relax! I just have to set up the CODEC unit that transmits the compressed audio via ISDN, then connect the different sites using a bridge, go in through TANDBERG and link up the monitor...with the rest of the world. PA:  Perfect! IT GUY  Quite easy, really. CHAIRMAN  Good morning, Mark. I'm hoping you can hear me. YOUNG EXEC  I can hear you loud and clear. CHAIRMAN  Good afternoon, Clark. Can you hear me? GM  Yes, I can. The reception is... excellent. CHAIRMAN  Okay, let's get down to business. Did you both receive the email with the attached agenda? YOUNG EXEC  Yes, sir. GM  Yes, I did. CHAIRMAN  Good. So, I'll be brief. The initial feedback on the design of the 'Manbag' has been mixed. Mark, you take the floor first on this one. What have you found out in Rio? YOUNG EXEC  Well, the sales teams here said that the response has not been favorable... GM  But if I could interject. The Asian market seems to like this design. YOUNG EXEC  Sorry to interrupt, Clark, but 82 percent of the Brazilian market said they don't like the design because... CHAIRMAN  Clark, can you please turn your microphone off when you're not speaking? Mark, you were saying? YOUNG EXEC  Thank you, Mr. Henriksson. As I was saying, 82 percent of the Brazilian market said they don't like the design because... CHAIRMAN  Ned! Ned! We have a problem! PRESENTER  Teleconferencing can be tricky. It's important to have a clear agenda, and for every participant to have a copy of it. CHAIRMAN  Did you both receive the email with the attached agenda? YOUNG EXEC  Yes, sir. GM   Yes, I did. PRESENTER  The chairperson then has to make sure no one has any technical problems and is introduced to each other. CHAIRMAN  Good morning Mark. I'm hoping you can hear me. YOUNG EXEC  I can hear you loud and clear. PRESENTER  The chairperson then has to lead the attendees through the conference, making sure everyone has a turn. CHAIRMAN  Mark, you take the floor first on this one. What have you found out in Rio? PRESENTER  The chairperson also has to deal with other issues, such as people talking at the same time and background noise.   YOUNG EXEC  Sorry to interrupt, Clark, but 82 percent of the Brazilian market said they don't like the design because... CHAIRMAN  Clark, can you please turn your microphone off when you're not speaking?   CHAIRMAN  We have a problem! Taking part in a conference call Vocabulary: Opening an online meeting Opening an online meeting There are usually several people involved in online meetings, so you should check to make sure everyone is connected before starting the meeting. Use these phrases to ask for and confirm the presence of the participants. Do we have  Darius with us? Are you there , Teddy? We have  Darius, from London. Jane  is joining us  from Shanghai. Since online meetings take place over the internet, you'll also need to consider the quality of the connection. Can you hear me? I can hear you, loud and clear. How's the connection?     The connection is a bit slow today. Expression: Chairing an online meeting Chairing an online meeting You'll need to use certain expressions when leading a group of people in an online meeting. Here are some phrases you can use to give structure to the meeting. I'll quickly  run through the agenda . Jane,  we'll start with you . You can use the following phrases to ask for feedback from the participants. Is that clear? Any questions so far? What do you think? How about  the UK markets? You may need to politely stop someone from talking. I'm sorry to interrupt, but  we have a lot to get through today. Expression: Dealing with technical issues Technical issues Technical issues can be common during an online meeting. Below are some expressions to point out that there's a problem. Note that when the connection is  lagging , the listener may hear a sentence a few seconds after the speaker said it. You're breaking up. The connection is quite bad today. There's quite a bit of background noise. The connection seems to be lagging. Following are some expressions for attempting to fix the problem. Note that when you  mute  your microphone, the other side of the connection won't hear what you say. Can you mute your microphone? Let's all hang up and I'll start the call again. I'll bring Jane back into the call. Cold calling Expression: Opening a cold call Conducting a cold call When you start a cold call, you can use the highlighted phrase to identify yourself. This is  Jay Hamilton,  calling on behalf of  CityTech. When you start a cold call, you can use the highlighted phrase to identify yourself. I was wondering if you had a moment to talk about  a new water cooler system. I'm calling because  I understand your company is interested in our services. It's also useful to let the other person know that the call will be short. I'll try to be brief. It'll only take five minutes of your time. The following phrases help you get information that you need. Could you tell me  about the current system you're using? Let me ask you : when was the last time your system had an upgrade? On many occasions, a cold call may not be successful, perhaps because the other person is too busy to talk. You can acknowledge the situation, thank the other person for their time, and say that you'll call back. I understand , ma'am. Sorry for the inconvenience. I'll call back  at a later date. Thank you for your time. This is Matthew Price, calling on behalf of Cool Coolers. I was wondering if you had a moment to talk about your water coolers. I understand you're very busy, so I'll try to be brief . First of all, could you tell me about your current arrangement? Who supplies the water coolers at Fast Solutions? And let me ask you a question: how often do they bring fresh water and collect the old containers? Expression: Making a sales pitch Making a sales pitch It's important to engage your potential customer during the call. Offer your services in the form of questions to keep them involved. What if I could  guarantee reliable delivery?      How about if I  offered you one month free? What would you say if  I could promise the freshest water? It's also important to clarify your potential customer's needs and problems by summarizing what they said. So what you're saying is that  reliable delivery is important to you. If I understand you correctly , you think you're paying too much already. You mean that  their water isn't always fresh? A: Hi, I'm calling on behalf of Everyday Chefs, a catering company. Let me ask you something: does your company provide a breakfast service? B: No, not at the moment. We did before, but the staff complained about the food. A: I see. So if I understand you correctly, the food wasn't very good? B: It tasted like airline food. A: That's a common complaint. But what if I said that some services offer delicious, organic and healthy food at a competitive price? B: Please, tell me more. A: We're new to the market, and to establish ourselves, we're offering our premium services at a lower price than usual. Do you think meals are important to workplace morale? B: I'm not sure, honestly. A: What would you think if I told you that free meals result in a 20% boost in employee satisfaction? B: That sounds substantial. A: How about if we meet in person to discuss some meal plans? B: Sure, let's set something up. Expression: Closing a cold call Closing a cold call The customer is likely to raise objections during a cold call. Here are some ways to deal with those objections. I assure you that  the demonstration will be quick. The demonstration  will change the way you think about  drinking water. I understand your concern, but  I'm sure it'll be time well spent. End a successful cold call on a positive note by saying something other than the standard goodbye. I look forward to meeting you. I'm glad we could work something out. I think this will be of great benefit to your company. Being interviewed over the phone Expression: Responding to preliminary questions Preliminary questions During a phone interview, the interviewer usually states the purpose of the call. I'm calling regarding your application  for the position of sales manager. I'd like to ask you some questions  regarding your application. The interviewer may ask whether you're free to talk. Is this convenient , or should I call back at another time? I don't want to take up too much of your time  today. Be ready for questions that the interviewer will ask about your resume. Can you tell me something about  your experience at your last job? Can you give me an idea as to the scope of your last position? Hello, Lucas. I'm  calling regarding  your application for the position as chief in-house designer for Urban Legend. If it's okay with you,  I'd like to ask you  some questions regarding your application.  Is this convenient , or should I call back at another time? That's great. So, I don't want to  take up too much  of your time today. I would just like to ask you some questions regarding your resume. I'd also like to ask for more deta So, let's get started. Can you  give me an idea  as to the scope of your last position? I see you were chief cutter for Wild Cat Fashion. Can you tell me something about that? Expression: Selling yourself Answering interview questions There are several questions that are very common in interviews. What would you say are your greatest strengths? What can you tell me about  your experience with your previous company? What has been your biggest challenge  so far? How long were you with  them? How did you find that experience? Do you have any questions for me? Be ready to answer them in a way that makes you look good, but try to avoid sounding arrogant or overconfident. You can use with and for to describe how long you have worked in a company or team. I was with  Wild Cat Fashion  for  four years. You can use these highlighted phrases to talk about what you felt and learned in a job. At first, I found it  very stressful. While working as  a team leader,  I learned about  how to deal with tight deadlines. These highlighted phrases are useful for describing your strengths and your aspirations. I am willing to  learn and listen. I want to continue developing  both  as  a designer and as a leader. Interviewer: What can you tell me about your experience with your previous company? Interviewee: I was with them  for seven years. Interviewer: Right, and how did you find that experience? Interviewee: Well, at first I found it stressful, but I quickly adapted . While working as the assistant manager, I learned a lot about how to manage a team and communicate efficiently. And now I want to continue developing as a strong leader in a more challenging and exciting environment. Interviewer: I see. And what would you say are your greatest strengths ? Interviewee: Well, I am always willing to listen and learn. And … Function: Concluding the interview positively Concluding the interview If you're lucky enough to get a job offer, the interviewer might say some positive things to start the relationship between you and the company. You'll fit in with our team perfectly. We'd like to offer you the position. You're going to be a huge asset to our company. It's important for you to sound surprised, grateful, and optimistic about your future with the company. That's great to hear! I've always been a great admirer of your company. It's great to be on board. When do I start? Interviewer: I'm pleased to say that we'd like to offer you a position at our company. We think you'll be a great fit for our team. Interviewee: That's great to hear ! I've always been a great admirer of your company. Interviewer: You're going to be a huge asset to our company. Interviewee: When do I start ?"},{"path":"/阅读/读书笔记/爱的艺术/","rawBody":"爱的艺术 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"爱的艺术\" /> 在线阅读 摘录 第一章：爱是一门艺术吗？ 爱情不是一种与人的成熟程度无关，只需要投入身心的感情。如果不努力发展自己的全部人格并以此达到一种创造倾向性，那么每种爱的试图都会失败；如果没有爱他人的能力，如果不能真正谦恭地、勇敢地、真诚地和有纪律地爱他人，那么人们在自己的爱情生活中也永远得不到满足。 可以简单地把学会一门艺术分成两个部分，一是掌握理论，二是掌握实践。学医的人首先要认识人体的结构和各种疾病的症兆。但光有理论还无法行医。只有通过长期的实践活动，一直到理论知识和实践经验融会贯通起来变成灵感—也就是掌握了艺术的灵魂，才能成为一名大师。要成为大师，除了学习理论和实践外还有第三个必不可少的因素，即要把成为大师看得高于一切，这一目标必须占据他整个身心。这一点既适用于音乐、医学、雕塑—也适用于爱情。 第二章：爱情的理论 （一）爱情是对人类生存问题的回答 人拥有理智；人是生命，一种意识到自我存在的生命。人意识到自己，他人，人的过去和发展前途的可能性。人对他的单一存在的觉悟，对他短暂生命的觉悟，人意识到生不由己，死的必然，人知道自己的孤独和与世隔绝，意识到面对社会和自然的威力自己的无能为力—所有这一切都使他的特殊和孤寂的存在成为无法忍受的监禁。如果人不能从他的监狱中解放出来和打碎这一监狱，如果他不能以这种或那种方式，同他人或周围世界结合在一起，他就会疯狂。 经历过孤寂的人必然会有恐惧感。实际上孤寂感是每种恐惧的根源。孤寂意味着与外界没有联系，不能发挥人的力量，意味着一筹莫展，不能把握世界，事物和人；意味着世界把我淹没，而我只能听之任之。所以孤寂是引起强烈恐惧感的根源，同时孤寂还会引起羞愧和负罪的感觉。 因此对人来说最大的需要就是克服他的孤独感和摆脱孤独的监禁。人在达到这一目的过程中的完全失败就会导致人的疯狂，因为人只有通过完全彻底地脱离周围世界，以至于不再感到与世隔绝，他对彻底孤独的恐惧感才会得到克服—因为他与之隔绝的世界从他的生活中消失了。 通过纵欲达到人与人之间的结合的所有方式都有三个特征：首先这些方式都是强烈的，甚至会很激烈；其次它们需要整个人—包括身心都投入进去，第三就是需要不断重复—因为纵欲的效果只能持续很短的时间。但是，无论是过去的人，还是现代人，克服孤独感最常用的方法却与此截然相反。这一方法就是通过同一组人保持一致，通过同一组人的习惯、风格和看法保持一致来达到同其他人的结合。这一方法的发展也有一个历史过程。 在一个低级社会中一组人为数甚少，往往是由血缘关系相近或者生活在一起的人组成。随着文化的发展，一组人的人数也随之增长，它变成了一个政治体、国家或一个教派。就是最穷的罗马人也能自豪地说“我是罗马的公民！”罗马和罗马帝国就是他的家，他的祖国和世界。在今日的西方社会，同一组人结合仍然是克服孤独感最常用的方法。在这种结合中，参加者为了使自己属于这一组人而失去了大部分个性。如果我与他人完全一样，我的感情、思想与他人一致，我的衣着、习惯和看法都与这一组人的楷模看齐，我就可得救，就不会再经历可怕的孤独。专政的国家形式需要用威胁和恐怖手段去制造同一状态，而民主政权里还存在抵制这种同一性的可能性，在这样的社会里也确实能看到这种例子。但在专制制度里只有少数非凡勇敢的英雄和殉道者才会抵制顺从。虽然民主制度和专制的国家形式有区别，然而民主制度把人变成一个模式的程度也委实使人担心，造成这种现象的原因是人们总想通过某种方式实现同他人结合，如果没有别的更好的方式，那就只能采取同一群人同一的方式。我们只有理解了人是多么害怕与别人隔绝，才能懂得担心与众不同和同一群人疏远会产生何等的威力。有时这种担心是可以原谅的，因为人们考虑到与众不同会带来实际危险。但事实上人们多半是自发地、而不是被迫地这样做—至少在西方民主国家中是如此。 大多数人并不意识到自己身上有这种要求。他们生活在一种幻觉中，以为自己是按照个人的意愿行事，是具有个性的人，是经过大脑的思考形成自己的看法—他们认为他们的观点之所以和大多数人吻合纯粹是巧合罢了。他们甚至认为这正好证明了“他们”的观点是正确的。至于他们尚存的、希望自己有个性的要求则通过微不足道的东西得到满足：如在手提箱和毛衣上绣上自己的名字的缩写字母，在玻璃窗口上挂上自己的名牌，参加一个政党或者一个学生联合会。《来点儿别的》这一广告口号证明了在一个几乎不存在个性的社会现实中，人们是何等地需要个性！ 在谈及这一方法时，还必须考虑到我们现代社会生活的另一个因素：那就是工作和恢复疲劳的循环作用。人作为劳动大军和管理阶层的一员仅仅是一个号码而已。他几乎不需要有任何主观能动性，他的任务由劳动的组织派定。领导和被领导之间也几乎没有区别，因为他们都在行使由整个组织结构规定的任务，不仅要按规定的速度，也要按规定的方式完成。甚至他们的各种感情，如高兴、宽容、信任、雄心以及同每个人顺利合作的能力都是预先规定的。他们的娱乐方式即使不那么强求一律，也都是大同小异。阅读的书是读书俱乐部选定的；看的电影是电影院老板和他们出钱登印的广告选定的；其他的娱乐方式也都雷同：星期日驾车远足、看电视、打牌和社交活动。从生到死，从星期一到星期日，从早到晚—所有的行动都是千篇一律和按照预定的方式进行。请问：一个被围困在这么一个罗网之中的人如何才能不忘记他是一个人，只存在一次的人，只有一次生存的机会，能经历希望、失望、担心和恐惧的人，渴望爱情和受到虚无和孤独威胁的人呢？ 通过创造性的劳动达到的统一不是人与人之间的统一。通过纵欲达到的统一是暂时的。通过同一组人同一和适应这一组人达到的统一仅仅是一种假统一。对人类存在问题的真正的和全面的回答是要在爱中实现人与人之间的统一。 同共生有机体结合相对立的是成熟的爱情，那就是在保留自己完整性和独立性的条件下，也就是保持自己个性的条件下与他人合二为一。人的爱情是一种积极的力量，这种力量可以冲破人与人之间的高墙并使人与人结合。爱情可以使人克服孤寂和与世隔绝感，但同时又使人保持对自己的忠诚，保持自己的完整性和本来的面貌。 在爱情中出现了两个生命合为一体，却依然保持两体的怪现象。 如果我们说，爱情是一项“积极的活动”，我们就会遇到“积极的活动”这个词有双重意义的问题。这个词的现代用法一般就是指人们通过付出劳动改变现存状态的行为。所以经商的人，学医的人，流水作业线上的工人，做椅子的木匠或者运动员都是积极活动的人。他们活动的共同点都是为了达到一个外部的目的。但这里我们都没有考虑产生积极性的根源。我们可以举一个例子加以说明。有的人由于内心极度的不安或者孤独而狂热地工作，有的人则是为了升官发财。在这种情况下这个人就是一种狂热、一种热情的奴隶，而他的“积极性”实际上是一种“消极性”，因为他是受外力的驱使。他是一个受苦的人，而不是一个“行动”的人。另一方面人们往往把一个坐在椅子上沉思默想、观察和体验自己以及自己同世界关 爱情是一种积极的，而不是消极的情绪。一般来说可以用另一个说法来表达，即 爱情首先是给而不是得 。 什么是“给”？这个问题看起来似乎很容易回答，实际上却很复杂并有双层意义。十分流行的误解是把“给”解释为放弃，被别人夺走东西或作出牺牲。一个性格还没有超越接受、利用或者贪婪阶段的人对给的理解就是这样。一个“重商主义”的人也准备给，但一定要通过交换。只“给”而没有“得”对他来说就是欺骗。③那些基本上是非生产性性格结构的人则会有一种被别人拿走东西的感觉。因此这种类型的大多数人拒绝给予别人东西。而有些人却又把“给”变成一种自我牺牲的美德。他们认为，正因为“给”是痛苦的，所以应该这么做。给的美德就是准备牺牲，对他们来说，“给”比“得”好这一准则就是意味着宁可忍受损失也不要体验快乐。 在物质世界范畴内给是财富。不是拥有财物的人是富裕的，而是给予他人东西的人才是富裕者。害怕受到损失的吝啬鬼，不管他拥有多少财产，从心理学角度来看，他是一个贫穷和可怜的人。愿意把自己的东西给予他人的人却是富有的，他感觉到自己是一个有能力帮助别人的人。只有那些连生活必需品都没有的人才不能体验帮助别人的乐趣。但是日常生活经验告诉我们，衡量有没有足够生活必需品的标准既取决于人的实际财产，也取决于人的性格本质。众所周知穷人往往比富人更愿意给。尽管如此，超过一定限度的贫困往往使许多人无法给，恰恰这一点是十分令人懊丧的—这不仅仅是因为从中可以看到穷人的贫困，同时也是因为穷人被剥夺了给所带来的欢乐。 但给的最重要范畴还不是物质范畴，而是人所具有的特殊范畴。一个人究竟能给予别人什么呢？他可以把他拥有的最宝贵的东西，他的生命给予别人。但这并不一定意味着他一定要为别人献出自己的生命，而是他应该把他内心有生命力的东西给予别人。他应该同别人分享他的欢乐、兴趣、理解力、知识、幽默和悲伤—简而言之一切在他身上有生命力的东西。通过他的给，他丰富了他人，同时在他提高自己生命感的同时，他也提高了对方的生命感。他给并不是为了得，但是通过他的给，不可避免地会在对方身上唤起某种有生命力的东西。因此他的给同时也包括了使接受者也成为一个给的人，而双方都会因为唤醒了内心的某种生命力而充满快乐。在给的行为中诞生了新的东西，给和得的人都会感谢这新的力量。这一点表现在爱情上就是：没有生命力就是没有创造爱情的能力。马克思极其优美地表达了上述思想。他说：“如果你以人就是人以及人同世界的关系是一种充满人性的关系为先决条件，那么你只能用爱去换爱，用信任换取信任。如果你想欣赏艺术，你必须是一个有艺术修养的人；如果你想对他人施加影响，你必须是一个能促进和鼓舞他人的人。你同人及自然的每一种关系必须是你真正个人生活的一种特定的、符合你的意志对象的表现。如果你在爱别人，但却没有唤起他人的爱，也就是你的爱作为一种爱情不能使对方产生爱情，如果作为一个正在爱的人你不能把自己变成一个被人爱的人，那么你的爱情是软弱无力的，是一种不幸。”⑤不仅在爱情上“给”意味着“得”。教师向他的学生学习，演员受到观众的鼓舞，精神分析学家通过治愈他人的病而治愈自己的病也都如此，先决条件是给的人不应该把对方看作是他帮助的对象，而应该同对方建立一种真正的、创造性的紧密关系。 如果爱情没有第三个要素：尊重，那责任心就很容易变成控制别人和奴役别人。尊重别人不是惧怕对方。尊重这个词的出处就是有能力实事求是地正视对方和认识他独有的个性。尊重就是要努力地使对方能成长和发展自己，因此尊重决无剥削之意。我希望一个被我爱的人应该以他自己的方式和为了自己去成长、发展，而不是服务于我。如果我爱他人，我应该感到和他一致，而且接受他本来的面目，而不是要求他成为我希望的样子，以便使我能把他当作使用的对象。只有当我自己达到独立，在没有外援的情况下独立地走自己的路，即不想去控制和利用别人，只有在这种情况下，尊重对方才成为可能。只有在自由的基础上才会有爱情，正像在一首古老的法国歌曲中唱的那样“爱情是自由之子，永远不会是控制的产物”。 人们只有认识对方，了解对方才能尊重对方。如果不以了解为基础，关心和责任心都会是盲目的，而如果不是从关怀的角度出发去了解对方，这种了解也是无益的。了解的方式多种多样。成为爱情一要素的了解是要深入事物的内部，而不是满足于一知半解。我只有用他人的眼光看待他人，而把对自己的兴趣退居二位。我才能了解对方。譬如：我可以知道这个人在生气，即使他自己不表露出来。但我还可以更进一步地去了解他，然后就知道，他很害怕和不安，他感到孤独和受到良心的谴责。这样我就明白他的生气只是他内部更深的东西的反映，这时我眼中的他不再是一个发怒的人，而是一个处在恐惧和惶恐不安之中的受苦的人。 关心、责任心、尊重和了解是相互依赖的。在成熟的人身上可以看到这些态度的集中表现。成熟的人就是指能够创造性地发挥自己力量的人。成熟的人只想拥有他自己的劳动果实，放弃了获取全力和全知的自恋幻想，并有一种谦恭的态度。这一态度的基础是他内心的力量，单单这股力量就能使他进行真正的、创造性的劳动。 阳性的特点是渗透、指导、积极、守纪律和善于冒险，而阴性则具有接受、保护、求实、忍耐和母性的特点。 （二）父母和孩子之间的爱 天真的、孩童式的爱情遵循下列原则：“我爱，因为我被人爱。”成熟的爱的原则是：“我被人爱，因为我爱人。”不成熟的、幼稚的爱是：“我爱你，因为我需要你”，而成熟的爱是：“我需要你，因为我爱你。” （三）爱的对象 爱首先不是同一个特殊的人的关系，而更多的是一种态度，性格上的一种倾向。这种态度决定一个人同整个世界，而不是同爱的唯一“对象”的关系。如果一个人只爱他的对象，而对其他的人无动于衷，他的爱就不是爱，而是一种共生有机体的联系或者是一种更高级意义上的自私。尽管如此大多数人都认为爱情取决于对象，而不是能力。他们甚至认为专爱一个人就是强烈爱情的证明。我们在上面已经提到过这一错误的结论。正因为人们不是把爱情看作是一种积极的行动，灵魂的一股力量，所以他们认为只要找到爱的对象就行，别的东西自然而然就会产生。可以把这一态度同想画一张画的人作一比较：这个人虽然想画画，但他不是去学绘画这门艺术，而是强调他首先要找到他愿意画的合适的对象。如果他找到了这么一样东西，他也就能画了。如果我确实爱一个人，那么我也爱其他的人，我就会爱世界，爱生活。如果我能对一个人说：“我爱你”，我也应该可以说：“我在你身上爱所有的人，爱世界，也爱我自己。” （1）博爱 一切爱的形式都以博爱为基础。我指的博爱就是对所有的人都有一种责任感，关心、尊重和了解他人，也就是愿意提高其他人的生活情趣。这也是圣经里提到的一种爱的方式：爱他人应如爱己。博爱是对所有人的爱，其特点是这种爱没有独占性。如果我具有爱的能力，我就会去爱我周围的人。在博爱中凝聚着同所有人的结合，人的团结和统一。博爱的基础是认识到我们所有的人都是平等的。同人共有的核心相比，人与人之间在才能、智力和知识上的差别微不足道。要了解这种人共有的核心，必须要深入了解人，而不是停留在表面。如果我只看到一个人的表面，那我看到的主要是使我和他分开的差别。如果我了解到他的本质，我就会看到我们的共性，我们是兄弟这一事实。这样的一种核心对核心的关系—用来取代表面对表面的关系—是一种“中心关系”。西莫尔?魏尔曾经很优美地表达过这种关系：“同样的话(即丈夫对他妻子说“我爱你”)可以是很一般的，也可以非同一般，这要按说这些话的方式而定。说话的方式则取决于这些话发自内心的深度，而不取决于个人意志。在双方息息相通的情况下，这些话会触动对方相等的内心深度。所以一个有能力区别的人就会听得出来这些话的份量究竟有多大！” （2）母爱 对幼儿生命的肯定应该包括两个方面：一方面是必须关心幼儿并对其成长负有责任，以维护和发展弱小生命。另一方面则超出了维护生命的范围，那就是要使孩子热爱生活，要使他感到：活着是多么好！当一个小男孩或小女孩有多么好！在这个世界活着有多么好！ （3）性爱 “堕入情网”的爆炸式的感情，按其本质这种突如其发的强烈感受是注定短命的。 大多数人无论对自己还是对别人都是了解得非常快，而且很快就觉得一览无余了，这恰恰是因为他们只了解了人的表面，而没有深入内心。对他们来说，人与人之间的亲密首先是通过性结合得以实现的。正因为他们觉得他们同别人的隔离首先是一种肉体上的隔离，所以肉体的结合对他们来说就意味着克服人与人的隔离。 另外，对许多人来说还有一系列克服人与人隔离的方法。讲述自己的生活，叙述自己的希望和恐惧，谈出自己幼稚的或者不成熟的梦想，以及找到面对世界的共同利益—所有这一切都是克服人与人之间隔离的途径。甚至表露自己的愤怒和仇恨，毫无顾忌地交心也都被看出是亲密的表现。 如果男女双方确实相爱，他们的性爱就具备一个先决条件—那就是我从我生命的本质出发去爱对方，并且去体验对方的本质。人就其本质来看都是一样的，我们既是整体的部分；又是整体，因此实际上爱谁都一样。从根本上来看爱情是意志的行为，是人作的一项把全部生命交付对方的决定。这一点也正是婚姻是不可解除的观点和许多传统婚姻形式的思想基础。在这些传统的婚姻形式中配偶不经自行选择，而是由被人挑选—人们相信“先结婚，后恋爱”的说法。在现代西方世界这种观点被视为是完全错误的。人们认为爱情是一种自发的感情反应，人们会突然被一种无法抗拒的感情所控制。这里人们只看到两个人的特点，而没有看到—所有的男人都是亚当的一部分，所有的女人都是夏娃的一部分这一事实。人们拒绝认识性爱的一个重要因素：即意志的因素。爱一个人不仅是一种强烈的感情—而且也是一项决定，一种判断，一个诺言。如果爱情仅仅是一种感情，那爱一辈子的诺言就没有基础。一种感情容易产生，但也许很快就会消失。如果我的爱光是感情，而不同时又是一种判断和一项决定的话，我如何才能肯定我们会永远保持相爱呢？ （4）自爱 一切有能力爱别人的人必定也爱自己。原则上爱自己和爱别人是不可分的。真正的爱是内在创造力的表现，包括关怀、尊重、责任心和了解诸因素。爱不是一种消极的冲动情绪，而是积极追求被爱人的发展和幸福，这种追求的基础是人的爱的能力。 利己的人不是太爱自己，而是太不爱自己。缺乏对自己的爱和关心表明了这个人内心缺少生命力，并会使他感到空虚和失望。在必要时这个不幸和胆怯的人会通过各种其他的满足来弥补他失去的幸福。他看上去似乎非常关心自己，实际上只是试图通过对自己的关心去掩盖和补充自己缺乏爱的能力。 利己的人不是太爱自己，而是太不爱自己。缺乏对自己的爱和关心表明了这个人内心缺少生命力，并会使他感到空虚和失望。在必要时这个不幸和胆怯的人会通过各种其他的满足来弥补他失去的幸福。他看上去似乎非常关心自己，实际上只是试图通过对自己的关心去掩盖和补充自己缺乏爱的能力。 （5）神爱 第三章：爱情及其在当代西方社会的衰亡 资本集中带来的另一个决定性特点是劳动组织的特殊形式，这也是现代资本主义的特点之一。高度集中、分工严密的企业导致一种新的劳动组织，在这一组织中个人失去了个性，而成为机器中一个可以随时调换的齿轮。 现代资本主义中个人的问题可以归纳如下： 现代资本主义需要大批能在一起协调工作的人。这些人对消费的需求越来越高，但他们的口味是标准化的，既容易受到控制，又能预测。现代资本主义需要的人是一方面能感觉到自己是自由和独立的并相信自己不屈服于任何权威、原则和良心，另一方面他们又准备执行命令，完成别人交给的任务，服服贴贴地进入社会这部机器中去，规规矩矩地听人摆布，自愿服从领导，盲目地受人指挥—只有一个例外，那就是他们要不遗余力地干活，永远地发挥作用和力争晋升。 那结果是什么呢？如果就是现代人对自己、对同代人和对大自然产生异化。1他变成一种商品，体验到自己的生命力实际是一笔资本，这笔资本在既定的市场条件下要给他带来最大的利润。人与人之间的关系从本质上来看是互为陌生的，是自动机器之间的关系，其安全感的基础就是要想方设法靠拢一群人，在思想、感情和行动中同这一群人保持一致。虽然每个人都努力同别人接近，但实际上都是孤独的，充满了不安全感、恐惧感和负罪感。只要人与人之间的隔膜得不到克服，这种感觉就会不断出现。但我们的文明提供了各种可能性，使人们感觉不到这种孤独。这首先就是人们每天都重复着千篇一律僵化的机械性工作，这种工作秩序使他们不再自觉地感到人追求超越和统一的基本要求。但是光靠这个还不行，因此人就通过享受，通过娱乐工业提供的音乐、画片，以及通过不断地购买新的物品去减少这种尚未意识到的绝望。事实上现代人很像休克斯勒尔 （ 休克斯勒尔(1894-1963),美国作家，深受佛教的影响。—译者注）在他的《美丽的新世界》一书中描绘的那付样子：“营养充分，穿戴讲究，性欲得到满足，但却没有自我，同他同时代的人也只有表面的接触。”现代人的宗旨正如休克斯勒尔简明扼要地总结的那样是“今朝有酒今朝醉”或者是“今日，人人幸福”的颂词。现代人的幸福就是享受，就是满足消费和同一群人同化的要求。他们消费商品、图片、食品、饮料、香烟、人、杂志、书籍、电影，真是无其不有。世界只是为了填饱他们的肚子，就象一个巨大的苹果，一个巨大的酒瓶和一个巨大的乳房，而我们是婴儿，永远在期待，在希望，却永远是个失意者。我们的性格努力地适应进行交换、接受和消费的要求。所有的一切—精神的和物质的东西—都成为交换和消费的对象。 至于爱情，当然也完全符合现代人的社会性格。自动机器是不会爱的，它们只能交换“一揽子特性”，想做一笔好买卖。在这一异化了的结构中，人在爱情上的基本要求是“结伴”思想，这在婚姻中表现得尤为突出。在无数宣传美满婚姻的文章中，一对毫无摩擦的伴侣被奉为是理想的结合。这一宣传同社会要求职员应得心应手的标准毫无两样。这个职员必须“相应独立”，是一个很好的合作者，宽容，同时又具有进取心，对生活的要求又很高。正像婚姻顾问对我们介绍的那样，一个丈夫应该理解他的“妻子”，并是她的帮手。他应该赞赏她妻子的新衣服，也要称赞她做的饭菜。而每当丈夫疲劳不堪、怨气十足地回家来时，妻子则应该体谅他，当丈夫谈到职业上的麻烦事时，妻子应该注意听他讲。如果丈夫忘记了她的生日，妻子不应该生气，而应该通情达理。所有这一切无非是表明这两个人的关系如上了油一样毫无摩擦，但这两个人一辈子都会互不了解，永远达不到“中心关系”，而是敬如宾客，只是尽力使对方舒适而已。这样的爱情和婚姻概念实际上是强调保护自己免遭不可忍受的孤独感的侵袭。在“爱情”中人们终于找到了避风港。两个人结成用以反对全世界的同盟，却把这种两个人的自私看作是爱情和信赖。 简介 内容简介 《爱的艺术》是德裔美籍心理学家和哲学家、法兰克福学派重要成员艾里希-弗洛姆最著名的作品，自1956年出版至今已被翻译成32种文字，在全世界畅销不衰，被誉为当代爱的艺术理论专著最著名的作品。 在这本书中，弗洛姆认为，爱情不是一种与人的成熟程度无关，只需要投入身心的感情。如果不努力发展自己的全部人格并以此达到一种创造倾向性，那么每种爱的试图都会失败，如果没有爱他人的能力，如果不能真正谦恭地、勇敢地、真诚地和有纪律地爱他人，那么人们在自己的爱情生活中也永远得不到满足。 弗洛姆进而提出，爱是一门艺术，要求想要掌握这门艺术的人有这方面的知识并付出努力。在这里，爱不仅仅是狭隘的男女爱情，也并非通过磨练增进技巧即可获得。爱是人格整体的展现，要发展爱的能力，就需要努力发展自己的人格，并朝着有益的目标迈进。 此版特别收录弗洛姆学术助手纪念文章《弗洛姆生命中的爱》。 作者简介 艾里希·弗洛姆，著名德裔美籍心理学家、精神分析学家、哲学家。1900年生于德国法兰克福犹太人家庭，1922年获德国海德堡大学哲学博士学位，是二十年代“法兰克福学派”重要成员。纳粹上台后，他于1934年赴美，在从事心理咨询工作的同时，在哥伦比亚大学等学术机构讲学，并先后执教于墨西哥国立大学、密歇根州立大学等高校。1980年弗洛姆病逝于瑞士洛伽诺。 弗洛姆的研究植根于弗洛伊德的精神分析学说和马克思主义哲学理论。他认为人是各自所在的产物，在现代工业化社会，人变得越来越自我疏离，这种孤立感导致人们潜意识下渴望与他人结合、联系。 弗洛姆以深入浅出、平易近人的文笔，创造了大量学术著作和普及性作品，其中影响最大的有《爱的艺术》、《逃避自由》、《健全的社会》、《精神分析的危机》等。"},{"path":"/计算机与编程/工具/Vim/vimtutor/","rawBody":"Vim 基础教程 ===============================================================================\n=    W e l c o m e   t o   t h e   V I M   T u t o r    -    Version 1.7      =\n===============================================================================\n\n     Vim is a very powerful editor that has many commands, too many to\n     explain in a tutor such as this.  This tutor is designed to describe\n     enough of the commands that you will be able to easily use Vim as\n     an all-purpose editor.\n\n     The approximate time required to complete the tutor is 25-30 minutes,\n     depending upon how much time is spent with experimentation.\n\n     ATTENTION:\n     The commands in the lessons will modify the text.  Make a copy of this\n     file to practice on (if you started \"vimtutor\" this is already a copy).\n\n     It is important to remember that this tutor is set up to teach by\n     use.  That means that you need to execute the commands to learn them\n     properly.  If you only read the text, you will forget the commands!\n\n     Now, make sure that your Caps-Lock key is NOT depressed and press\n     the   j   key enough times to move the cursor so that lesson 1.1\n     completely fills the screen.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tLesson 1.1:  MOVING THE CURSOR\n\n\n   ** To move the cursor, press the h,j,k,l keys as indicated. **\n\t     ^\n\t     k\t\t    Hint:  The h key is at the left and moves left.\n       < h\t l >\t\t   The l key is at the right and moves right.\n\t     j\t\t\t   The j key looks like a down arrow.\n\t     v\n  1. Move the cursor around the screen until you are comfortable.\n\n  2. Hold down the down key (j) until it repeats.\n     Now you know how to move to the next lesson.\n\n  3. Using the down key, move to lesson 1.2.\n\nNOTE: If you are ever unsure about something you typed, press <ESC> to place\n      you in Normal mode.  Then retype the command you wanted.\n\nNOTE: The cursor keys should also work.  But using hjkl you will be able to\n      move around much faster, once you get used to it.  Really!\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t    Lesson 1.2: EXITING VIM\n\n\n  !! NOTE: Before executing any of the steps below, read this entire lesson!!\n\n  1. Press the <ESC> key (to make sure you are in Normal mode).\n\n  2. Type:\t:q! <ENTER>.\n     This exits the editor, DISCARDING any changes you have made.\n\n  3. Get back here by executing the command that got you into this tutor. That\n     might be:  vimtutor <ENTER>\n\n  4. If you have these steps memorized and are confident, execute steps\n     1 through 3 to exit and re-enter the editor.\n\nNOTE:  :q! <ENTER>  discards any changes you made.  In a few lessons you\n       will learn how to save the changes to a file.\n\n  5. Move the cursor down to lesson 1.3.\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t     Lesson 1.3: TEXT EDITING - DELETION\n\n\n\t   ** Press  x  to delete the character under the cursor. **\n\n  1. Move the cursor to the line below marked --->.\n\n  2. To fix the errors, move the cursor until it is on top of the\n     character to be deleted.\n\n  3. Press the\tx  key to delete the unwanted character.\n\n  4. Repeat steps 2 through 4 until the sentence is correct.\n\n---> The ccow jumpedd ovverr thhe mooon.\n\n  5. Now that the line is correct, go on to lesson 1.4.\n\nNOTE: As you go through this tutor, do not try to memorize, learn by usage.\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t      Lesson 1.4: TEXT EDITING - INSERTION\n\n\n\t\t\t** Press  i  to insert text. **\n\n  1. Move the cursor to the first line below marked --->.\n\n  2. To make the first line the same as the second, move the cursor on top\n     of the character BEFORE which the text is to be inserted.\n\n  3. Press  i  and type in the necessary additions.\n\n  4. As each error is fixed press <ESC> to return to Normal mode.\n     Repeat steps 2 through 4 to correct the sentence.\n\n---> There is text misng this .\n---> There is some text missing from this line.\n\n  5. When you are comfortable inserting text move to lesson 1.5.\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t     Lesson 1.5: TEXT EDITING - APPENDING\n\n\n\t\t\t** Press  A  to append text. **\n\n  1. Move the cursor to the first line below marked --->.\n     It does not matter on what character the cursor is in that line.\n\n  2. Press  A  and type in the necessary additions.\n\n  3. As the text has been appended press <ESC> to return to Normal mode.\n\n  4. Move the cursor to the second line marked ---> and repeat\n     steps 2 and 3 to correct this sentence.\n\n---> There is some text missing from th\n     There is some text missing from this line.\n---> There is also some text miss\n     There is also some text missing here.\n\n  5. When you are comfortable appending text move to lesson 1.6.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t     Lesson 1.6: EDITING A FILE\n\n\t\t    ** Use  :wq  to save a file and exit. **\n\n  !! NOTE: Before executing any of the steps below, read this entire lesson!!\n\n  1. Exit this tutor as you did in lesson 1.2:  :q!\n     Or, if you have access to another terminal, do the following there.\n\n  2. At the shell prompt type this command:  vim tutor <ENTER>\n     'vim' is the command to start the Vim editor, 'tutor' is the name of the\n     file you wish to edit.  Use a file that may be changed.\n\n  3. Insert and delete text as you learned in the previous lessons.\n\n  4. Save the file with changes and exit Vim with:  :wq <ENTER>\n\n  5. If you have quit vimtutor in step 1 restart the vimtutor and move down to\n     the following summary.\n\n  6. After reading the above steps and understanding them: do it.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 1 SUMMARY\n\n\n  1. The cursor is moved using either the arrow keys or the hjkl keys.\n\t h (left)\tj (down)       k (up)\t    l (right)\n\n  2. To start Vim from the shell prompt type:  vim FILENAME <ENTER>\n\n  3. To exit Vim type:\t   <ESC>   :q!\t <ENTER>  to trash all changes.\n\t     OR type:\t   <ESC>   :wq\t <ENTER>  to save the changes.\n\n  4. To delete the character at the cursor type:  x\n\n  5. To insert or append text type:\n\t i   type inserted text   <ESC>\t\tinsert before the cursor\n\t A   type appended text   <ESC>         append after the line\n\nNOTE: Pressing <ESC> will place you in Normal mode or will cancel\n      an unwanted and partially completed command.\n\nNow continue with lesson 2.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tLesson 2.1: DELETION COMMANDS\n\n\n\t\t       ** Type  dw  to delete a word. **\n\n  1. Press  <ESC>  to make sure you are in Normal mode.\n\n  2. Move the cursor to the line below marked --->.\n\n  3. Move the cursor to the beginning of a word that needs to be deleted.\n\n  4. Type   dw\t to make the word disappear.\n\n  NOTE: The letter  d  will appear on the last line of the screen as you type\n\tit.  Vim is waiting for you to type  w .  If you see another character\n\tthan  d  you typed something wrong; press  <ESC>  and start over.\n\n---> There are a some words fun that don't belong paper in this sentence.\n\n  5. Repeat steps 3 and 4 until the sentence is correct and go to lesson 2.2.\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t      Lesson 2.2: MORE DELETION COMMANDS\n\n\n\t   ** Type  d$\tto delete to the end of the line. **\n\n  1. Press  <ESC>  to make sure you are in Normal mode.\n\n  2. Move the cursor to the line below marked --->.\n\n  3. Move the cursor to the end of the correct line (AFTER the first . ).\n\n  4. Type    d$    to delete to the end of the line.\n\n---> Somebody typed the end of this line twice. end of this line twice.\n\n\n  5. Move on to lesson 2.3 to understand what is happening.\n\n\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t     Lesson 2.3: ON OPERATORS AND MOTIONS\n\n\n  Many commands that change text are made from an operator and a motion.\n  The format for a delete command with the  d  delete operator is as follows:\n\n  \td   motion\n\n  Where:\n    d      - is the delete operator.\n    motion - is what the operator will operate on (listed below).\n\n  A short list of motions:\n    w - until the start of the next word, EXCLUDING its first character.\n    e - to the end of the current word, INCLUDING the last character.\n    $ - to the end of the line, INCLUDING the last character.\n\n  Thus typing  de  will delete from the cursor to the end of the word.\n\nNOTE:  Pressing just the motion while in Normal mode without an operator will\n       move the cursor as specified.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t     Lesson 2.4: USING A COUNT FOR A MOTION\n\n\n   ** Typing a number before a motion repeats it that many times. **\n\n  1. Move the cursor to the start of the line below marked --->.\n\n  2. Type  2w  to move the cursor two words forward.\n\n  3. Type  3e  to move the cursor to the end of the third word forward.\n\n  4. Type  0  (zero) to move to the start of the line.\n\n  5. Repeat steps 2 and 3 with different numbers.\n\n---> This is just a line with words you can move around in.\n\n  6. Move on to lesson 2.5.\n\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t     Lesson 2.5: USING A COUNT TO DELETE MORE\n\n\n   ** Typing a number with an operator repeats it that many times. **\n\n  In the combination of the delete operator and a motion mentioned above you\n  insert a count before the motion to delete more:\n\t d   number   motion\n\n  1. Move the cursor to the first UPPER CASE word in the line marked --->.\n\n  2. Type  d2w  to delete the two UPPER CASE words.\n\n  3. Repeat steps 1 and 2 with a different count to delete the consecutive\n     UPPER CASE words with one command.\n\n--->  this ABC DE line FGHI JK LMN OP of words is Q RS TUV cleaned up.\n\n\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t Lesson 2.6: OPERATING ON LINES\n\n\n\t\t   ** Type  dd   to delete a whole line. **\n\n  Due to the frequency of whole line deletion, the designers of Vi decided\n  it would be easier to simply type two d's to delete a line.\n\n  1. Move the cursor to the second line in the phrase below.\n  2. Type  dd  to delete the line.\n  3. Now move to the fourth line.\n  4. Type   2dd   to delete two lines.\n\n--->  1)  Roses are red,\n--->  2)  Mud is fun,\n--->  3)  Violets are blue,\n--->  4)  I have a car,\n--->  5)  Clocks tell time,\n--->  6)  Sugar is sweet\n--->  7)  And so are you.\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t Lesson 2.7: THE UNDO COMMAND\n\n\n   ** Press  u\tto undo the last commands,   U  to fix a whole line. **\n\n  1. Move the cursor to the line below marked ---> and place it on the\n     first error.\n  2. Type  x  to delete the first unwanted character.\n  3. Now type  u  to undo the last command executed.\n  4. This time fix all the errors on the line using the  x  command.\n  5. Now type a capital  U  to return the line to its original state.\n  6. Now type  u  a few times to undo the  U  and preceding commands.\n  7. Now type CTRL-R (keeping CTRL key pressed while hitting R) a few times\n     to redo the commands (undo the undo's).\n\n---> Fiix the errors oon thhis line and reeplace them witth undo.\n\n  8. These are very useful commands.  Now move on to the lesson 2 Summary.\n\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 2 SUMMARY\n\n\n  1. To delete from the cursor up to the next word type:    dw\n  2. To delete from the cursor to the end of a line type:    d$\n  3. To delete a whole line type:    dd\n\n  4. To repeat a motion prepend it with a number:   2w\n  5. The format for a change command is:\n               operator   [number]   motion\n     where:\n       operator - is what to do, such as  d  for delete\n       [number] - is an optional count to repeat the motion\n       motion   - moves over the text to operate on, such as  w (word),\n\t\t  $ (to the end of line), etc.\n\n  6. To move to the start of the line use a zero:  0\n\n  7. To undo previous actions, type: \t       u  (lowercase u)\n     To undo all the changes on a line, type:  U  (capital U)\n     To undo the undo's, type:\t\t       CTRL-R\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t Lesson 3.1: THE PUT COMMAND\n\n\n       ** Type\tp  to put previously deleted text after the cursor. **\n\n  1. Move the cursor to the first line below marked --->.\n\n  2. Type  dd  to delete the line and store it in a Vim register.\n\n  3. Move the cursor to the c) line, ABOVE where the deleted line should go.\n\n  4. Type   p   to put the line below the cursor.\n\n  5. Repeat steps 2 through 4 to put all the lines in correct order.\n\n---> d) Can you learn too?\n---> b) Violets are blue,\n---> c) Intelligence is learned,\n---> a) Roses are red,\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t       Lesson 3.2: THE REPLACE COMMAND\n\n\n       ** Type  rx  to replace the character at the cursor with  x . **\n\n  1. Move the cursor to the first line below marked --->.\n\n  2. Move the cursor so that it is on top of the first error.\n\n  3. Type   r\tand then the character which should be there.\n\n  4. Repeat steps 2 and 3 until the first line is equal to the second one.\n\n--->  Whan this lime was tuoed in, someone presswd some wrojg keys!\n--->  When this line was typed in, someone pressed some wrong keys!\n\n  5. Now move on to lesson 3.3.\n\nNOTE: Remember that you should be learning by doing, not memorization.\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tLesson 3.3: THE CHANGE OPERATOR\n\n\n\t   ** To change until the end of a word, type  ce . **\n\n  1. Move the cursor to the first line below marked --->.\n\n  2. Place the cursor on the  u  in  lubw.\n\n  3. Type  ce  and the correct word (in this case, type  ine ).\n\n  4. Press <ESC> and move to the next character that needs to be changed.\n\n  5. Repeat steps 3 and 4 until the first sentence is the same as the second.\n\n---> This lubw has a few wptfd that mrrf changing usf the change operator.\n---> This line has a few words that need changing using the change operator.\n\nNotice that  ce  deletes the word and places you in Insert mode.\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t       Lesson 3.4: MORE CHANGES USING c\n\n\n     ** The change operator is used with the same motions as delete. **\n\n  1. The change operator works in the same way as delete.  The format is:\n\n         c    [number]   motion\n\n  2. The motions are the same, such as   w (word) and  $ (end of line).\n\n  3. Move the cursor to the first line below marked --->.\n\n  4. Move the cursor to the first error.\n\n  5. Type  c$  and type the rest of the line like the second and press <ESC>.\n\n---> The end of this line needs some help to make it like the second.\n---> The end of this line needs to be corrected using the  c$  command.\n\nNOTE:  You can use the Backspace key to correct mistakes while typing.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 3 SUMMARY\n\n\n  1. To put back text that has just been deleted, type   p .  This puts the\n     deleted text AFTER the cursor (if a line was deleted it will go on the\n     line below the cursor).\n\n  2. To replace the character under the cursor, type   r   and then the\n     character you want to have there.\n\n  3. The change operator allows you to change from the cursor to where the\n     motion takes you.  eg. Type  ce  to change from the cursor to the end of\n     the word,  c$  to change to the end of a line.\n\n  4. The format for change is:\n\n\t c   [number]   motion\n\nNow go on to the next lesson.\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t  Lesson 4.1: CURSOR LOCATION AND FILE STATUS\n\n  ** Type CTRL-G to show your location in the file and the file status.\n     Type  G  to move to a line in the file. **\n\n  NOTE: Read this entire lesson before executing any of the steps!!\n\n  1. Hold down the Ctrl key and press  g .  We call this CTRL-G.\n     A message will appear at the bottom of the page with the filename and the\n     position in the file.  Remember the line number for Step 3.\n\nNOTE:  You may see the cursor position in the lower right corner of the screen\n       This happens when the 'ruler' option is set (see  :help 'ruler'  )\n\n  2. Press  G  to move you to the bottom of the file.\n     Type  gg  to move you to the start of the file.\n\n  3. Type the number of the line you were on and then  G .  This will\n     return you to the line you were on when you first pressed CTRL-G.\n\n  4. If you feel confident to do this, execute steps 1 through 3.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tLesson 4.2: THE SEARCH COMMAND\n\n\n     ** Type  /  followed by a phrase to search for the phrase. **\n\n  1. In Normal mode type the  /  character.  Notice that it and the cursor\n     appear at the bottom of the screen as with the  :\tcommand.\n\n  2. Now type 'errroor' <ENTER>.  This is the word you want to search for.\n\n  3. To search for the same phrase again, simply type  n .\n     To search for the same phrase in the opposite direction, type  N .\n\n  4. To search for a phrase in the backward direction, use  ?  instead of  / .\n\n  5. To go back to where you came from press  CTRL-O  (Keep Ctrl down while\n     pressing the letter o).  Repeat to go back further.  CTRL-I goes forward.\n\n--->  \"errroor\" is not the way to spell error;  errroor is an error.\nNOTE: When the search reaches the end of the file it will continue at the\n      start, unless the 'wrapscan' option has been reset.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t   Lesson 4.3: MATCHING PARENTHESES SEARCH\n\n\n\t      ** Type  %  to find a matching ),], or } . **\n\n  1. Place the cursor on any (, [, or { in the line below marked --->.\n\n  2. Now type the  %  character.\n\n  3. The cursor will move to the matching parenthesis or bracket.\n\n  4. Type  %  to move the cursor to the other matching bracket.\n\n  5. Move the cursor to another (,),[,],{ or } and see what  %  does.\n\n---> This ( is a test line with ('s, ['s ] and {'s } in it. ))\n\n\nNOTE: This is very useful in debugging a program with unmatched parentheses!\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t      Lesson 4.4: THE SUBSTITUTE COMMAND\n\n\n\t** Type  :s/old/new/g  to substitute 'new' for 'old'. **\n\n  1. Move the cursor to the line below marked --->.\n\n  2. Type  :s/thee/the <ENTER>  .  Note that this command only changes the\n     first occurrence of \"thee\" in the line.\n\n  3. Now type  :s/thee/the/g .  Adding the  g  flag means to substitute\n     globally in the line, change all occurrences of \"thee\" in the line.\n\n---> thee best time to see thee flowers is in thee spring.\n\n  4. To change every occurrence of a character string between two lines,\n     type   :#,#s/old/new/g    where #,# are the line numbers of the range\n                               of lines where the substitution is to be done.\n     Type   :%s/old/new/g      to change every occurrence in the whole file.\n     Type   :%s/old/new/gc     to find every occurrence in the whole file,\n     \t\t\t       with a prompt whether to substitute or not.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 4 SUMMARY\n\n\n  1. CTRL-G  displays your location in the file and the file status.\n             G  moves to the end of the file.\n     number  G  moves to that line number.\n            gg  moves to the first line.\n\n  2. Typing  /\tfollowed by a phrase searches FORWARD for the phrase.\n     Typing  ?\tfollowed by a phrase searches BACKWARD for the phrase.\n     After a search type  n  to find the next occurrence in the same direction\n     or  N  to search in the opposite direction.\n     CTRL-O takes you back to older positions, CTRL-I to newer positions.\n\n  3. Typing  %\twhile the cursor is on a (,),[,],{, or } goes to its match.\n\n  4. To substitute new for the first old in a line type    :s/old/new\n     To substitute new for all 'old's on a line type\t   :s/old/new/g\n     To substitute phrases between two line #'s type\t   :#,#s/old/new/g\n     To substitute all occurrences in the file type\t   :%s/old/new/g\n     To ask for confirmation each time add 'c'\t\t   :%s/old/new/gc\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\tLesson 5.1: HOW TO EXECUTE AN EXTERNAL COMMAND\n\n\n   ** Type  :!\tfollowed by an external command to execute that command. **\n\n  1. Type the familiar command\t:  to set the cursor at the bottom of the\n     screen.  This allows you to enter a command-line command.\n\n  2. Now type the  !  (exclamation point) character.  This allows you to\n     execute any external shell command.\n\n  3. As an example type   ls   following the ! and then hit <ENTER>.  This\n     will show you a listing of your directory, just as if you were at the\n     shell prompt.  Or use  :!dir  if ls doesn't work.\n\nNOTE:  It is possible to execute any external command this way, also with\n       arguments.\n\nNOTE:  All  :  commands must be finished by hitting <ENTER>\n       From here on we will not always mention it.\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t      Lesson 5.2: MORE ON WRITING FILES\n\n\n     ** To save the changes made to the text, type  :w FILENAME  **\n\n  1. Type  :!dir  or  :!ls  to get a listing of your directory.\n     You already know you must hit <ENTER> after this.\n\n  2. Choose a filename that does not exist yet, such as TEST.\n\n  3. Now type:\t :w TEST   (where TEST is the filename you chose.)\n\n  4. This saves the whole file (the Vim Tutor) under the name TEST.\n     To verify this, type    :!dir  or  :!ls   again to see your directory.\n\nNOTE: If you were to exit Vim and start it again with  vim TEST , the file\n      would be an exact copy of the tutor when you saved it.\n\n  5. Now remove the file by typing (Windows):   :!del TEST\n\t\t\t\tor (Unix):\t:!rm TEST\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t    Lesson 5.3: SELECTING TEXT TO WRITE\n\n\n\t** To save part of the file, type  v  motion  :w FILENAME **\n\n  1. Move the cursor to this line.\n\n  2. Press  v  and move the cursor to the fifth item below.  Notice that the\n     text is highlighted.\n\n  3. Press the  :  character.  At the bottom of the screen  :'<,'> will appear.\n\n  4. Type  w TEST  , where TEST is a filename that does not exist yet.  Verify\n     that you see  :'<,'>w TEST  before you press <ENTER>.\n\n  5. Vim will write the selected lines to the file TEST.  Use  :!dir  or  :!ls\n     to see it.  Do not remove it yet!  We will use it in the next lesson.\n\nNOTE:  Pressing  v  starts Visual selection.  You can move the cursor around\n       to make the selection bigger or smaller.  Then you can use an operator\n       to do something with the text.  For example,  d  deletes the text.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t   Lesson 5.4: RETRIEVING AND MERGING FILES\n\n\n       ** To insert the contents of a file, type  :r FILENAME  **\n\n  1. Place the cursor just above this line.\n\nNOTE:  After executing Step 2 you will see text from lesson 5.3.  Then move\n       DOWN to see this lesson again.\n\n  2. Now retrieve your TEST file using the command   :r TEST   where TEST is\n     the name of the file you used.\n     The file you retrieve is placed below the cursor line.\n\n  3. To verify that a file was retrieved, cursor back and notice that there\n     are now two copies of lesson 5.3, the original and the file version.\n\nNOTE:  You can also read the output of an external command.  For example,\n       :r !ls  reads the output of the ls command and puts it below the\n       cursor.\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 5 SUMMARY\n\n\n  1.  :!command  executes an external command.\n\n      Some useful examples are:\n\t (Windows)\t  (Unix)\n\t  :!dir\t\t   :!ls\t\t   -  shows a directory listing.\n\t  :!del FILENAME   :!rm FILENAME   -  removes file FILENAME.\n\n  2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.\n\n  3.  v  motion  :w FILENAME  saves the Visually selected lines in file\n      FILENAME.\n\n  4.  :r FILENAME  retrieves disk file FILENAME and puts it below the\n      cursor position.\n\n  5.  :r !dir  reads the output of the dir command and puts it below the\n      cursor position.\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t Lesson 6.1: THE OPEN COMMAND\n\n\n ** Type  o  to open a line below the cursor and place you in Insert mode. **\n\n  1. Move the cursor to the first line below marked --->.\n\n  2. Type the lowercase letter  o  to open up a line BELOW the cursor and place\n     you in Insert mode.\n\n  3. Now type some text and press <ESC> to exit Insert mode.\n\n---> After typing  o  the cursor is placed on the open line in Insert mode.\n\n  4. To open up a line ABOVE the cursor, simply type a capital\tO , rather\n     than a lowercase  o.  Try this on the line below.\n\n---> Open up a line above this by typing O while the cursor is on this line.\n\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tLesson 6.2: THE APPEND COMMAND\n\n\n\t     ** Type  a  to insert text AFTER the cursor. **\n\n  1. Move the cursor to the start of the first line below marked --->.\n\n  2. Press  e  until the cursor is on the end of  li .\n\n  3. Type an  a  (lowercase) to append text AFTER the cursor.\n\n  4. Complete the word like the line below it.  Press <ESC> to exit Insert\n     mode.\n\n  5. Use  e  to move to the next incomplete word and repeat steps 3 and 4.\n\n---> This li will allow you to pract appendi text to a line.\n---> This line will allow you to practice appending text to a line.\n\nNOTE:  a, i and A all go to the same Insert mode, the only difference is where\n       the characters are inserted.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t    Lesson 6.3: ANOTHER WAY TO REPLACE\n\n\n      ** Type a capital  R  to replace more than one character. **\n\n  1. Move the cursor to the first line below marked --->.  Move the cursor to\n     the beginning of the first  xxx .\n\n  2. Now press  R  and type the number below it in the second line, so that it\n     replaces the xxx .\n\n  3. Press <ESC> to leave Replace mode.  Notice that the rest of the line\n     remains unmodified.\n\n  4. Repeat the steps to replace the remaining xxx.\n\n---> Adding 123 to xxx gives you xxx.\n---> Adding 123 to 456 gives you 579.\n\nNOTE:  Replace mode is like Insert mode, but every typed character deletes an\n       existing character.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tLesson 6.4: COPY AND PASTE TEXT\n\n\n\t  ** Use the  y  operator to copy text and  p  to paste it **\n\n  1. Move to the line below marked ---> and place the cursor after \"a)\".\n\n  2. Start Visual mode with  v  and move the cursor to just before \"first\".\n\n  3. Type  y  to yank (copy) the highlighted text.\n\n  4. Move the cursor to the end of the next line:  j$\n\n  5. Type  p  to put (paste) the text.  Then type:  a second <ESC> .\n\n  6. Use Visual mode to select \" item.\", yank it with  y , move to the end of\n     the next line with  j$  and put the text there with  p .\n\n--->  a) this is the first item.\n      b)\n\n  NOTE: You can also use  y  as an operator;  yw  yanks one word.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t    Lesson 6.5: SET OPTION\n\n\n\t  ** Set an option so a search or substitute ignores case **\n\n  1. Search for 'ignore' by entering:  /ignore <ENTER>\n     Repeat several times by pressing  n .\n\n  2. Set the 'ic' (Ignore case) option by entering:   :set ic\n\n  3. Now search for 'ignore' again by pressing  n\n     Notice that Ignore and IGNORE are now also found.\n\n  4. Set the 'hlsearch' and 'incsearch' options:  :set hls is\n\n  5. Now type the search command again and see what happens:  /ignore <ENTER>\n\n  6. To disable ignoring case enter:  :set noic\n\nNOTE:  To remove the highlighting of matches enter:   :nohlsearch\nNOTE:  If you want to ignore case for just one search command, use  \\c\n       in the phrase:  /ignore\\c <ENTER>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 6 SUMMARY\n\n  1. Type  o  to open a line BELOW the cursor and start Insert mode.\n     Type  O  to open a line ABOVE the cursor.\n\n  2. Type  a  to insert text AFTER the cursor.\n     Type  A  to insert text after the end of the line.\n\n  3. The  e  command moves to the end of a word.\n\n  4. The  y  operator yanks (copies) text,  p  puts (pastes) it.\n\n  5. Typing a capital  R  enters Replace mode until  <ESC>  is pressed.\n\n  6. Typing \":set xxx\" sets the option \"xxx\".  Some options are:\n  \t'ic' 'ignorecase'\tignore upper/lower case when searching\n\t'is' 'incsearch'\tshow partial matches for a search phrase\n\t'hls' 'hlsearch'\thighlight all matching phrases\n     You can either use the long or the short option name.\n\n  7. Prepend \"no\" to switch an option off:   :set noic\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t       Lesson 7.1: GETTING HELP\n\n\n\t\t      ** Use the on-line help system **\n\n  Vim has a comprehensive on-line help system.  To get started, try one of\n  these three:\n\t- press the <HELP> key (if you have one)\n\t- press the <F1> key (if you have one)\n\t- type   :help <ENTER>\n\n  Read the text in the help window to find out how the help works.\n  Type  CTRL-W CTRL-W   to jump from one window to another.\n  Type    :q <ENTER>    to close the help window.\n\n  You can find help on just about any subject, by giving an argument to the\n  \":help\" command.  Try these (don't forget pressing <ENTER>):\n\n\t:help w\n\t:help c_CTRL-D\n\t:help insert-index\n\t:help user-manual\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t      Lesson 7.2: CREATE A STARTUP SCRIPT\n\n\n\t\t\t  ** Enable Vim features **\n\n  Vim has many more features than Vi, but most of them are disabled by\n  default.  To start using more features you have to create a \"vimrc\" file.\n\n  1. Start editing the \"vimrc\" file.  This depends on your system:\n\t:e ~/.vimrc\t\tfor Unix\n\t:e $VIM/_vimrc\t\tfor Windows\n\n  2. Now read the example \"vimrc\" file contents:\n\t:r $VIMRUNTIME/vimrc_example.vim\n\n  3. Write the file with:\n\t:w\n\n  The next time you start Vim it will use syntax highlighting.\n  You can add all your preferred settings to this \"vimrc\" file.\n  For more information type  :help vimrc-intro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t     Lesson 7.3: COMPLETION\n\n\n\t      ** Command line completion with CTRL-D and <TAB> **\n\n  1. Make sure Vim is not in compatible mode:  :set nocp\n\n  2. Look what files exist in the directory:  :!ls   or  :!dir\n\n  3. Type the start of a command:  :e\n\n  4. Press  CTRL-D  and Vim will show a list of commands that start with \"e\".\n\n  5. Type  d<TAB>  and Vim will complete the command name to \":edit\".\n\n  6. Now add a space and the start of an existing file name:  :edit FIL\n\n  7. Press <TAB>.  Vim will complete the name (if it is unique).\n\nNOTE:  Completion works for many commands.  Just try pressing CTRL-D and\n       <TAB>.  It is especially useful for  :help .\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t       Lesson 7 SUMMARY\n\n\n  1. Type  :help  or press <F1> or <HELP>  to open a help window.\n\n  2. Type  :help cmd  to find help on  cmd .\n\n  3. Type  CTRL-W CTRL-W  to jump to another window.\n\n  4. Type  :q  to close the help window.\n\n  5. Create a vimrc startup script to keep your preferred settings.\n\n  6. When typing a  :  command, press CTRL-D to see possible completions.\n     Press <TAB> to use one completion.\n\n\n\n\n\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  This concludes the Vim Tutor.  It was intended to give a brief overview of\n  the Vim editor, just enough to allow you to use the editor fairly easily.\n  It is far from complete as Vim has many many more commands.  Read the user\n  manual next: \":help user-manual\".\n\n  For further reading and studying, this book is recommended:\n\tVim - Vi Improved - by Steve Oualline\n\tPublisher: New Riders\n  The first book completely dedicated to Vim.  Especially useful for beginners.\n  There are many examples and pictures.\n  See http://iccf-holland.org/click5.html\n\n  This book is older and more about Vi than Vim, but also recommended:\n\tLearning the Vi Editor - by Linda Lamb\n\tPublisher: O'Reilly & Associates Inc.\n  It is a good book to get to know almost anything you want to do with Vi.\n  The sixth edition also includes information on Vim.\n\n  This tutorial was written by Michael C. Pierce and Robert K. Ware,\n  Colorado School of Mines using ideas supplied by Charles Smith,\n  Colorado State University.  E-mail: bware@mines.colorado.edu.\n\n  Modified for Vim by Bram Moolenaar.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"path":"/计算机与编程/FrontEnd/游戏开发/PhaserJS/","rawBody":"游戏开发之 Phaser 创建游戏和游戏场景 const game = new Phaser.Game(width, height, render, parent, state, transparent, antialias, physicsConfig) 游戏构造器参数说明 param desc width 游戏宽度 height 游戏高度 render 渲染方式（Phaser.CANVAS, Phaser.WEBGL, Phaser.AUTO） parent 游戏容器 state 游戏创建后默认运行的场景 transparent 画布背景是否透明 antialias 是否开启抗锯齿 physicsConfig 物理引擎配置对象 游戏对象属性和方法说明 prop method desc game.pause 是否暂停游戏 game.add 游戏对象工厂 game.camera 游戏中摄像机对象 game.input 游戏中的用户交互事件 game.load 游戏资源加载模块 game.scale 游戏缩放模块 game.sound 游戏声音模块 game.stage 游戏舞台对象 game.world 游戏世界对象 game.particles 游戏粒子系统 game.physics 游戏物理系统 game.state 游戏场景管理对象 场景的概念和作用 场景指的是游戏中不同的界面或内容，比如游戏菜单界面为一个场景，真正玩游戏的界面为一个场景，不同的关卡又是不同的场景等等。场景能把一个复杂的游戏分成许多小块，从而简化游戏的开发。 场景在 Pharse 中叫 State，这个场景的概念十分广泛。例如一个只是执行某些准备工作但没有实质画面显示出来的 State，我们也会把它叫做一个场景。一个 Phaser 开发的游戏正是由众多的场景组成。 场景对象 创建场景对象 Phaser.State 的两种形式： 对象形式 {\n  init() {},\n  preload() {},\n  create() {},\n  update() {},\n  render() {}\n} 函数形式 function() {\n  this.init = () => {};\n  this.preload = () => {};\n  this.create = () => {};\n  this.update = () => {};\n  this.render = () => {};\n} preload 、 create 、 update 、 render  至少要存在一个 场景中的方法 method desc init() 一些场景的初始化代码 preload() 用来加载游戏资源 create() 创建游戏显示对象或注册事件等 update() 在游戏的每一帧都会调用，用来书写需要在每一帧都执行的代码 render() 在游戏的每一个渲染周期都会调用，用来做一些自定义的渲染工作 默认情况下，游戏中的一帧就是一个渲染周期，自定义的渲染图形会在其它图形之上 场景中的方法执行顺序 init() -> preload() -> create() -> update() -> render() 场景的管理 Phaser.StateManager 场景管理对象 game.state 可以引用当前游戏的 Phaser.StateManager 对象 method param desc game.state.add name: 场景名 / state: 场景对象或函数 添加场景 game.state.start name: 场景名 启动场景 示例： const game = new Phaser.Game();\ngame.state.add(name, state);  // 添加场景\ngame.state.start(name); // 启动场景 当运行一个新的场景时，前面的场景就停止了。同一时间，只能运行一个场景。 游戏资源的加载 图片、声音、其它类型的文件资源 游戏资源加载方法 game.load 可以用来引用当前游戏的 Phaser.Loader 对象 method param desc game.load.image key: 唯一资源名 / url: 文件地址 / overwrite 加载图片 game.load.spritesheet key / url / frameWidth: 每一帧的宽度 / frameHeight: 每一帧的高度 加载图片集 game.load.atlas key / textureURL / atlasUTL: 描述图片中各个小图片的大小位置信息 / atlasData: 和第三个参数作用相同 加载图片集，可以加载由多张大小不相同，位置不规范的图片组成的图片 game.load.audio key / urls 加载声音 game.load.audiosprite key / urls / jsonURL / jsonData / autoDecode 加载声音集，由多个音频分段组合成的音频文件 game.load.text key / url 加载文本文件 game.load.binary key / url 加载二进制文件 加载事件的处理 game.load.onFileComplete 返回一个 Phaser.Signal 事件对象，可以在它上面注册事件 const game = new Phaser.Game();\n// 单个资源加载完成事件\ngame.load.onFileComplete.add(() => {\n  // 此时可以使用 game.load.progress 属性来获取当前资源的加载进度\n  const progress = game.load.progress;  // 1 表示 1%；100 表示 100%；\n});\n// 所有资源加载完成事件\ngame.load.onLoadComplete.add(() => {\n  // ...\n}); 舞台、世界和摄像机对象 舞台 Phaser.Stage 舞台对象 可以使用 game.stage 来引用舞台对象 示例: const game = new Phaser.Game();\n// 设置舞台背景颜色\ngame.stage.setBackgroundColor(backgroundColor); 世界 Phaser.World 世界对象 可以使用 game.world 来引用世界对象 示例: const game = new Phaser.Game();\n// 设置世界的边界大小\ngame.world.setBounds(x, y, width, height); 摄像机 Phaser.Camera 摄像机对象 可以使用 game.camera 来引用摄像机对象 示例: const game = new Phaser.Game();\n// 改变摄像机在 X 轴上的位置\ngame.camera.x = 100;\n// 改变摄像机在 Y 轴上的位置\ngame.camera.y = 100;\n// 让摄像机定位到 displayObject 物体上\ngame.camera.focusOn(displayObject);\n// 让摄像机定位到 x, y 这个坐标上\ngame.camera.focusOnXY(x, y);\n// 让摄像机跟随目标物体 target\ngame.camera.follow(target); 游戏的缩放控制 Phaser.ScaleManager 缩放管理对象 通过对游戏缩放，从而达到屏幕适配的目的 可以使用 game.scale 来引用当前游戏的 Phaser.ScaleManager 对象 主要缩放模式 mode desc EXACT_FIT 缩放到父元素的大小，可能会被拉伸 SHOW_ALL 保持长宽比缩放到可用的最大空间 USER_SCALE 自定义缩放 可以使用 scaleMode 属性来改变缩放模式 game.scale.scaleMode = Phaser.ScaleManager.EXACT_FIT; 设置画布在父容器中的位置 水平居中 game.scale.pageAlignHorizontally = true; 垂直居中 game.scale.pageAlignVertically = true; 显示对象 显示对象概述 显示对象，就是能在舞台上显示的对象，也就是我们在游戏中所能看得见的东西。对于 Phaser 来说，显示对象就是需要在画布中渲染出来的对象。 Phaser 中的游戏画面是由各种显示对象所组成的。 显示对象种类 图片 精灵 图片 瓦片精灵 按钮 瓦片地图 文字 粒子 显示对象列表 显示对象列表是一个层级结构，在 Phaser 中看到的显示对象都在显示列表中，分布在不同的层里 Phaser 运行机制 图片、图形和按钮 精灵 phaser 中的文字 game.add.text(x, y, text, style, group) 文字的样式 key desc val fill 填充颜色 '#fff' font 字体 '微软雅黑' fontSize 文字大小 60 fongWeight 文字粗细 'normal' style.backgroundColor 文字背景颜色 '#f0f' stoke 描边颜色 '#ff0' stokeThickness 描边厚度 10 wordWrap 是否换行 true wordWrapWidth 换行宽度 150 特殊字体的实现 在 css 中引入自定义字体，并激活自定义字体（设置隐藏文字为自定义字体），然后再需要的地方使用字体 webFont BitmapText RetroFont phaser 中的组 组的基本概念 Phaser.Group 组是一个虚拟的、无形的显示对象容器，用来把多个显示对象组合在一起使之形成一个整体。同时，组又可以作为其它显示对象或组的子元素。Phaser.World 世界对象是显示对象列表中最顶层的一个组。 组的作用 组合多个显示对象，便于整体操作 提供了多种便捷方法对组内的元素进行管理 为显示对象的回收利用机制提供支持 组的创建 game.add.group(parent?, name?, addToStage?, enableBody?, physicsBodyType?) 给组添加子元素的几种方法 创建图片或精灵等显示对象时指定组 group.add() 方法直接添加 group.create() 方法创建子元素并添加进组 javascript const group = game.add.group();\n// 第一种\nconst cat = game.add.image(0, 0, 'cat', '', group);\n// 第二种\ngroup.add(cat);\n// 第三种\ngroup.create(x, y, key, frame?, exists?); phaser 中的动画 动画种类 Phaser.Tween 补间动画（过渡动画） Phaser.Animation 逐帧动画 补间动画 创建 game.add.tween(object) 使用 const tween = game.add.tween(object);\n// 从当前状态过渡到 to 制定的状态，yoyo 是否进行反向动画\ntween.to(properties, duration, ease, autoStart, delay, repeat, yoyo);\n// 从 from 制定的状态到对象当前的状态\ntween.form(properties, duration, ease, autoStart, delay, repeat, yoyo);\n// 开始\ntween.start();\n// 停止\ntween.stop();\n// 暂停\ntween.pause();\n// 恢复\ntween.resume(); 逐帧动画 Phaser.Animation 称之为逐帧动画，因为它的每一帧都需要手动指定，而不像补间动画那样只需制定开始和结束的那两个关键帧。同时，Animation 逐帧动画是通过图片来实现的，我们可以给它的每一帧都制定一张图片，然后这些帧连续起来播放，就形成了一个动画。 我们可以通过精灵对象的 animations 属性来使用动画，而且这个精灵对象使用的贴图必须是 spritesheet 或者 atlas 加载过来的。因为只有这两种资源才包含多个帧。 javascript const sprite = game.add.sprite();\n// 定义动画\nsprite.animations.add(name, frames);\n// 播放动画 frameRate 帧播放的速度\nsprite.animations.paly(name, frameRate, loop, killOnComplete);\n// 停止动画\nsprite.animations.stop(name); Altas 的制作和使用 制作工具 Texture Packer Shoebox Phaser 中的粒子系统 在 Phaser 中，粒子扩展子 Phaser.Sprite 对象，它们是由 Phaser 中的粒子发射器所发射出来的。 目前 Phaser 内置的粒子发射器为 Phaser.Particles.Arcade.Emitter，它是以 Phaser 中的 Arcade 物理引擎为基础的一种粒子发射器。通过粒子发射器，能够自由的发射各种粒子，并且控制粒子的形态，包括粒子的种类、数量、速度、方向、生存时间等等，甚至可以在粒子上进行物理碰撞检测。因此只要掌握好了粒子发射器的使用方法，就能作出很多炫目的粒子效果。 粒子发射器的创建 game.add.emitter(x?, y?, maxParticles?) key desc x 粒子发射器的横坐标 y 粒子发射器的纵坐标 maxParticles 粒子发射器所能产生的最大数量粒子 粒子的创建 javascript const emitter = game.add.emitter();\nemitter.makeParticles(keys, frames?, quantity?, collide?, collideWorldBounds); key desc keys 资源加载中的名称 frames 帧名 quantity 要产生的粒子数 collide 粒子间的是否进行碰撞检测 collideWorldBounds 粒子是否与边界进行碰撞检测 粒子的控制 粒子的发射 emitter.start(explode?, lifespan?, frequency?, quantity? forceQuantity?) key desc explode 是否将粒子一次发射出去 lifespan 粒子生存时间 frequency 粒子发射间隔 quantity 需要发射的粒子数 forceQuantity ？？？ emitter.flow(liftspan?, frequency?, quantity?, total?, immediate?) key desc lifespan 粒子生存时间 frequency 粒子发射间隔 quantity 每次发射的粒子数 total -1 为无限多粒子 immediate ？？？ 速度控制 emitter.setXSpeed(min?, max?) emitter.setYSpeed(min?, max?) 设置的速度介于  min  和  max  之间 透明度控制 emitter.setAlpha(min?, max?, rate?, ease?) 角度控制 emitter.setRotation(min?, max?) 缩放控制 emitter.setScale(minX?, maxX?, minY?, maxY? rate?) 结合物理引擎的使用 javascript this.create = function () {\n  emitter.gravity = 600;\n  emitter.bounce.y = 0.8;\n};\n\nthis.update = function () {\n  game.physics.arcade.collide(emitter);\n}; 瓦片地图 瓦片地图的概念 瓦片地图是指可以把一张复杂的地图分解成一些可重复使用的小图块（也被称作瓦片），或者反过来说就是用一些可重复使用的瓦片所构成的小地图叫做瓦片地图。 使用 Tiled 创建瓦片地图 Tiled 软件介绍 Tiled 是国外一款免费的瓦片地图编辑器软件，它功能强大，使用简单，很多游戏引擎都能使用 Tiled 制作的瓦片地图。 Tiled 官网 Tiled 的使用  极客学院 添加瓦片图集 新建图层 构建地图 导出地图 Phaser 中瓦片地图的使用 瓦片地图数据的加载 game.load.tilemap(key, url?, data? , format?) 瓦片地图的创建 game.add.tilemap(key?, tileWidth?, tileHeight?, width?, height?) 瓦片地图的显示 const tilemap = game.add.tilemap();\n// 加载存放瓦片的图片\ntilemap.addTilesetImage(tileset, key?);\n// 创建层\ntilemap.createLayer(layer); 动态修改瓦片地图 获取指定位置的瓦片:  const tile = map.getTile(0, 24) 在指定的位置设置指定的瓦片:  map.putTile(tile, 0, 0) 在指定区域填充指定的瓦片:  map.fill(12, 0, 0, 20, 20) 瓦片的复制和粘贴:  map.paste(0, 0, tiles) 在指定区域内用一种瓦片替换另一种瓦片:  map.replace(1, 12, 0, 0, 10, 10) 瓦片地图的碰撞检测 tilemap.setCollision(indexes, collides?, layer?)\n\ntilemap.setCollisionBetween(start, stop, collides?, layer?) Phaser 中的事件系统及用户交互 Phaser 中的事件系统 在 Phaser 中，有一套内置的事件系统，这个事件系统是基于观察者模式或者说是发布/订阅模式来设计的。 Phaser 中的事件系统与我们在网页开发中常常接触到的事件系统非常类似，只不过 Phaser 中的事件系统功能更加简单，它只负责事件的创建、分发、监听和注销。Phaser 中的事件系统是 Phaser 中各种内部或外部的游戏对象或组件进行通信的桥梁，通过事件系统，我们能很容易的写出可读性以及可维护性都更强的游戏代码。 Phaser.Singal 对象介绍 Phaser 中的事件系统是由 Phaser.Singal 对象来实现的。 每一个 Singal 对象都代表这一类事件，当这个事件发生时，所有监听了这个 Singal 对象的事件监听器都会收到事件发生的信号，从而可以执行相应的动作。 正如 singal 的所代表的字面意思一样， Singal 对象就像一个信号发射器，当有需要时就把信号发射出去。我们需要多少种不同信号，就可以创建多少个 Singal 对象。同时，我们可以控制谁需要接收这个信号，从而在游戏对象之间建立起一种低耦合的通信机制。 Phaser.Singal 对象的使用 Singal 对象的创建 const signal = new Phaser.Signal() 添加事件监听器 signal.add(listener, listenerContext?, priority?, args?) signal.addOnce(listener, listenerContext?, priority?, args?) 移除事件监听器 signal.remove(listener) signal.removeAll() 分发事件 signal.dispatch(params?) 销毁 Singal 对象 signal.dispose() 一些重要的系统事件 游戏事件 game.onBlur - 游戏失去焦点 game.onFocus - 游戏得到焦点 game.onPause - 游戏暂停 game.onResume - 游戏恢复 游戏缩放事件 game.scale.onFullScreenChange - 当进入或退出全屏时 game.scale.onOrientationChange - 当设备的横竖屏切换时 game.scale.onSizeChange - 当游戏尺寸改变时 资源加载中的事件 game.load.onFileComplete - 当一个文件加载完成时 game.load.onFileError - 当一个文件加载失败时 game.load.onFileStart - 当一个文件开始加载时 game.load.onLoadComplete - 当所有资源加载完成时 tween 补间动画事件 tween.onStart - 动画开始时 tween.onComplete - 动画完成时 tween.onLoop - 动画循环时 tween.onRepeat - 动画重复时 animation 关键帧动画事件 animation.onStart - 动画开始时 animation.onComplete - 动画完成时 animation.onLoop - 动画循环时 animation.onUpdate - 动画的帧变化时 Phaser 中的用户交互管理对象 Phaser.Input 对象 Phaser.Input 对象是 Phaser 中的用户交互事件进行一个集中管理，在它下面还有更具体的对象来负责管理不同类型的交互事件。 const game = new Phaser.Game();\n\n// 鼠标按下或手指触摸事件\ngame.input.onDown\n// 鼠标抬起或手指离开事件\ngame.input.onUp\n// 鼠标点击或手指轻击事件\ngame.input.onTap\n// 鼠标长按或手指触摸事件\ngame.input.onHold\n// 添加鼠标或手指移动事件侦听器\ngame.input.addMoveCallback(callback, context)\n// 删除鼠标或手指移动事件侦听器\ngame.input.deleteMoveCallback(callback, context) Phaser.Pointer 对象 Phaser.Pointer 代表的是一个指针对象，这个指针可以是鼠标、手指或其它输入设备。在触摸设备上，一个 Pointer 对象代表一个手指，所以可能会有很多个 Pointer 对象，也就是多点触摸。在 PC 上，Pointer 对象代表的是鼠标。 利用 Pointer 对象，我们就能兼容不同设备上的指针输入事件。 const game = new Phaser.Game();\n\n// 获取最近一次激活的 Pointer 对象\nconst pointer = game.input.activePointer;\n\n// 指针事件发生时 x, y 坐标\npointer.clientX;\npointer.clientY;\n\n// 用来判断指针是否按下/释放状态\npointer.isDown;\npointer.isUp; 鼠标对象 虽然 Phaser.Pointer 对象已经能够处理大部分的鼠标事件了，但是在依赖鼠标的桌面游戏中，还是有些独特的需求要用到鼠标对象以及专门为鼠标定制的 Pointer 对象。 const game = new Phaser.Game();\n\n// 获取鼠标对象\nconst mouse = game.input.mouse;\n// 获取为鼠标定制的 Pointer 对象\nconst mousePointer = game.input.mousePointer;\n\n// 设置鼠标滚轮事件的回调函数\nmouse.mouseWheelCallback\n// 鼠标滚轮的滚动方向，1 为向上，-1 为向下\nmouse.wheelDelta\n\n// 鼠标左键对象\nmousePointer.leftButton\n// 鼠标中键对象\nmousePointer.middleButton\n// 鼠标右键对象\nmousePointer.rightButton Phaser.Keyboard 键盘对象 const game = new Phaser.Game();\n\n// 获取键盘对象\nconst keyboard = game.input.keyboard;\n\n// 添加按键回调函数\nkeyboard.addCallbacks(context, onDown, onUp, onPress)\n// 创建一个键对象，返回 Phaser.Key 对象\nkeyboard.addKey(keycode)\n// 创建一个包含上下左右方向键的对象\nkeyboard.createCursorKeys() Phaser.Key 对象 const game = new Phaser.Game();\nconst keyboard = game.input.keyboard;\n\n// 使用键盘对象添加一个键，keycode 参数为键的代码\nconst key = keyboard.addKey(keycode);\n\n// 用来判断该键是否处于按下状态\nkey.isDown\n// 用来判断该键是否处于释放状态\nkey.isUp\n// 键按下时的 Signal 对象\nkey.onDown\n// 键释放时的 Signal 对象\nkey.onUp\n\n// 判断 alt 键是否被同时按下\nkey.altKey\n// 判断 ctrl 键是否被同时按下\nkey.ctrlKey\n// 判断 shift 键见否被同时按下\nkey.shiftKey 特定游戏对象的交互事件处理 Phaser.Events 对象 Phaser 中除了有统一的、全局的，例如 Pointer 等交互事件处理对象外，还有特定游戏对象上的交互事件处理对象，这就是 Phaser.Events 对象。 每个 Phaser.Events 对象都有一个宿主，它处理的都是发生在这个宿主上或是跟这个宿主相关的事件。 需要注意的是 Phaser.Events 对象处理的并不全是用户交互事件，也有可能是一些发生在这个宿主的系统事件。 const game = new Phaser.Game();\nconst sprite = game.add.sprite();\n\n// 开启输入事件\nsprite.inputEnabled = true;\n// 获取该游戏对象的 Phaser.Events 对象\nconst events = sprite.events;\n\n// 当有指针在该对象上按下时的事件（Signal）\nevents.onInputDown\n// 当有指针在该对象上释放时的事件（Signal）\nevents.onInputUp\n// 当有指针进入该对象上时的事件（Signal）\nevents.onInputOver\n// 当有指针离开该对象上时的事件（Signal）\nevents.onInputOut Phaser.InputHandler 对象 除了有 Phaser.Events 对象外，在某一个特定的游戏对象上，还有一个 Phaser.InputHandler 对象。 Phaser.InputHandler 对象封装了一些与它的宿主相关的用户交互方法以及一些非常有用的用户输入属性。 const game = new Phaser.Game();\nconst sprite = game.add.sprite();\n\n// 开启输入事件\nsprite.inputEnabled = true;\n// 获取该游戏对象的 Phaser.InputHandler 对象\nconst inputHandler = sprite.input;\n\n// 使之能够拖动\ninputHandler.enableDrag();\n// 禁用拖动\ninputHandler.disableDrag();\n\n// 判断指针是否在该对象之内\ninputHandler.pointerOver();\n// 判断指针是否在该对象之外\ninputHandler.pointerOut();\n// 当指针在该对象内时相对于该对象的 x 坐标\ninputHandler.pointerX\n// 当指针在该对象内时相对于该对象的 y 坐标\ninputHandler.pointerY\n\n// 当设置该值为 true 时，在单机或者拖动该对象时它会自动位于显示列表的最上方\ninputHandler.bringToTop Phaser 中音频资源的处理 Phaser 中音频资源概述 Phaser 中支持两种音频播放模式，分别为 webAudio 和 HTML5 Audio，Phaser 会自动检测运行环境，如果当前环境支持 webAudio，则会优先使用 webAudio 模式，如果不支持则会回退到 HTML5 Audio 模式，以此达到最大的浏览器兼容性。 各种音频格式浏览器支持情况 Browser MP3 Wav Ogg Internet Explorer YES NO NO Chrome YES YES YES Firefox YES YES YES Safari YES YES NO Opear YES YES YES Phaser.SoundManager 对象 获取 SoundManager 对象 cosnt soundManager = game.sound Phaser.Sound 对象 game.add.audio() 方法返回的就是一个 Phaser.Sound 对象 const sound = game.add.audio(key, volume?, loop?) Phaser 中音频资源加载 加载单一音频资源 game.load.audio(key, urls, autoDecode?) urls 有两种形式：a.字符串形式；b.数组形式； 加载 audio sprite 资源 game.load.audiosprite(key, urls, jsonURL?, jsonData?, autoDecode?) audio sprite 数据生成 工具 Phaser 中音频资源使用和管理 声音播放控制 const game = new Phaser.Game();\nconst sound = game.add.audio('foo');\n\n// 播放声音\nsound.play(marker?, position?, volume?, loop?, forceRestart?);\n\n// 暂停播放\nsound.pause();\n// 恢复播放\nsound.resume();\n// 停止播放\nsound.stop(); param desc marker 标注名称 position 播放位置 volume 音量（0 - 1） loop 循环播放 forceRestart 强制重新播放 声音分段标注 const game = new Phaser.Game();\nconst sound = game.add.sound('foo');\n\n// 标注声音\nsound.addMarker(name, start, duration, volume?, loop?);\n// 播放标注声音\nsound.paly(name);\n// 移除标注\nsound.removeMarker(name); 声音的淡入和淡出 const game = new Phaser.Game();\nconst sound = game.add.sound('foo');\n\n// 淡入\nsound.fadeIn(duration?, loop?, marker?);\n// 淡出\nsound.fadeOut(duration?);\n// 自定义\nsound.fadeTo(duration?, volume?); 声音事件 const game = new Phaser.Game();\nconst sound = game.add.sound('foo');\n\n// 以下为声音相关的 Singal 对象\n\n// 声音开始播放时\nsound.onPlay\n// 声音暂停时\nsound.onPause\n// 声音恢复播放时\nsound.onResume\n// 声音停止时\nsound.onStop\n// 声音淡入淡出完成\nsound.onFadeComplete\n// 标注声音播放完成时\nsound.onMarkerComplete\n// 循环时\nsound.onLoop\n// 静音时\nsound.onMute Phaser 中的物理引擎 物理引擎概述 物理引擎主要用来模拟真实世界中各种物体的运动规律，它通过为刚性物体赋予真实的物理属性来计算物体的位置、旋转以及发生碰撞后的反应等等，物理引擎的使用可以让游戏中的物体呈现出更加真实的效果。 Phaser 内置的物理引擎 Arcade Physics P2 Physics Ninja BOX2D Arcade 引擎 Arcade 引擎是 Phaser 中最简单也是最常用的一个物理引擎，它给我们提供了一些基本的物理属性和方法： 速度以及加速度 角速度都以及加速度 质量、重力、摩擦力和弹跳 碰撞检测 P2 引擎 P2 引擎是一款比较高级的物理引擎，用来制作一些相对复杂的物理效果，其 项目地址 。相比与 Arcade 引擎，P2 有如下特征： 支持更多形状的碰撞检测 支持多个物体之间的约束行为 支持物体的材质设置 Arcade 物理引擎的基本用法 开始物理引擎 const game = new Phaser.Game();\n// 开启物理引擎\ngame.physics.startSystem(Phaser.Physics.ARCADE); 在游戏精灵上开启物理引擎 const game = new Phaser.Game();\n// 开启物理引擎\ngame.physics.startSystem(Phaser.Physics.ARCADE);\n\nconst sprite = game.add.sprite();\n// 在该 sprite 上启用 arcade 物理引擎\n// 精灵对象可以使用物理引擎，图片对象不能使用物理引擎\ngame.physics.enable(sprite, Phaser.Physics.ARCADE); 在组中启用物理引擎 const game = new Phaser.Game();\n// 开启物理引擎\ngame.physics.startSystem(Phaser.Physics.ARCADE);\n// 创建一个组\nconst group = game.add.group();\n// 为组中的每一个子元素启用物理引擎\ngroup.enableBody = true;\n// 制定要启用的物理引擎\ngroup.physicsBodyType = Phaser.Physics.ARCADE;\n// 之后添加到组中的子元素就会自动启用所制定的物理引擎了\n// ... 精灵的 body 对象 const game = new Phaser.Game();\nconst sprite = game.add.sprite();\ngame.physics.enable(sprite, Phaser.Physics.ARCADE);\n// 当在一个精灵上启用了物理引擎后，该精灵便会拥有一个 body 属性\n// 物理属性都是附加在精灵的 boyd 对象上的\n// sprite.body...; 设置速度 //设置速度使用 velocity 属性\n\nsprite.body.velocity = new Phaser.Point(100, 100);\n\n// sprite.body.velocity.set(x, y)\nsprite.body.velocity.set(100);\n\nsprite.body.velocity.x = 100;\nsprite.body.velocity.y = 100; 设置加速度 // 设置加速度使用 acceleration 属性\n\nsprite.body.acceleration = new Phaser.Point(100, 100);\n\nsprite.body.acceleration.set(100);\n\nsprite.body.acceleration.x = 100;\nsprite.body.acceleration.y = 100; 设置角速度 // 设置角速度使用 angularVelocity 属性\n\nsprite.body.angularVelocity = 90;\n\n// 设置角速度的加速度使用 angularAcceleration 属性\n\nsprite.body.angularAcceleration = 45; 设置阻力 // 设置阻力使用 drag 属性\n\nsprite.body.drag = new Phaser.Point(100, 100);\n\nsprite.body.drag.set(100);\n\nsprite.body.drag.x = 100;\nsprite.body.drag.y = 100; 设置重力 // 设置重力使用 gravity 属性\n\nsprite.body.gravity = new Phaser.Point(100, 100);\n\nsprite.body.gravity.set(100);\n\nsprite.body.gravity.x = 100;\nsprite.body.gravity.y = 100; 设置弹跳 // 设置弹跳使用 bounce 属性\n\nsprite.body.bounce = new Phaser.Point(0.5, 0.5);\n\nsprite.body.bounce.set(0.5);\n\nsprite.body.bounce.x = 0.5;\nsprite.body.bounce.y = 0.5; 其它重要的属性和方法 // 设置与其它物体接触时的摩擦力\nsprite.body.friction.set(100);\n// 设置角度\nsprite.body.rotation = Math.PI;\n// 设置该物体是固定的（true）还是不固定的（false）\nsprite.body.immovable = true;\n// 设置物体的相对质量，默认为 1\nsprite.body.mass = 10;\n// 设置最大速度\nsprite.body.maxVelocity.set(100, 200);\n// 设置最大角速度\nsprite.body.maxAngular = 1000;\n\n// 设置 body 范围大小，改变 body 对象的作用范围\nsprite.body.setSize(width, height, offsetX, offsetY);\n// 重置所有的物理属性\nsprite.body.rest(x, y); Arcade 引擎提供的一些静态方法 const game = new Phaser.Game();\n\n// 让某个物体以指定的速度向指定的目的地运动\n// 方法返回运动的角度\ngame.physics.arcade.moveToXY(sprite, x, y, speed);\ngame.physics.arcade.moveToObject(sprite, destination, speed);\ngame.physics.arcade.moveToPointer(sprite, speed, pointer);\n\n// 以指定加速度向指定地点运动\ngame.physics.arcade.accelerateToXY(sprite, x, y, speed);\ngame.physics.arcade.accelerateToObject(sprite, destination, speed);\ngame.physics.arcade.accelerateToPointer(sprite, pointer, speed);\n\n// 计算角度\ngame.physics.arcade.angleBetween(source, target);\ngame.physics.arcade.angleToPointer(displayObject, pointer);\ngame.physics.arcade.angleToXY(displayObject, x, y);\n\n// 计算距离\ngame.physics.arcade.distanceBetween(source, target);\ngame.physics.arcade.distanceToPointer(displayObject, pointer);\n\n// 计算速度\ngame.physics.arcade.computeVelocity(axis, body, velocity, acceleration, drag);\ngame.physics.arcade.velocityFromAngle(angle, speed, point); 使用 Arcade 物理引擎进行碰撞检测 Arcade 的碰撞检测类型 Arcade 物理引擎是一个轻量级的物理引擎，它只支持 AABB（轴对齐矩形边界框）类型的碰撞检测。也就是只能进行矩形和矩形之间的碰撞检测。 overlap 方法 const game = new Phaser.Game();\n\nconst sprite1 = game.add.sprite();\nconst sprite2 = game.add.sprite();\n\ngame.physics.arcade.overlap(sprite1, sprite2, () => {\n  console.log('It is overlap!');\n}); collide 方法 const game = new Phaser.Game();\n\nconst sprite1 = game.add.sprite();\nconst sprite2 = game.add.sprite();\n\ngame.physics.arcade.collide(sprite1, sprite2, () => {\n  console.log('It is collide!');\n}); 在 update 方法中使用碰撞检测 const game = new Phaser.Game(1200, 500, Phaser.AUTO, 'container', state);\n\n// 场景函数\nfunction state() {\n  let sprite1, sprite2;\n\n  this.create = () => {\n    sprite1 = game.add.sprite();\n    sprite2 = game.add.sprite();\n  };\n\n  // 必须在游戏的每一帧中都进行碰撞检测，才能得到一个持续的碰撞物理效果\n  this.update = () => {\n    game.physics.arcade.collide(sprite1, sprite2);\n  };\n} 单个物体与组之间的碰撞检测 const game = new Phaser.Game(1200, 500, Phaser.AUTO, 'container', state);\n\n// 场景函数\nfunction state() {\n  let sprite, group;\n\n  this.create = () => {\n    sprite = game.add.sprite();\n    group = game.add.group();\n  };\n\n  // 精灵与组之间进行碰撞检测\n  this.update = () => {\n    game.physics.arcade.collide(sprite, group);\n  };\n} 组与组之间的碰撞检测 const game = new Phaser.Game(1200, 500, Phaser.AUTO, 'container', state);\n\n// 场景函数\nfunction state() {\n  let group1, group2;\n\n  this.create = () => {\n    group1 = game.add.group();\n    group2 = game.add.group();\n  };\n\n  // 精灵与组之间进行碰撞检测\n  this.update = () => {\n    game.physics.arcade.collide(group1, group2);\n  };\n} 组内的碰撞检测 const game = new Phaser.Game(1200, 500, Phaser.AUTO, 'container', state);\n\n// 场景函数\nfunction state() {\n  let group1, group2;\n\n  this.create = () => {\n    group = game.add.group();\n  };\n\n  // 精灵与组之间进行碰撞检测\n  this.update = () => {\n    game.physics.arcade.collide(group);\n  };\n} 与游戏边界进行碰撞检测 sprite.body.collideWorldBounds = true"},{"path":"/阅读/读书笔记/象与骑象人/","rawBody":"象与骑象人 <img style=\"width: 200px;\" src=\"./images/cover.jpg\" alt=\"规模\" /> 摘录 前言 10 个幸福假设 两个古老真理。 第一个真理 是本书的最基本观念： 人类的心理分成若干部分，有时彼此还会互相冲突。 莎士比亚所说的：“ 都是人的思想在作祟。 ”或如佛陀所言：“ 诸法意先导，意主意造作。 ” 第二个真理 是： 人天生就是“道德虚伪” ，这就是为什么人们很难忠实地遵照为人准则行事的原因。 人的存在有一种精神层面的垂直维度。你称之为“ 高贵、美德或神性 ”也好，你信不信上帝也无妨，但是人真的会在别人身上或在大自然中感受到神圣、庄严或那种难以形容的善。 第一部分 人的心理是如何运作的【人象对峙】 第1章 分裂的自我，使你产生心理冲突 有关心理的古老比喻 人类需要用比喻来思考。 我们对新事物或复杂事物的理解，是借助于已知的事物与前者间的关联。 弗洛伊德指出，人格分成三个部分： 自我 （ego，即有意识、理性的自我）、 超我 （superego，即道德良心，有时会过于拘泥于社会规范）以及 本我 （id，即享乐的欲望，各种欲望，总想及时行乐）。 弗洛伊德认为， 精神分析的目的就是通过强化自我，让自我能更好地控制本我，并摆脱超我的束缚。 我可以体会为何柏拉图会把不乖的马形容成“聋得像根柱子似的”。面对生活中一些重大的决定， 我真的开始对有些事感到无力。我明明知道自己该做什么，甚至也告诉朋友我会这么做，但我自己却隐约知道我不会这么做。罪恶感、贪欲或恐惧通常会战胜理智 。 罗马诗人奥维德（Ovid）有一段非常传神的描述。在《变形记》（Metamorphoses）里，女主角美狄亚夹在自己对杰森的爱与对父亲的责任之间，左右为难，痛苦万分。她哀叹道： 一股奇妙的力量牵引着我向前。情欲及理性各自朝不同的方向拉扯着我。我很清楚哪一条是正确的路，心里也很认同，但我却踏上错误的路。 现代的理性选择理论及信息加工理论并不足以解释人类意志的软弱。古代人驾驭动物的比喻则十分有用。当我在思考自己为何老是那么软弱时，我联想到的 自我形象就是我是一个骑在大象背上的人。我手里握着缰绳，只要动动缰绳，我就可以指挥大象转弯、停止或往前走。不过，只有在大象没有它自己的欲望时，我才指挥得了大象。一旦大象真的想做什么，我就根本斗不过它。 4种自我分裂 对人的“心理”的划分有四种方式，分别是 心灵和身体、左脑和右脑、理性和感性、控制化和自动化。 第四种最重要，因为它最符合骑象人及大象的比喻，不过前面三种划分方式也能解释我们在面对诱惑、软弱及内在冲突时的一些体验。 人的心理是由独立运作的部分联合组成的，有时候，它们意见相左、各行其是。 人类的理性其实非常依赖复杂的情感，因为只有当充满情绪的大脑运作顺畅时，理性才得以运转。 阻碍幸福的3个障碍 幸福障碍1：无能的意志力 单靠意志力，控制化系统是很难打败自动化系统的。控制化系统跟一紧绷便疲惫不堪的肌肉一样，很快就疲软无力，举白旗投降。不过，自动化系统则是无须费力且全年无休地自动运转。一旦你了解刺激性控制的力量，就可以改变环境中的刺激，避开恼人的刺激来源。如果没办法这么做，那你就多想想它们不吸引人的那一面。比如，佛陀为了打破人对肉体的沉溺，便想出静观腐尸的方法。只要眼睛瞪着看会让自动化系统反感的东西，骑象人就能改变大象以后的欲念。 幸福障碍2：心理干扰 韦格纳的研究则提出一个更简单、更单纯的解释：自动化处理过程每天会产生好几千个想法及影像，这通常是通过随机联想形成的。那些一直缠绕在我们脑中的念头或影像，通常都是特别令人震惊、一直想压抑或否认的念头。我们之所以会压抑这些念头，并不是因为内心深处知道它们是真的（有些可能是真的），而是因为它们很恐怖或令人感到羞耻。一旦我们想压抑却又压抑不成，这些念头就会一直在脑中挥之不去，这就是为什么我们会相信弗洛伊德所说的：人的内心有黑暗且邪恶的一面。 幸福障碍3：冠冕堂皇的理由 道德判断就跟审美判断一样。当我们看到一幅画时，通常马上就知道自己喜不喜欢。如果有人要我们解释为什么喜欢，我们就会乱编出一番说辞。其实我们并不完全了解自己为什么会觉得这幅画很漂亮，但我们的诠释模块（骑象人）就跟加扎尼加在裂脑研究中所发现的一样，很会编理由。你想为自己喜欢这幅画找出一个冠冕堂皇的理由，所以你就会抓住第一个说得过去的原因（可能是颜色或光线）。道德判断也一样。两人对某事意见相左时，其实是感觉在先，后来再来编理由反驳对方。就算你驳倒对方，难道对方就会改变心意，接受你的论调吗？当然不会，因为你驳倒的，并非对方真正的立场，他的立场是在他有了判断之后才临时编出来的。 第2章 是什么令你幸福 发生在这个世界上的事情，只有通过我们自己对事件的诠释才能影响到我们，所以只要我们能控制自己对事件的诠释，就能控制自己的世界。 你认为生命本身是什么，它就是什么。 令你感到不幸福的3个原因 不幸福的原因1：情感启动效应 在大象所用的语言中，最重要的字眼就是“喜欢”或“不喜欢”，“接近”或“离开”。即便是头脑最简单的动物也必须随时做决定，是往左还是往右？往前走还是停下来？吃还是不吃？头脑复杂一点儿的动物会有足够的能力自动且毫不费力地做决定，因为它们脑中有一个随时在运转的“喜欢计量表”。如果一只猴子试吃一种以前没吃过的水果，感觉很甜，这时它的“喜欢计量表”就会显现“我喜欢”，这只猴子就会觉得很愉悦，马上大咬一口。如果水果吃起来是苦的，那么猴子就会表现不悦感，也不会再咬这个水果了。这根本不需要评估正反两种意见，或动用到分析推理系统，其依据就是心中出现的愉悦感或不悦感。 人类也有一个“喜欢计量表”，这个“喜欢计量表”无时无刻都在运转，对我们产生的影响相当微妙。实验显示，我们对于自己经历的一切事物，都会有“喜欢不喜欢”的反应，即便在下意识的情况下也是一样。 人生的三大决定——做什么工作，住什么地方，跟谁结婚，居然都受名字的发声这种如此细微之事的影响。人生确实是我们认为它是什么，它就是什么，但我们对人生的想法其实是在无意识中快速形成的。大象依本能反应，引导骑象人抵达新的目的地。 不幸福的原因2：负面偏好 大多数人身上的大象看坏的事看得太多，看好的事看得又实在太少。 莎士比亚笔下的哈姆雷特也用自己的话道出与奥勒留相同的喟叹：“ 事情没有好坏，一切都是人的想法在作祟。 ”哈姆雷特说的没错，但他还可以加上一句： 是他的消极情绪让他自认为这世界上没有一件好事。 这项我们称为“负面偏好”（negativity bias）的原则，充分显现于人类所有心理层面。 在夫妻关系的互动中，一句批评的话或一个破坏性行为造成的伤害，起码要有5个善意或建设性的行为才能弥补过来。 不幸福的原因3：强大的遗传基因 一讲到个性，大家都知道先天遗传及后天环境是影响个性的两大因素，但大部分人并不清楚先天遗传的影响有多大。 改变思维方式的3种方法 方法1：冥想 有意识地去控制自己的想法，专注凝神，头脑放空。 方法2：认知疗法 智慧之道，在安静无为，无欲等待。 认知疗法最重要的，就是训练病人掌握自己的想法，把自己的想法写下来，指出扭曲之处，之后找出替代方案及更正确的思考方式。 方法3：百忧解 第二部分 我们如何相处【大象的力量】 第3章 互惠 互惠的应用 以牙还牙 以牙还牙，就是一报还一报，就是别人怎么对待我们，我们就怎么对待对方。 用语言造势 邓巴认为，语言的进化就是用来取代梳毛功能的。有了语言，群体规模较小的成员便能很快地建立彼此的关系，了解其他成员间的关系。邓巴指出，人类使用语言，谈的其实都是别人的事——想知道谁对谁做了什么事，谁跟谁在一起，谁跟谁吵架等。邓巴还指出，在人类这种超群居社会中，社交关系处理得好的人容易成功。重点不在于你知道什么，而在于你认识谁。简言之，邓巴认为，人类之所以会进化出语言，是因为人要靠语言来说长道短。不管沟通方式有多原始，消息灵通的人总是比消息不灵通的人有优势。人一旦开始说人长短（流言），就会出现一场难以控制的比赛——所有人无不使出浑身解数来操控别人，破坏别人的关系，或保护自己的名声，凡此，皆要有超强脑力才能办得到。 模仿，人际关系的黏合剂 业务员有六大推销技巧，其中最基本的就是互惠之道。那些想从我们身上得到东西的人会先给我们一点儿甜头尝尝，这就是为什么我们会从慈善组织拿到一大堆免费贴纸跟明信片的原因，其实都出自其营销顾问的巧思运用。 讨价还价 你一让步，对方就跟会着让步。 在金融交涉中，那些先提出极端苛刻的条件然后再往后退让一步的人，会比那些一开始就提出合理条件之后便不再让步的人，更容易完成交易。 先提出极端苛刻条件，之后再让步，不仅会让你得到比较好的条件，还会让你得到一个愉快的合作伙伴 ：因为你让对方觉得他们自己有决定最后结果的影响力，所以对方比较会同意接受这项条件。人与人之间的施与受，会让彼此产生一种伙伴关系，就算对接受的一方，也会有类似的效果。 如何提升互惠技巧 朋友间的相处、情侣间的关系，也需要我们发挥互惠之道的精神。所有关系在一开始时，都处于非常微妙的阶段， 付出过多（似乎给人一种不顾一切之感）或付出太少（你好像有点儿冷漠且拒人于千里之外），都会毁掉彼此的关系。 健康的关系来自平衡的施与受，尤其是适当地互送礼物、互相帮忙、互相关心、互吐心声，都是培养彼此关系的重要技巧。 “互惠之道”可以说是处理所有人际关系的一剂大补帖。只要使用得当，便会对我们的人际关系产生强化、延长及活化的效果。互惠之道之所以能产生这么好的效果，部分原因是因为我们心中的大象天生就是一个模仿高手。比如，当我们跟自己喜欢的人相处时，会不自觉地想模仿对方的一言一行。对方拿脚打拍子，你就可能拿脚打拍子，对方摸自己的脸，你就可能也摸自己的脸。我们不只会模仿喜欢的对象，也会喜欢模仿我们的那些人。我们会比较乐于帮助喜欢模仿我们的人，对后者的态度也比较和善。懂得模仿顾客的女服务生，小费总是拿得比较多。 第4章 自以为是 我们之所以喜欢把丑闻当娱乐，是因为 丑闻会让我们心生轻视别人之感，这种道德情绪也会让我们产生道德优越感。 是什么让我们虚伪 我们每个人都很虚伪，当我们蔑视别人虚伪之时，更显得自己加倍虚伪。 重视道德表象胜过道德真相 权谋大师马基雅维利（Nicclo Machiavelli）在500年前写道：“ 大部分人都非常满足于外表建构的假象，乐于把假象当成真实，事物的表象比事物的真相更具影响力。 ” 罗伯特·赖特（Robert Wright）在其杰作《道德的动物》（The Moral Animal）一书中所言：“ 人类这种动物一讲到道德就头头是道，但可悲的是人自己总是误用道德，最惨的是，误用道德后还浑然不知。 ” 先做判断，再编造说辞 哈佛大学的心理学家大卫·帕金斯（David Perkins）曾苦心致力于研究如何改善人们的思考推理，也发现了相同的结果。他指出， 一般人都采用“先选定自己的立场，再来找支持自己立场的证据”的思考方式。如此便足以证明自己的立场是“有道理的”，之后所有思考便戛然而止。在压力小的情况下，如果有人从相反的立场提出不同理由及证据，那么我们还比较愿意改变心意,但是我们不会自发地去做这样的反向思考。 富兰克林得出这样的结论：“ 要当个讲理的人其实很容易，不管你想做什么事情，你都可以帮自己找到或编出一个理由。 ” 无意识的自我膨胀 要想在人生竞赛中打胜仗，就必须把自己最好的一面表现出来，以昭世人，我们必须表现得很有美德（不管自己是不是真的很有美德），而且不管自己有没有资格，都必须得到合作的好处。 （之所以会出现抑郁，就是因为自己编的这套说辞走了样，变成了贝克的三种错误认知［参见第2章］：我很烂，这个世界很可怕，我的未来一片黑暗。） 在判断别人时，我们会依据对方的行为来做判断，但是对自己，我们却认为自己“里外如一”，所以我们很容易便可为自己的自私行径找到开脱的理由，然后一味沉溺在“自己高人一等”的幻想中。 模糊不清会助长我们的幻觉。因为很多特质（例如领导能力）有多种不同的定义，所以我们就会随意挑一个最符合自己特质的标准来谄媚自己。如果我是个有自信的人，我就会把领导能力定义为自信心。如果我对人很有一套，我就会把领导能力定义为了解、影响别人的能力。当我们拿自己跟别人相比时，我们的思考过程如下：先把议题定出来（无意识地、自发地），如此我们所认定议题中的特质，就会跟自己自认的优点联结起来，之后我们再来找证明自己拥有该优点的证据。一旦我们找到一项证据，就会觉得“果然如此”，之后一切就戛然而止，这时我们不再思考，开始自我陶醉。 有证据表明， 对自我、自己的能力、自己未来的远景秉持积极幻想的人，会比缺乏这种幻想的人更幸福，其心理更健康、更受人喜爱。 不过，这种幻想会让你觉得自己理应比别人获得更多，从而在自己与他人之间引发无尽的纷争，因为别人也认为他该得到同样的好处。 “天真实在论” 如果连配偶、同事以及室友之间都会发展到互相愤恨，那么彼此间没有感情基础或共同目标的人要谈判协商，就难上加难了，这就是为什么我们得耗费庞大的社会资源来处理诉讼案件、罢工、离婚纠纷及和平谈判破裂后的暴力冲突的原因，因为 人类的这种自私的偏见会激起人们心中的伪善愤慨。 如埃普利及邓宁的研究， 人们对于有助于自己预测他人行为的信息确实持较开放的态度，但却不愿调整自己的自我评价。 在另一项研究中，洛温斯坦采用婚姻治疗师的咨询方法，要每位被试从对方的立场写一份非常具有说服力的文章，结果情况更糟。这种方法之所以会起到反效果，可能是因为 站在对方立场思考反而会刺激自己更加努力去思考如何辩驳对方立场。 大家都很乐于了解各种自私的偏见，也知道应用这些知识来预测别人的反应，但是自己的自我评价还是不动如山，就算你拉着对方的衣领，摇着他的身体告诉他：“仔细听着！大部分人的自我评价都是自我膨胀，你应该务实一点儿！”他们也根本不信你这套说法，还是会自言自语道：“别人可能有偏见，但是我真的是个优秀的领导人才。” 普罗尼及罗斯在深入研究这种抗拒面对真实自我的态度后，称这种现象为“天真实在论”（naive realism），即 我们每个人看到的、感觉到的世界是最真实的世界，我们相信自己看到的事实，每个人也都看得到，所以别人应该跟我有一样的想法。如果别人有不同的想法，要么就是他们没有看到真正的事实，要么就是他们被自己的利益及意识形态蒙蔽。 为何会有邪恶与残暴 善恶之战 “我们的人生是心理创造出的产物”，我们的心理慢慢学会使用马基雅维利式的“以牙还牙”策略。我们每个人都会做出自私、短视的行为，但我们内心的辩护律师则会确保自己不会把过错怪到自己身上。如此，我们就会确信自己做的都是对的，但却能很快看出别人充满偏见、贪婪及口是心非的那一面。我们总能正确地判断出别人的动机，但一旦自己遇到冲突，就会开始夸大自己的善行，编出一个善（自己这一边）恶（别人那一边）大战的故事。 “邪恶至极”的迷思 鲍迈斯特之所以是个非常优秀的社会心理学家，部分原因是他坚持追求事件真相。确实有无辜的人会莫名其妙地碰到邪恶的坏事，但大部分的案件其实都很复杂，鲍迈斯特则 愿意打破“不要怪罪被害人” 的禁忌，坚持找出事实真相。 邪恶与残暴的4个成因 前两个是邪恶的属性： 贪婪、野心 （例如抢劫案，个人为了能直接获利而使用暴力）及 虐待狂 （从伤害别人中得到乐趣） 不过，贪婪、野心只解释了小部分暴力事件的成因，虐待狂则几乎不成原因。 邪恶两个最大的成因是： 自尊心太强及道德理想主义。 自尊心强并不会直接导致暴力，但是如果你的自尊心过强，造成自己脱离现实或过度自恋，你就会很容易觉得受现实所迫。而当面对这些威胁时，特别是年轻人，往往会激烈抨击社会。 从个人角度来看，自尊心受威胁确实是暴力事件的主要成因，而理想主义则是造成大规模杀戮事件的主要原因——因为秉持这种想法的人认为，自己的暴行是追求道德目标的一种手段。 如何寻得完满之道 人类学家克利福德·格尔茨（Clifford Geertz）曾写道：“ 人类是一种悬浮在自己所编织的意义之网中的动物。 ”也就是说，我们生存的世界并不是真的由岩石、树木等实物建造而成，而是 一个由辱骂、机会、身份象征、叛徒、圣人及罪人构筑的世界。 伯恩斯也建议我们要有共情： 面对冲突，要从对方的观点来看事情，这样你才能理解对方并非无理取闹。 我基本上同意伯恩斯的做法，但是一旦双方开始动怒，要彼此产生共情，去了解对方立场，可能就有点儿缘木求鱼。遇到这种情况，耶稣的话比较实际：“ 先去掉自己眼中的梁木。 ”（巴特森跟洛温斯坦都发现，被试一旦被迫审视自己，原有的偏见就会消失。）只有在非常刻意的努力之下，我们才会看到自己眼中的梁木。 虚伪及乱下判断是重创人际关系的两大杀手，找出自己的过错，也是克服这两项恶习的关键所在。 当你发现自己也是造成双方冲突的元凶时，你心中的怒气就会降下来——或许你的怒气不会完全消失，但你起码可以恢复一点儿理智，承认对方也有对的地方。你可能还是认为自己是对的，对方不对，但现在的立场已修正为自己大部分是对的，对方大部分不对，这时双方就可以找到一个不伤彼此感情的台阶。你可以这么告诉对方：“ 我不应该做X这件事，所以你会有Y这种感觉，我可以理解。 ”在平等互惠的压力之下，对方可能会觉得自己也应该有所表示：“ 你做了X这件事，我真的很不高兴，不过我也不应该做出P这件事，你会有Q的反应，我完全可以理解。 ”互相报复的心理，一旦有自私的偏见在一旁火上浇油，双方就会陷入交相指责中，让情况变得更不可收拾，但是我们可以把互相报复的心理逆转成互相理解的心理，以终止冲突，保住彼此的关系。 第三部分 追求幸福的方法【驭象之道】 第5章 幸福来自何处 善人离诸（欲），不论诸欲事。苦乐所不动，智者无喜忧。——佛陀 不求事如己愿，但求凡事顺乎自然，如此人生就会顺遂自得。——古罗马哲学家，爱比克泰德 如果金钱及权势可以买到幸福，那么《圣经·旧约·传道书》的作者应该能登上狂喜的巅峰。这本书的主要内容是耶路撒冷一位国王回顾自己的一生，回忆自己对幸福及满足的追逐过程。这位国王决定用自己的财富追求幸福，测试金钱能否买到幸福。 我曾做过的大事——为自己建造房屋，栽种葡萄园，修造花园，在园中栽种各类果树，又拥有大群牛羊，胜过任何比我先在耶路撒冷的人所拥有的。我又为自己积蓄金银，以及列王和各省的财宝。我又为自己招募男女歌手，纳了许多妃嫔，是世人所以为乐的。于是我日渐昌大，超过任何比我先在耶路撒冷的人；我的智慧仍然与我同在。我眼中所求的，我都不禁止。 不过，作者接下来却发现，这些身外之物其实让人空虚（接下来这段话可能是人类最早出现的关于“中年危机”的记载）。 然后，我省察我所做的一切，以及我劳碌换来的成就，想不到一切都是虚空，都是捕风，在日光之下毫无益处。 《圣经·旧约·传道书》的作者告诉我们他追求幸福的种种方法——艰苦奋斗、学习、品尝美酒，但是这些东西都无法让他满足，而且这些身外之物也无法赶走他心中的空虚感：跟动物相比，自己的人生并不存在任何更本质或具有更高目标的价值。从佛陀及斯多葛学派哲学家爱比克泰德的观点来看，《圣经·旧约·传道书》作者的问题再明显不过： 他太努力去追求幸福。 佛教及斯多葛学派教诲我们： 追求身外之物，或强求世事如己所愿，最后只是一场空。幸福只能内求诸心，断除对身外之物的执著，对一切采取接受的态度。 幸福的两个原则 幸福原则1：进展原则 《圣经·旧约·传道书》的作者面对的不只是人生没有意义的恐惧，他还得面对成功会让人失望的事实。 得到自己想要的东西固然让人幸福，但这种幸福通常很短暂。 追求目标时真正重要的是过程，不是结果。 因此，先为自己设定目标，每朝着目标前进一步，我们都会感觉到朝着目标前进的幸福与满足。成功来临的那一刹那，我们心里的感觉其实是像走完漫长的旅程卸下沉重背包时的那种如释重负之感，而不是欣喜若狂。人们总是朝着目标，全力以赴，以为自己达成目标时会欣喜异常。然而当成功降临时，我们其实只是感觉到一点点短暂的幸福感，这时我们不禁要问：难道就是这样？于是我们会忍不住去贬低自己的成就，认为自己的努力根本是一场空。 我们称此为“进展原则”，即 朝着目标前进比达成目标要幸福。 莎士比亚说得好：“ 成功之时，一切已结束；努力的过程是最幸福的。 ” 幸福原则2：适应原则 不管发生什么事情，我们终究会慢慢适应，只是事情刚刚出现时，我们不知道自己有这样的能耐。我们很不善于准确地预测自己未来的情绪，往往会高估自己情绪反应的强度及持续性。 这就是“适应原则”： 人对现况的判断，是以比自己现已适应的更好或更坏为基准。 当我们了解适应原则的原理，又发现人的平均快乐程度是跟遗传基因有很大的关系时，就得面对一个惊人的事实： 从长远来看，人生际遇如何其实并不重要，不管是好运还是坏运，我们最后都会回归自己的幸福起始点（happiness setpoint） ，即大脑系统默认的快乐程度，而这基本上是由我们的基因决定的。1759年，早在世人知道有基因这种东西之前，亚当·斯密（Adam Smith）便得出同样的结论： 在恒常状况下，即不预期会出现变化的情况下，每个人的心理迟早都会恢复平常的自然平静状态。碰到顺境，一段时间后，我们的心理就会恢复平常的平静；遇到逆境，一段时间后，情况亦然。 在真实的人生里，你可以拼命努力，累积大笔财富，拥有满园果树等，但是你最多也只能如此，因为你无法改变自己“平常的自然平静状态”，你积聚的财富只是让自己对金钱有更高的渴望，但你并不会比有钱之前还要幸福。 因为不了解追求身外之物只是徒然，所以我们才会不停地追逐，努力让自己成为人生游戏中的赢家。 我们一直想拥有比现在更多的东西，追呀，追呀，追个不停，就像一只在转轮上跑个不停的仓鼠。 古代的幸福假设 佛陀、爱比克泰德以及其他许多古圣先贤都看出：追求身外之物只是徒然，所以强烈地要大家不要追逐身外之物。他们提出一套幸福的假设： 幸福来自我们的内在，强求这个世界顺应自己的欲望是找不到幸福的。 佛陀教诲我们执著是苦，并告诉我们断除执念的方法。古希腊斯多葛学派的哲学家则教育追随者们， 把所有注意力放在自己可以完全控制之物上，也就是自己的想法及反应。其他的事物，如命运的赏赐或诅咒，都是外物，真正的禁欲主义者是不为外物影响的。 两个幸福发现 研究人员研究幸福时有两大发现：第一，基因对个人的平均幸福程度影响很大；第二，大部分的环境因素及人口统计因素对幸福影响甚微。 人无法从外在事物中找到幸福 佛陀及爱比克泰德要是听到前述研究结论，一定会鼓掌赞同，因为他们早就发现，人无法从外在事物中找到幸福。现代人跟古代人一样， 把自己的时间和精力拿来追求一些不会让自己更幸福的目标，却在盲目追逐的过程中忽略了个人内在成长及精神层面的修为，而这才是真正能带给我们满足感的东西。 古圣贤哲一再教诲我们， 要懂得放手，不要再汲汲营营，选择一条新的人生道路。转向自己的内在，最重要的是不要再强求外在世界符合己之所愿。 克利希纳指出， 人有劣根性，而且克制不了这些劣根性，人会用各种希望把自己捆上几百个手镣脚铐，内心充满怒气与欲望，用尽各种不公义的手段积聚财富，以满足自己的贪欲。 克利希纳用讽刺的语气道出这些贪婪人魔的嘴脸： 今天我得到这个，明天一时兴起我就要满足另一种欲望；这是我的财富，以后还会有更多财富。谁要成了我的敌人，我就杀了他，有多少敌人，我就杀多少人。我是这里的大王，我高兴怎样就怎样，我是个快乐、成功的强者。 幸福方程式 基因对一个人的影响确实远超乎我们的想象，但是基因本身对环境因素的反应也相当敏感。 心理学家索尼亚·柳博米尔斯基（Sonja Lyubomirsky）、谢尔顿（Ken Sheldon）以及施卡德（David Schkade），检查手上所有的证据后发现，影响一个人幸福与否的外在因素基本上可分成两大类—— 个人本身的生活条件，以及个人选择的自发性活动。 所谓的个人生活条件，是指自己不能改变的事实（种族、性别、年龄及残障等）以及自己能改变的事实（财富、婚姻状况及居住地等）。这些生活条件起码会在人生中持续一段时间，所以我们大抵都能适应。自发性活动则是出自个人选择，如冥想、运动、学习新技能、放假等。因为这些自发性活动一定是出于个人选择，且需要花相当多的时间和精力才能完成，所以这些自发性活动自我们意识中消失的方式，跟个人本身生活条件消失的方式，就会有所不同。自发性的活动能带给个人更多幸福，不像适应原则，时间一久，人的反应就递减。 积极心理学提出的最重要概念，就是柳博米尔斯基、谢尔顿、施卡德以及塞利格曼所称的“幸福方程式”： H=S+C+V 我们真正感受到的幸福持久度（H），取决于我们天生遗传的幸福的范围（S），加上我们的生活条件（C），再加上我们自己可以控制的因素（V）。 值得你改变的外在因素 因素1：噪声 因素2：通勤 因素3：自我掌控感 因素4：羞愧 因素5：人际关系 如何寻找幸福 “心流”体验 掌握自身优势 为何会患“奢侈病” 炫耀性消费 人的炫耀性消费与非炫耀性消费的心理是不同的。炫耀性消费指的是别人看得到的，被我们拿来当做个人身份地位象征的消费品，这些商品就像一种武器竞赛，其价值并非来自其客观资产，而来自别人对该商品的评价。 选择的悖论 因为选择越多，我们的期待就越高；同时，选项越多，我们越不可能挑到最好的选项。买完东西走出商店时，你会觉得自己可能选错东西，很可能因此而心生后悔，觉得自己没选的东西可能比较好。 最大化者一直喜欢跟别人比，所以他们很容易陷入炫耀性消费的陷阱。然而，最大化者花的每一块钱所得到的幸福却都比满足者少。 重新思考幸福的假设 在开悟之后，佛陀对世人传教： 人生是苦，只有断除自己苦苦追求的享乐、成就、名声及人生等执念，才能脱离苦海。 很多西方思想家也思考过佛陀所遇遭的人生苦难——病、老、死，但是他们却得出截然不同的结论： 因为对人、对自己的人生目标、对人生的欢愉有着强烈的依恋，所以我们必须过一个完整的人生。 第6章 爱与依恋 一个只关心自己，凡事都问是否合乎自己利益者，是不可能获得幸福的。如果你要为自己而活，就必须为你的邻居而活。——古罗马政治家、哲学家，塞涅卡 没有人是孤岛，没有人能自全，每个人都是大陆的一小片，主体的一部分。——美国17世纪传教士兼诗人，约翰·邓恩 爱的强大力量 拥抱和被拥抱的需求是天生的 爱能战胜恐惧 依恋，伴你一生 鲍比的理论跟弗洛伊德及安娜的理论相抵触，鲍比的理论表明， 如果你希望你的小孩健康成长、独立自主，那么你应该去拥抱、去搂、去哄、去爱他们。只要给他们一个安全堡垒，他们就能靠自己的力量去探索、征服这个世界 。爱能克服恐惧，《圣经·新约》里有一段话描述得很好：“ 爱里没有惧怕，完全的爱可以驱除惧怕。 ” 依恋是种特质 不是只有儿童才有依恋 由人们如何面对配偶过世及与配偶长期分离的研究结果表明，爱侣跟父母一样，也是人们依恋的对象。这项研究发现， 成人跟其依恋对象分开时，会跟鲍比观察到的住院生病的儿童一样：一开始焦虑恐慌，然后整个人变得了无生气、沮丧忧郁，最后只有在情感上超脱了，才有办法从伤害中复原。这项研究还发现，求助于亲近的朋友无法减缓痛苦，反倒是回去找父母还比较有效。 为何性跟爱有关 何为“真爱” “真爱”迷思 如果真爱的定义是一种永恒之爱，那么从生物学的角度来看，绝对行不通。为检视真爱，也为了维护爱情的尊严，我们必须了解两种爱情之间的不同—— 激情（passionate） 及 友爱（companionate） 。根据埃伦·波谢德（Ellen Berscheid）与伊莱恩·沃尔特（ElaineWalster）两位爱情研究专家的说法， 激情是一种“狂野的情感状态，其中充满温柔与性欲、愉悦与痛苦、焦躁与释放、强烈忌妒心，为对方不惜牺牲自己，是种五味杂陈的感情”。 激情是一种会让你坠入的感情力量。当丘比特的金箭射中你的心，刹那间，你周遭的世界变得不同了，激情随之发生。你渴望跟心上人合为一体。你渴望两人缱绻缠绵。 相对于激情，伯斯契特与沃尔斯特对友爱的定义是“ 一种我们对与自己的生活紧紧纠结在一起的人所产生的感情 ”。当爱侣将彼此的依恋系统与施爱系统应用在对方身上，彼此开始 依赖、关心、信任 对方时，几年下来，友爱随之与日俱增。如果说我们用火来比喻激情，那么 友爱就像是不断生长、纠结缠绕的蔓藤，逐渐将两人联结在一起。 不同文化的人都曾经历过狂野与沉静两种天壤之别的爱情。正如非洲纳米比亚狩猎部落的一位妇女所言：“两人刚相遇时，爱火在他们心中熊熊燃烧，其中的激情炙热非常。一段时间激情冷却后，它便永远被留住。” 激情就像一种毒品。它的症状跟海洛因（这种幸福感有时跟性有关）和可卡因（这种幸福感混合了晕眩及能量）所引起的症状有部分相同。这其实一点儿都不奇怪：因为激情会改变大脑几个部位的活动，包括与多巴胺分泌有关的部位。极度愉悦的感觉会刺激脑中多巴胺的分泌，这个多巴胺联结在此具有非常关键的作用，因为毒品就是以人为的方式提升脑中多巴胺的浓度，跟海洛因和可卡因的作用一样，可能让人上瘾。如果你一个月吸食一次可卡因并不会上瘾，但要是每天都吸食，保证一定会上瘾。没有一种毒品可以让人一直保持亢奋状态。大脑会对多巴胺的长期累积产生反应，发展出抗多巴胺的神经化学反应，让大脑恢复平衡。这时，一旦没有吸食毒品，大脑就会失去平衡： 人一旦戒食可卡因或没了激情，跟着就是痛苦不堪、死气沉沉、绝望沮丧。 因此，如果激情是一种毒品，那么它的力量一定会有消退的一天。没有人可以永远处于亢奋状态（如果你谈的是远距离的激情，那么这就像每个月服用一次可卡因一样；毒品会因为你的忍耐受苦，而保有其效力）。只要激情不断地欢愉奔跑，它终有耗竭的一天。爱侣中总会有人先察觉到这样的变化。就像有一天你从梦中醒来，看见你的枕边人在流口水一样。就在你恢复神智的那一刻，清醒过来的爱侣会看到自己之前没有发现的缺点。我们心中的至爱不再令人崇拜，这时，因为我们的心理会对此改变非常敏感，所以她会过度夸大自己的感受。“喔，我的天啊，”她想，“魔法消失了——我不再爱他了。”如果她受制于真爱的迷思，她甚至会想与对方分手。毕竟一旦魔法消失，那就不是真爱了。不过，一旦她真的结束两人的关系，她可能做出错误的决定。 激情不会变成友爱 当一个人处于激情亢奋中，头脑是不可能清醒思考的。这时骑象人跟大象都一样晕头转向。 我们不会跟喝醉酒的人签约，所以有时候我会希望我们能够阻止热恋中的情侣做出结婚的决定， 因为一旦求婚成功，家人就会接到通知，结婚日期也跟着敲定，结婚的列车一旦启动就很难停下来。在筹备婚礼的巨大压力下，爱情毒品的效力很可能会在某个时刻突然消退，因此许多新人在步入结婚礼堂时，心中其实满是疑问，而婚姻最后则以离婚收场。 不过，有时候分手并非良策，如果恋人能坚持下去，让彼此有机会培养出友爱，他们可能就会找到真爱。 我相信世上有真爱，但它不是永远不熄的激情。 真爱，是两人之间坚定共许的强烈友爱，辅以一些激情，这是一种能支撑起坚实婚姻的爱情。 关于依恋与爱的是非题 如果你正身陷激情之中，想讴歌胸中热情，那么你应该阅读诗歌。如果你的激情已归于平静，想一探爱情关系如何演变，那么你该读心理学。如果你刚结束一段爱情，想让自己相信，没有爱情自己反而可以过得更好，那么你应该去读哲学。 哲学家为何对爱感到不安 后来的斯多葛学派也反对“爱情”这种爱上特定对象的特性—— 爱情会让一个人的快乐掌握在另一个人的手上，但我们无法完全控制另一个人。 甚至连以追求快乐为其哲学核心的伊壁鸠鲁学派都重视友谊，反对浪漫的爱情。 导致哲学家对于真正的人类之爱感到不安的原因可能有以下几个。 首先，激情会让人逻辑不清、失去理智，因此博得恶名， 西方哲学家一直认为道德植根于理性。 爱情是一种疯狂，许多人因激情难抑而在最终陷入疯狂，毁了自己，也毁了其他人的人生。 许多反爱情的哲学隽语因此成了哲人对年轻人的好心忠告： 关掉自己的耳朵，不要去听妖女迷惑人心的歌声。 他人是地狱，也是天堂 涂尔干的结论为， 人们需要义务及约束来为自己的生命建立架构和意义 ，他说：“（一个人）所属的群体越脆弱，他对群体的依赖便越少，于是他最后会越来越依靠自己，眼中便只有根据自己利益所建立的行为准则，视其他为无物。” 塞涅卡说得对：“ 一个只关心自己，凡事都问是否合乎自己利益者，是不可能活得快乐的。 ”约翰·邓恩说的也没错：“ 没有哪个男人女人或孩子是一座孤岛。 ”阿里斯托芬也是对的：“ 我们的生命需要有别人才完整。 ”我们是一种群体性超强的物种，充满 爱、友谊、帮助、分享及与其他种种可和他人紧密联结的感情。 依恋与感情关系可能会带给我们痛苦，就像萨特（Jean-Paul Sartre）在《禁闭》（No Exit）剧中一角所说：“ 他人即地狱。 ” 不过，他人也是天堂。 第7章 心理的成长 创伤后成长 第一种好处是，一旦你能挺身面对人生的挑战，便可激发自己原本潜藏的能力，而这些能力会改变我们原本对自我秉持的观念。 痛失所爱或饱受创伤后，人们最常学到的道理就是： 我们其实比自己以为的更坚强，而这种认知会给自己带来信心，以面对未来的挑战。 第二种好处则表现在人际关系上。 逆境就像过滤器一样，当医生宣布你得了癌症，或一对不幸的夫妻痛失爱子时，有些亲朋好友会积极相助，表达其支持之意，但有些人则避之不及，原因可能是他们不知如何以对，或他们无法克服自己的窘迫不安。不过，逆境不仅仅让我们知道谁是酒肉朋友，谁是可以患难与共的好友，还会强化人际关系，让人们打开心扉。我们会对自己关心的人表现出爱意，而在患难时关心我们的人，我们会对其心存爱心与感激。 第三种好处是，创伤会改变人生的优先顺序及对当下对他人的看法（充实地过着每天的生活）。 癌症患者常常会领悟到一个道理： 生命其实是老天爷赐予的礼物，但人们都视为理所当然，不知珍惜，总是把钱看得比人自身还重要。 吃得苦中苦，方为人上人吗 依据心理学家罗伯特·埃蒙斯（Robert Emmons）的研究，人们在“个别性调适”这个人格层次所追求的人生目标，大抵可分成以下4类： 工作及成就、人际关系及亲密关系、宗教及精神生活、生产力（对社会的贡献及留给社会的遗产）。 不管追求什么目标，对我们本身基本上都有好处，但是并非所有目标都能带给我们同样的幸福。埃蒙斯发现，平均而言， 全心全意追求成就及财富的人所能享受到的幸福，比不上追求其他目标的人。 悲剧降临时，原有的生活轨道被彻底毁掉，我们被迫面临抉择：是要回到原来的生活轨道，让一切如常，还是要试试其他生活方式？悲剧刚发生的头几个星期或几个月，我们的人生会出现一个机会之窗，因为在这段时间，我们比较愿意接受新的事物。此时，功成名就的念头不复往昔那么诱人，有时我们甚至会怀疑功成名就有何意义。如果此时我们把注意力转移到其他目标——家庭、宗教或助人上，转移至非炫耀性消费上，我们在这个过程中所享受到的乐趣，并非完全受制于个别性调适所产生的效应。当我们转而追求这些目标时，会变得比较快乐，但财富也会跟着缩水（平均而言）。 许多人在历经逆境考验之后会改变自己的人生目标，他们下定决心减少工作时间，多关爱别人，更注重休闲生活。只要在事情发生后头几个月采取行动，这些改变就会持续生根。不过，如果你仅仅只是下决心，没有付诸行动（我绝对不会忘记我的人生新目标），那么你很快就会故态复萌，又回去走功成名就的旧路了。当我们走到这个分岔路时，骑象人可以发挥一定的影响力，但却是“大象”在面对日常生活，它无意识地对环境自动做出反应。逆境之所以是人类追求完善人生发展不可或缺的要素，是因为逆境迫使我们停下脚步，让我们有机会注意到其他歧路，思考我们真正想要的人生终点。 如何从逆境中获益 人们面对危机的方法基本上可分成三种： 积极面对（直接采取行动解决问题）；重新评估（先把自己的想法理清，再找出对自己有利的做法）；逃避（否定或逃避事件的发生，或借酗酒、毒品等的麻醉来压抑自己的情绪反应）。 如果你是个悲观的人，那么你现在很可能正陷于愁云惨雾中，千万别绝望！逆境后能否成长，关键不在于乐观的心态本身，而在于 乐观的人很容易便能找出事件的意义。 如果你能找出一套方法来诠释逆境对你个人的意义，并从中汲取积极的体验，你就能从中获益。 最后一步， 不管你是否做好准备，一旦生活出了问题，在事件发生几个月后，一定要记得拿出一张纸，写下自己的感受。 彭尼贝克建议我们每天持续写15分钟，连续写几天。不要去改写内容，也不要自我检查，更不用管语法或句式对不对，只要放手去写就对了。把事件的经过、自己的感受、为何会有这样的感受，一五一十地写下来。如果不想写，那么对着录音机讲也行。重点就是原原本本把自己的想法及感受表达出来，就算内容杂乱无章也没关系，因为连续几天下来，你所写的文章内容自然就会乱中有序。切记，在做结论之前，一定要好好回答这两个问题： 这个事件为什么会发生？我能从中汲取什么好的教训？ 从创伤中汲取智慧 普鲁斯特曾这么说： 智慧不是别人给的，一定得靠自己去发现，走过无人的荒野，无人可依靠，无人能卸除我们的责任，只有自己的智慧才是最后我们认识这个世界的唯一观点。 近来有关智慧的研究证实普鲁斯特的看法正确无误。知识可分两种： 显性（explicit）知识及默会（tacit）知识。 显性知识是指我们所知的、有意识说出口的、不受时空条件所限制的事实。不管我在何处，我都知道保加利亚的首都是索非亚。学校教的知识就是外显知识，骑象人会去搜集知识，然后整理归档，以备来日推理之用。不过，智慧来自默会知识。默会知识讲的是过程（强调“知其所以然”而不是“知其然”），要获得这类知识不需要别人帮助，而是跟个人的价值观有关。默会知识存在于大象之中，它是大象自人生经验中日积月累磨炼出来的技巧。默会知识还会随时空环境的不同而变化。 不管是想结束一段感情，给朋友意见，还是解决道德争议，都没有放诸四海而皆准的标准做法。 斯滕伯格（Robert J.Sternberg）表示，智慧是一种能让我们在两者间取得平衡的默会知识。 第一，有智慧的人能在自己及他人的需要以及非当下人事物（之后可能因此受到负面影响的组织、环境或人）的需要之间找到平衡点。无知的人看事情非黑即白，他们有一种“坏人一定坏到底”的迷思，而且其受自身利益之影响非常明显。有智慧的人能从别人的角度来看事情，也能了解世事不是非黑即白，中间有深浅不一的灰色地带，所以他会选出一个长期而言对每个人最有利的计划。第二，有智慧的人能平衡地采用以下三种回应方式：自我调适（改变自己以适应环境）、塑造环境（改变环境），以及选择（选择新的环境）。第二种平衡基本上回应了祷文中的这句话：“主，求你赐给我心境坦然之恩，去接受我不能改变的，勇敢去改变我能改变的，并赐给我智慧去分辨认清。”如果你听过这段祷文，那么你的骑象人知道该祷文的内容（外显知识），如果你在生活中实践祷文，那么你的大象也知道祷文的含义（默会知识），此时，你就是一个有智慧的人。 第8章 道德的成长 富兰克林有一种过人天赋： 他能看出事情的潜力，并让它充分展现出来。 每当我全心对付某项缺点，常常就又发现自己别的缺点；只要一不注意，习惯就占了上风；有时，光靠理智是克服不了自己原有习性的。所以我的结论就是，从长远的眼光来看，光是心里以为自己一定能表现出高尚道德，并不足以避掉故态复萌的窘境，在自己能稳定、持续地表现出正直的行为之前，一定得先革除坏习惯，养成好习性。 富兰克林是一位出色的心理学家，他凭直觉就知道只有先把大象训练好，骑象人才可能成功，所以他设计了一套美德训练计划。他列了13项美德，每一项美德都有他应该或不应该做的行为。（比方“节制”：食不过饱；“节俭”：珍惜一丝一缕，但要善待他人及自己；“贞洁”：不可纵欲，但因健康或传宗接代之故则可）。他还印了一个表，上面共分7栏（每一栏代表一星期的每一天）13行（每一行代表每一种美德），每次只要他某一天没有遵守某项美德，他就会在那个小格子里画个黑点。 富兰克林一星期只专注于某项美德，整个星期的重点就是做到那项美德，其他美德先不管，但是如果其他美德他没做好，那么他还是会做记号。如此进行了13个星期后，他又再照表操兵。然后他发现，表上的黑点越来越少。富兰克林在他的自传上写道：“如果我没有进行这个‘道德发展A计划’，我绝对不可能比以前更好、更幸福。”他还说：“我要这么告诉我的子孙，就是靠着这套锦囊妙计，还有上帝的保佑，他们的祖先和我才有办法一辈子享受幸福人生，而且一直到写这段文章的79岁高龄，依旧快意无限。” 古人追求的美德 诚实、正义、勇敢、仁慈、自制、尊敬权威 人为何会迷失在道德迷宫中 我看到正确的道路，也知道该走这条路，但我却走错路，直到内心感觉涌现，推了我一把，才让我走上正途。 积极心理学对美德的解读 由于现代的伦理学忽略具象，使得我们的道德观越来越淡薄—— 表面看似放诸四海皆准，实际什么也没有。 6种美德 智慧与知识、勇气、仁爱、正义、节制（超越原有的自我）。 24种人格优势 1. 智慧 好奇心、对世界的兴趣 热爱学习 判断力、判断性思维、思想开放 创造性、实用智慧、街头智慧 社会智慧、个人智慧、情商 洞察力 2. 勇气 勇敢与勇气 毅力、勤劳、勤勉 正直、真诚、诚实 3. 仁爱 仁慈与慷慨 爱与被爱 4. 正义 公民精神、责任、团队精神、忠诚 公平与公正 领导力 5. 节制 自我控制 谨慎、小心 谦虚 6. 精神卓越 对美和卓越的欣赏 感恩 希望、乐观、展望未来 灵性、目标感、信仰、宗教 宽恕与慈悲 幽默 热忱、热情、热衷 宗教对美德的解读 难题简答：美德本身就是一种回报 难题难答：施比受更有福 美德的未来 科学研究已证实美德假设是成立的，即便将其简化到“ 利他行为对助人者是有好处 ”，这种说法也是成立的。 社会学家涂尔干发现，脱离社会束缚与自杀行为两者互为关联，所以涂尔干想出一个用词——“失范”（anomie）。“失范”是指，一种没有明确规则、规范或价值标准的社会所呈现的状况。 身处失范的社会中，人们可以为所欲为，但人们会因社会缺乏明确标准或权威社会组织来建立价值标准，反而难以找出自己想做之事。失范会让人产生无限空虚及焦虑等感觉，使社会出现更多没有道德及反社会的行为。 第四部分 追寻人生的意义【驭象而奔】 第9章 灵性的觉醒 社会空间的3个维度 在所有人类文化中，群体生活都有两个很清楚的维度： 一个是以水平维度所表示的亲密或喜爱度，另一个则是以垂直维度所表示的阶级或社会地位。 在研究人类的道德情操时得出以下的结论： 不管上帝存不存在，人心很自然便会感受到神性及神圣。 人类无法抗拒神圣 神性的道德规范 人们的道德观念分为三大领域： 自主权的道德规范、群体的道德规范，以及神性的道德规范。 人们依据 自主权的道德规范 来思考与行动，目的在保护个人免受伤害，追求个人最大自主权，以利个人目标的达成。人们遵从 群体的道德规范 ，目的则在于保护团体、家族、公司或国家的完整性，所以其重视服从、忠诚与英明领导等美德。人们遵守 神性的道德规范 ，则是为了保护个人不致堕落，让神性存在于所有人心中。 《摩奴法典》认为， 我们的心中出现神圣经文时，我们的身体不得接触任何令人恶心的污染源，神性必须与恶心隔开，两者永远无法相容。 我们可以成神，也可成魔。这完全取决于你。一个人的行为像恶魔那么邪恶，比如，杀了人，那他就是恶魔。人内心有神性，行为就会像神那么神圣，那么他就像神一样。……我们应该了解一个道理： 我们就是神。如果我们的想法像神那么神圣，我们就会成神，但如果我们的想法像恶魔那么邪恶，我们就会成魔。像恶魔有什么不好？现今的乱世，就是恶魔当道所致。何为神圣的行为？就是不欺骗，不杀戮。这才是完满的人格。内心有神性的人，就是神。 行善者，立显贵，行恶者，显狭卑。去杂污，求纯净。公正存心，即为上帝。 伊利亚德最令人折服的一个论点就是， 人类根本无法抗拒神圣，因为它不断以“隐蔽的宗教形式”出现在现代俗世生活中。 伊利亚德说： 即便是一个最最世俗的人也有他独有的地方，这些地方跟其他地方是完全不同的——这是他出生的地方，他第一次谈恋爱的地方，或是他年轻时第一次造访的外国城市。即使是最不信教的人，这些地方对他个人而言也是意义非凡的，这些地方是他私人世界的“圣地”，他在这些地方所感受到的真实，是他日常生活中无法感受到的。 敬畏与超越 哲学家康德曾说过，真正让他心存敬畏的有两样东西： 人头顶上的星空以及人心中的道德戒律。 自由的滋味 想要预先体验这种自由的滋味，方法很多，有人说 欣赏伟大艺术品、听交响乐或听演讲 ，都会让人产生类似宗教的体验。 敬畏，一种自我超越的情绪 詹姆斯认为最重要的一项真理就是， 人类是以分裂的自我在体验人生，往往被互相冲突的欲望搞得支离破碎。 不管信不信上帝，宗教体验其实很真实，也很普遍，而且这些宗教体验常常让人产生完整、平和之感。 为何“自我”成了追求精神提升的障碍 “自我”是人类追求精神提升的一大障碍，理由有三。 第一，日常琐事接续不断，以自我为中心的思考模式，让我们困于物质的世俗世界中动弹不得，因而无法感受到神圣及神性。 这就是为什么东方的宗教会这么强调沉思冥想的原因，因为沉思是让自我安静下来的有效方法。 第二，精神层面的改变本质上就是自我的转变。 削弱它、裁剪它，从某个角度而言，就是杀了它，但“自我”一定会全力反对。要我放弃我的财产及尊荣？门儿都没有！不计前嫌，爱我的敌人？想都别想！ 第三，追寻精神层面的提升与成长是一条漫漫长路，需花很多年的时间不断沉思冥想、祈祷、自制，有时候还要否定“自我”。 “自我”不喜欢被否定，“自我”很会找理由去扭曲或欺骗。很多宗教都这么教诲人们：“自我”对享乐与名利的依恋诱使人们离开美德的道路。从某个角度而言，“自我”是撒旦，如果不是，至少也是“撒旦”的入口。 从以上的分析我们可以了解，“自我”为何是神性道德的难题。巨大而贪婪的自我有如一堵砖墙，压制住我们的灵魂。我相信，只有从这个角度来看待自我，我们才能理解，甚至尊重那些希冀自己所处的社会能更符合所信仰的宗教的人的内心道德动机。 “平面国”与文化论战 作者华理克（Rick Warren）在书中指出，“自我”是人生许多问题的根源，所以大人以奖赏、赞美及运动来提升孩子的自尊心，让孩子觉得自己“与众不同”，这其实是非常错误的。神性道德规范的核心思想为： 每个人的内在皆有神性，所以理想的社会是要帮助人们找出一种可与神性和谐一致的生活方式。个人的欲望并不重要——许多欲望都出自肉身。 我认为让神性的道德规范取代自主权的道德规范，来管理多元的现代民主社会是非常危险的。不过，我也相信，如果完全忽视神性的道德规范，我们的生活就会变得丑陋，内心永远无法满足。 第10章 人生的意义 旧约《圣经·传道书》的作者，我也认为 “我看过日光之下所发生的一切事，不料，一切都是虚空，都是捕风”。 什么能令你感受到“人生本身”的目的 爱与工作 如果人像植物，那么我们需要哪些条件才能活得生气勃勃？在第5章的幸福方程式中，幸福（H）=幸福的范围（S）+生活条件（C）+自己可以控制的因素（V），到底需要哪些条件？我在第6章已告诉大家， 最重要的条件是爱 ，没有哪个人是孤岛，男女老少都一样。人是群居性超强的生物，没有朋友，没有安全的依恋，我们不可能快乐起来。第二个最重要的条件，则是 拥有且追寻正确的目标，让自己体验到那种心流与投入的感觉。 在弗洛伊德之前，托尔斯泰便曾说过： “只要人知道如何工作，如何爱人，人就可以在这世上活得更精彩，我们要为自己所爱的人工作，也要热爱自己的工作。” 怀特称此为“效能动机”（effectance motive），他将其定义为 人内心想通过与环境互动，进而控制自己的环境，以发展能力的一种需求及冲动。 怀特认为效能需求一直持续出现在我们生活之中： 面对环境，意味着我们得逐渐改变自己与环境间的关系。因为过程中没有明显的高潮，所以我们只能在一连串互动关系中通过行为来寻求满足，而不是以达到目标来满足自己。 大部分人对工作所秉持的态度可分为以下三种：把工作当做一份 “差事” ，视工作为一份 职业 ，或把工作当做一种 事业 。 如果你把自己的工作当做一份差事 ，单单只为了赚钱才做这份工作，那么你上班的时候一定常常瞪着时钟，一心巴望着周末赶快到来，同时你可能会有自己的嗜好，而这份嗜好远比你的工作更能满足你心中的效能需求。 如果你把自己的工作当做一份职业 ，你就会为自己订下目标，希望自己能从工作中得到升迁及名声。你会全身带劲地追求这些目标，有时候还会把工作带回家，因为你一心只想把工作做好。不过，有时候你还是不禁心想，自己为什么要工作得这么辛苦。偶尔你可能会觉得自己的工作简直就像老鼠赛跑一样，每个人都是为了竞争而竞争。 然而，如果你把工作当做一种事业 ，那么你会觉得自己的工作就是在实现自己的抱负——你不是为了其他目的才做这份工作。你会时常在工作时体验到那股心流，你不会总是期待“下班的解放时刻”，也不会有一股冲动想大喊：“谢天谢地，今天终于星期五了！”如果你突然变得富裕起来，你或许会连没有酬劳也不在意，而旦还一直不停地工作。 全心投入 希斯赞特米哈伊发现，这群人追寻理想的过程各有其独特之处，但是大方向是一致的： 都是一开始对某个领域充满兴趣，沉醉其中，享受到片刻的心流体验，经过多年的投入，与相关的人、事及核心价值建立起紧密的关系，进而享受到更久的心流体验。 跨层次一致性 我们在分析人的个性时，就发现了这种跨层次的一致性： 如果个人较低层次的个人特质能跟自己的应变机制互相配合，且后者又能跟自己的人生故事相连贯，那么你的个性就会很一致，你的人生就能一路前进。一旦这几个层次彼此无法连贯一致，我们就会饱受内在矛盾及神经官能性冲突所苦。这时，你可能需要逆境的洗礼，才有办法重新调整自己的人生。当一切连贯起来，所有事情都联结一致之时，这可能是你人生最重要的一刻。 就像前面所提到中途才进戏院看电影的人，后来终于了解前半小时没看到的情节一样，你的人生会在突然之间变得更有意义。为不同层次找出彼此的一致性，感觉很像被启蒙一般，也是我们在回答“人生本身目的为何”这个问题时的一大关键。 群体选择 达尔文认为，团体跟个人一样，彼此之间也是互相竞争，所以致胜的心理特质——如爱国、勇敢及利他等，应该会像其他特质一样扩及整个团体。 威尔森指出， 人类的进化同时发生于两个层面：基因层面及文化层面。 超越自我的意义感 要成为苏菲教派的信徒，第一步就是要 净化内心 ，把心中所有不属于上帝的部分都清除干净。第二步则是 过一种静思默想的生活 ，即透过谦卑的祈祷，让自己得以摆脱激动不安的灵魂，冥想上帝的种种，此时你的心会整个被吞没。不过，这只是成为苏菲教派信徒的开始，苏菲教派最后追求的是 全神贯注在上帝身上。 麦克尼尔在《同在一起》（KeepingTogether in Time）一书中提出如下结论： 人类历史自有正式记载以来，便已开始运用同步动作使团体成员间形成和谐及凝聚力，有时则是为激起抗敌的斗志。 幸福之道在中庸 个体选择让我们变成自私的生物，为了争夺资源、享受快乐及名声，无所不用其极，但是群体选择又让我们变成蜂群那样的生物，愿意牺牲小我，成就大我。人是群居的生物，需要爱及依恋；人也是勤奋的生物，内心有效能感需要满足，也有能力全心投入自己的工作。 幸福之道在中庸。幸福不是我们能够直接找到、获得或实现的东西，必须先具备一定条件，然后再耐心等待。有些条件在自己本身，比如个人性格的不同层次及部分的连贯一致，有些条件则在自己与其他事物间的关系：就跟植物需要阳光、水及土壤才能成长、繁茂一样，人需要爱与工作、全心投入，人也像蜂群一样，能从群体之中感受到超越自我的意义感。只有这样，才能过拥有有意义的人生。因此，只要你能与这几个客体之间建立美满的关系，人生的目的及意义就会自然浮现出来。你会意识到，你的人生是好的。 最后的话 幸福自现：平衡为美 没有对立，就没有进步。吸引与厌恶，理智与冲动，爱与恨，都是人类生存之必需。——英国诗人、版画家，威廉·布莱克 东方及西方对人生所采取的态度也是完全相反：东方强调接受现实， 以集体为重 ；西方则是 鼓励大家不断奋斗，强调个人 。不过，东西方的态度都有其可取之处。 人想追求快乐，不只要改变自己，还需要改变外在世界。我们在追求自己目标的同时，也要与他人协调共处。不同的人在不同人生阶段，会采取不同的态度来应对。 文化心理学有一句名言： 每种文化都会在人类生存的某些层面发展出其特长之处，但是没有任何一个文化能兼顾所有人类生存的层面。 一个没有自由派的社会，对许多人而言是一个严酷暴虐的社会，而一个没有保守派的社会，则会出现涂尔干所说的社会结构及束缚解体的乱象。人越自由，社会就越混乱。想寻找人生的智慧，就要从自己最想不到的地方开始——死对头的“内心”。自己阵营的想法，你已知之甚详，如果你能放下“对方是恶魔”这样的心理，你可能就会第一次发现对方的想法也有其可取之处。以中庸之道（平衡），找寻人生的智慧——不管是古与今，东方与西方，甚至保守与自由，中庸之道都可让我们选择正确的人生方向，找到人生的满足、幸福及意义。人生不单单只是选定目的地，然后一直走过去——骑象人没有这么大的能耐。不过，只要善用人类的智慧及科学知识，我们就能驾驭大象，掌握自己的潜能与限度，拥有充满智慧的人生。 简介 内容简介 人类的心理，有一半正如一头桀傲不驯的大象，而另一半则是像是一个理智的骑象人。这两个分裂的部份，造成人们常陷与理智与非理智的思想争战中。 作者学贯中西，融合心理学、哲学、伦理学、宗教、人类学多学科知识，大量引用古今东西方哲学、文学与宗教中有关心理的看法，继而以现今神经科学与社会心理学的研究成果，来验证这些古老的智慧，作为实证论述的基础，除了让人看到整个20世纪心理学与精神医学曾经是多么地扭曲，同时也积极正面地提出了人类如何可以寻找到快乐与生命的意义，帮助自己在人际关系、心理层面与道德层次成长。这种有关“积极心理学”的讨论书籍，是国内较少出现的心理学科普作品类型。 作者简介 乔纳森·海特，著名积极心理学家。他在宾夕法尼亚大学攻读社会心理学，获得哲学博士学位后，来到芝加哥大学研究文化心理学。1999年以来积极投身于“积极心理学运动”，成为积极心理学的先锋派领袖之一。 2001年，他以对积极心理学的杰出贡献以及对“提升感”的研究，获得“坦普尔顿奖（JohnTempleton）”，为他赢得了极高的声誉。 坦普尔顿奖是当今国际奖金最高的奖，以比诺贝尔奖更高的奖金额而闻名，奖励在“精神领域”的研究中有非凡杰出成就、有助于增进人类神圣创造力的人士，每年只有四位领域的顶尖人士才能获此殊荣,特雷莎修女是该奖的第一个获得者。"}]}},"staticQueryHashes":[]}